//
// BusinessTransactionAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class BusinessTransactionAPI: APIBase {
    /**
     
     Search businessTransactions by filter
     
     - parameter filter: (query) Query string, used to filter results. (optional)
     - parameter page: (query) Result page number.  Defaults to 1. (optional)
     - parameter limit: (query) Maximum results per page.  Defaults to 20.  Max allowed value is 250. (optional)
     - parameter sort: (query) Sort results by specified field. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getBusinessTransactionByFilter(filter filter: String?, page: Int?, limit: Int?, sort: String?, completion: ((data: [BusinessTransaction]?, error: ErrorType?) -> Void)) {
        getBusinessTransactionByFilterWithRequestBuilder(filter: filter, page: page, limit: limit, sort: sort).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Search businessTransactions by filter
     
     - GET /v2.0/businessTransaction/search
     - Returns the list of businessTransactions that match the given filter.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     - examples: [{contentType=application/json, example=[ {
  "queueName" : "aeiou",
  "modifyDate" : "2000-01-23T04:56:07.000+0000",
  "messageBody" : "aeiou",
  "customFields" : {
    "key" : "{}"
  },
  "serverName" : "aeiou",
  "id" : 123,
  "createDate" : "2000-01-23T04:56:07.000+0000",
  "lobId" : 123,
  "status" : "aeiou"
} ]}]
     
     - parameter filter: (query) Query string, used to filter results. (optional)
     - parameter page: (query) Result page number.  Defaults to 1. (optional)
     - parameter limit: (query) Maximum results per page.  Defaults to 20.  Max allowed value is 250. (optional)
     - parameter sort: (query) Sort results by specified field. (optional)

     - returns: RequestBuilder<[BusinessTransaction]> 
     */
    public class func getBusinessTransactionByFilterWithRequestBuilder(filter filter: String?, page: Int?, limit: Int?, sort: String?) -> RequestBuilder<[BusinessTransaction]> {
        let path = "/v2.0/businessTransaction/search"
        let URLString = InfoplusAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "filter": filter,
            "page": page,
            "limit": limit,
            "sort": sort
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<[BusinessTransaction]>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Get a businessTransaction by id
     
     - parameter businessTransactionId: (path) Id of the businessTransaction to be returned. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getBusinessTransactionById(businessTransactionId businessTransactionId: Int, completion: ((data: BusinessTransaction?, error: ErrorType?) -> Void)) {
        getBusinessTransactionByIdWithRequestBuilder(businessTransactionId: businessTransactionId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Get a businessTransaction by id
     
     - GET /v2.0/businessTransaction/{businessTransactionId}
     - Returns the businessTransaction identified by the specified id.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     - examples: [{contentType=application/json, example={
  "queueName" : "aeiou",
  "modifyDate" : "2000-01-23T04:56:07.000+0000",
  "messageBody" : "aeiou",
  "customFields" : {
    "key" : "{}"
  },
  "serverName" : "aeiou",
  "id" : 123,
  "createDate" : "2000-01-23T04:56:07.000+0000",
  "lobId" : 123,
  "status" : "aeiou"
}}]
     
     - parameter businessTransactionId: (path) Id of the businessTransaction to be returned. 

     - returns: RequestBuilder<BusinessTransaction> 
     */
    public class func getBusinessTransactionByIdWithRequestBuilder(businessTransactionId businessTransactionId: Int) -> RequestBuilder<BusinessTransaction> {
        var path = "/v2.0/businessTransaction/{businessTransactionId}"
        path = path.stringByReplacingOccurrencesOfString("{businessTransactionId}", withString: "\(businessTransactionId)", options: .LiteralSearch, range: nil)
        let URLString = InfoplusAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<BusinessTransaction>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Get a duplicated a businessTransaction by id
     
     - parameter businessTransactionId: (path) Id of the businessTransaction to be duplicated. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getDuplicateBusinessTransactionById(businessTransactionId businessTransactionId: Int, completion: ((data: BusinessTransaction?, error: ErrorType?) -> Void)) {
        getDuplicateBusinessTransactionByIdWithRequestBuilder(businessTransactionId: businessTransactionId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Get a duplicated a businessTransaction by id
     
     - GET /v2.0/businessTransaction/duplicate/{businessTransactionId}
     - Returns a duplicated businessTransaction identified by the specified id.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     - examples: [{contentType=application/json, example={
  "queueName" : "aeiou",
  "modifyDate" : "2000-01-23T04:56:07.000+0000",
  "messageBody" : "aeiou",
  "customFields" : {
    "key" : "{}"
  },
  "serverName" : "aeiou",
  "id" : 123,
  "createDate" : "2000-01-23T04:56:07.000+0000",
  "lobId" : 123,
  "status" : "aeiou"
}}]
     
     - parameter businessTransactionId: (path) Id of the businessTransaction to be duplicated. 

     - returns: RequestBuilder<BusinessTransaction> 
     */
    public class func getDuplicateBusinessTransactionByIdWithRequestBuilder(businessTransactionId businessTransactionId: Int) -> RequestBuilder<BusinessTransaction> {
        var path = "/v2.0/businessTransaction/duplicate/{businessTransactionId}"
        path = path.stringByReplacingOccurrencesOfString("{businessTransactionId}", withString: "\(businessTransactionId)", options: .LiteralSearch, range: nil)
        let URLString = InfoplusAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<BusinessTransaction>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Update a businessTransaction custom fields
     
     - parameter body: (body) BusinessTransaction to be updated. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateBusinessTransactionCustomFields(body body: BusinessTransaction, completion: ((error: ErrorType?) -> Void)) {
        updateBusinessTransactionCustomFieldsWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     
     Update a businessTransaction custom fields
     
     - PUT /v2.0/businessTransaction/customFields
     - Updates an existing businessTransaction custom fields using the specified data.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     
     - parameter body: (body) BusinessTransaction to be updated. 

     - returns: RequestBuilder<Void> 
     */
    public class func updateBusinessTransactionCustomFieldsWithRequestBuilder(body body: BusinessTransaction) -> RequestBuilder<Void> {
        let path = "/v2.0/businessTransaction/customFields"
        let URLString = InfoplusAPI.basePath + path
        
        let parameters = body.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<Void>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: true)
    }

}
