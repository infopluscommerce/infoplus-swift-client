//
// FinanceSystemConnectionAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class FinanceSystemConnectionAPI: APIBase {
    /**
     Create a financeSystemConnection
     
     - parameter body: (body) FinanceSystemConnection to be inserted. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func addFinanceSystemConnection(body body: FinanceSystemConnection, completion: ((data: FinanceSystemConnection?, error: ErrorType?) -> Void)) {
        addFinanceSystemConnectionWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create a financeSystemConnection
     - POST /beta/financeSystemConnection
     - Inserts a new financeSystemConnection using the specified data.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     - examples: [{contentType=application/json, example={
  "orderSourceId" : 5,
  "clientId" : 5,
  "financeSystemSKUFieldToMap" : "financeSystemSKUFieldToMap",
  "modifyDate" : "2000-01-23T04:56:07.000+00:00",
  "infoplusSKUFieldToMap" : "infoplusSKUFieldToMap",
  "customFields" : {
    "key" : "{}"
  },
  "active" : false,
  "integrationPartnerId" : 2,
  "environment" : "environment",
  "scriptId" : 7,
  "warehouseId" : 1,
  "name" : "name",
  "id" : 0,
  "financeSystemConnectionType" : "financeSystemConnectionType",
  "createDate" : "2000-01-23T04:56:07.000+00:00",
  "lobId" : 6
}}]
     
     - parameter body: (body) FinanceSystemConnection to be inserted. 

     - returns: RequestBuilder<FinanceSystemConnection> 
     */
    public class func addFinanceSystemConnectionWithRequestBuilder(body body: FinanceSystemConnection) -> RequestBuilder<FinanceSystemConnection> {
        let path = "/beta/financeSystemConnection"
        let URLString = InfoplusAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<FinanceSystemConnection>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Add new audit for a financeSystemConnection
     
     - parameter financeSystemConnectionId: (path) Id of the financeSystemConnection to add an audit to 
     - parameter financeSystemConnectionAudit: (path) The audit to add 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func addFinanceSystemConnectionAudit(financeSystemConnectionId financeSystemConnectionId: Int32, financeSystemConnectionAudit: String, completion: ((error: ErrorType?) -> Void)) {
        addFinanceSystemConnectionAuditWithRequestBuilder(financeSystemConnectionId: financeSystemConnectionId, financeSystemConnectionAudit: financeSystemConnectionAudit).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Add new audit for a financeSystemConnection
     - PUT /beta/financeSystemConnection/{financeSystemConnectionId}/audit/{financeSystemConnectionAudit}
     - Adds an audit to an existing financeSystemConnection.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     
     - parameter financeSystemConnectionId: (path) Id of the financeSystemConnection to add an audit to 
     - parameter financeSystemConnectionAudit: (path) The audit to add 

     - returns: RequestBuilder<Void> 
     */
    public class func addFinanceSystemConnectionAuditWithRequestBuilder(financeSystemConnectionId financeSystemConnectionId: Int32, financeSystemConnectionAudit: String) -> RequestBuilder<Void> {
        var path = "/beta/financeSystemConnection/{financeSystemConnectionId}/audit/{financeSystemConnectionAudit}"
        path = path.stringByReplacingOccurrencesOfString("{financeSystemConnectionId}", withString: "\(financeSystemConnectionId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{financeSystemConnectionAudit}", withString: "\(financeSystemConnectionAudit)", options: .LiteralSearch, range: nil)
        let URLString = InfoplusAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Attach a file to a financeSystemConnection
     
     - parameter financeSystemConnectionId: (path) Id of the financeSystemConnection to add a file to 
     - parameter fileName: (path) Name of file 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func addFinanceSystemConnectionFile(financeSystemConnectionId financeSystemConnectionId: Int32, fileName: String, completion: ((error: ErrorType?) -> Void)) {
        addFinanceSystemConnectionFileWithRequestBuilder(financeSystemConnectionId: financeSystemConnectionId, fileName: fileName).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Attach a file to a financeSystemConnection
     - POST /beta/financeSystemConnection/{financeSystemConnectionId}/file/{fileName}
     - Adds a file to an existing financeSystemConnection.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     
     - parameter financeSystemConnectionId: (path) Id of the financeSystemConnection to add a file to 
     - parameter fileName: (path) Name of file 

     - returns: RequestBuilder<Void> 
     */
    public class func addFinanceSystemConnectionFileWithRequestBuilder(financeSystemConnectionId financeSystemConnectionId: Int32, fileName: String) -> RequestBuilder<Void> {
        var path = "/beta/financeSystemConnection/{financeSystemConnectionId}/file/{fileName}"
        path = path.stringByReplacingOccurrencesOfString("{financeSystemConnectionId}", withString: "\(financeSystemConnectionId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{fileName}", withString: "\(fileName)", options: .LiteralSearch, range: nil)
        let URLString = InfoplusAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Attach a file to a financeSystemConnection by URL.
     
     - parameter body: (body) The url and optionly fileName to be used. 
     - parameter financeSystemConnectionId: (path) Id of the financeSystemConnection to add an file to 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func addFinanceSystemConnectionFileByURL(body body: RecordFile, financeSystemConnectionId: Int32, completion: ((error: ErrorType?) -> Void)) {
        addFinanceSystemConnectionFileByURLWithRequestBuilder(body: body, financeSystemConnectionId: financeSystemConnectionId).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Attach a file to a financeSystemConnection by URL.
     - POST /beta/financeSystemConnection/{financeSystemConnectionId}/file
     - Adds a file to an existing financeSystemConnection by URL.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     
     - parameter body: (body) The url and optionly fileName to be used. 
     - parameter financeSystemConnectionId: (path) Id of the financeSystemConnection to add an file to 

     - returns: RequestBuilder<Void> 
     */
    public class func addFinanceSystemConnectionFileByURLWithRequestBuilder(body body: RecordFile, financeSystemConnectionId: Int32) -> RequestBuilder<Void> {
        var path = "/beta/financeSystemConnection/{financeSystemConnectionId}/file"
        path = path.stringByReplacingOccurrencesOfString("{financeSystemConnectionId}", withString: "\(financeSystemConnectionId)", options: .LiteralSearch, range: nil)
        let URLString = InfoplusAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Add new tags for a financeSystemConnection.
     
     - parameter financeSystemConnectionId: (path) Id of the financeSystemConnection to add a tag to 
     - parameter financeSystemConnectionTag: (path) The tag to add 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func addFinanceSystemConnectionTag(financeSystemConnectionId financeSystemConnectionId: Int32, financeSystemConnectionTag: String, completion: ((error: ErrorType?) -> Void)) {
        addFinanceSystemConnectionTagWithRequestBuilder(financeSystemConnectionId: financeSystemConnectionId, financeSystemConnectionTag: financeSystemConnectionTag).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Add new tags for a financeSystemConnection.
     - PUT /beta/financeSystemConnection/{financeSystemConnectionId}/tag/{financeSystemConnectionTag}
     - Adds a tag to an existing financeSystemConnection.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     
     - parameter financeSystemConnectionId: (path) Id of the financeSystemConnection to add a tag to 
     - parameter financeSystemConnectionTag: (path) The tag to add 

     - returns: RequestBuilder<Void> 
     */
    public class func addFinanceSystemConnectionTagWithRequestBuilder(financeSystemConnectionId financeSystemConnectionId: Int32, financeSystemConnectionTag: String) -> RequestBuilder<Void> {
        var path = "/beta/financeSystemConnection/{financeSystemConnectionId}/tag/{financeSystemConnectionTag}"
        path = path.stringByReplacingOccurrencesOfString("{financeSystemConnectionId}", withString: "\(financeSystemConnectionId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{financeSystemConnectionTag}", withString: "\(financeSystemConnectionTag)", options: .LiteralSearch, range: nil)
        let URLString = InfoplusAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete a financeSystemConnection
     
     - parameter financeSystemConnectionId: (path) Id of the financeSystemConnection to be deleted. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteFinanceSystemConnection(financeSystemConnectionId financeSystemConnectionId: Int32, completion: ((error: ErrorType?) -> Void)) {
        deleteFinanceSystemConnectionWithRequestBuilder(financeSystemConnectionId: financeSystemConnectionId).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Delete a financeSystemConnection
     - DELETE /beta/financeSystemConnection/{financeSystemConnectionId}
     - Deletes the financeSystemConnection identified by the specified id.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     
     - parameter financeSystemConnectionId: (path) Id of the financeSystemConnection to be deleted. 

     - returns: RequestBuilder<Void> 
     */
    public class func deleteFinanceSystemConnectionWithRequestBuilder(financeSystemConnectionId financeSystemConnectionId: Int32) -> RequestBuilder<Void> {
        var path = "/beta/financeSystemConnection/{financeSystemConnectionId}"
        path = path.stringByReplacingOccurrencesOfString("{financeSystemConnectionId}", withString: "\(financeSystemConnectionId)", options: .LiteralSearch, range: nil)
        let URLString = InfoplusAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete a file for a financeSystemConnection.
     
     - parameter financeSystemConnectionId: (path) Id of the financeSystemConnection to remove file from 
     - parameter fileId: (path) Id of the file to delete 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteFinanceSystemConnectionFile(financeSystemConnectionId financeSystemConnectionId: Int32, fileId: Int32, completion: ((error: ErrorType?) -> Void)) {
        deleteFinanceSystemConnectionFileWithRequestBuilder(financeSystemConnectionId: financeSystemConnectionId, fileId: fileId).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Delete a file for a financeSystemConnection.
     - DELETE /beta/financeSystemConnection/{financeSystemConnectionId}/file/{fileId}
     - Deletes an existing financeSystemConnection file using the specified data.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     
     - parameter financeSystemConnectionId: (path) Id of the financeSystemConnection to remove file from 
     - parameter fileId: (path) Id of the file to delete 

     - returns: RequestBuilder<Void> 
     */
    public class func deleteFinanceSystemConnectionFileWithRequestBuilder(financeSystemConnectionId financeSystemConnectionId: Int32, fileId: Int32) -> RequestBuilder<Void> {
        var path = "/beta/financeSystemConnection/{financeSystemConnectionId}/file/{fileId}"
        path = path.stringByReplacingOccurrencesOfString("{financeSystemConnectionId}", withString: "\(financeSystemConnectionId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{fileId}", withString: "\(fileId)", options: .LiteralSearch, range: nil)
        let URLString = InfoplusAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete a tag for a financeSystemConnection.
     
     - parameter financeSystemConnectionId: (path) Id of the financeSystemConnection to remove tag from 
     - parameter financeSystemConnectionTag: (path) The tag to delete 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteFinanceSystemConnectionTag(financeSystemConnectionId financeSystemConnectionId: Int32, financeSystemConnectionTag: String, completion: ((error: ErrorType?) -> Void)) {
        deleteFinanceSystemConnectionTagWithRequestBuilder(financeSystemConnectionId: financeSystemConnectionId, financeSystemConnectionTag: financeSystemConnectionTag).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Delete a tag for a financeSystemConnection.
     - DELETE /beta/financeSystemConnection/{financeSystemConnectionId}/tag/{financeSystemConnectionTag}
     - Deletes an existing financeSystemConnection tag using the specified data.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     
     - parameter financeSystemConnectionId: (path) Id of the financeSystemConnection to remove tag from 
     - parameter financeSystemConnectionTag: (path) The tag to delete 

     - returns: RequestBuilder<Void> 
     */
    public class func deleteFinanceSystemConnectionTagWithRequestBuilder(financeSystemConnectionId financeSystemConnectionId: Int32, financeSystemConnectionTag: String) -> RequestBuilder<Void> {
        var path = "/beta/financeSystemConnection/{financeSystemConnectionId}/tag/{financeSystemConnectionTag}"
        path = path.stringByReplacingOccurrencesOfString("{financeSystemConnectionId}", withString: "\(financeSystemConnectionId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{financeSystemConnectionTag}", withString: "\(financeSystemConnectionTag)", options: .LiteralSearch, range: nil)
        let URLString = InfoplusAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get a duplicated a financeSystemConnection by id
     
     - parameter financeSystemConnectionId: (path) Id of the financeSystemConnection to be duplicated. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getDuplicateFinanceSystemConnectionById(financeSystemConnectionId financeSystemConnectionId: Int32, completion: ((data: FinanceSystemConnection?, error: ErrorType?) -> Void)) {
        getDuplicateFinanceSystemConnectionByIdWithRequestBuilder(financeSystemConnectionId: financeSystemConnectionId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a duplicated a financeSystemConnection by id
     - GET /beta/financeSystemConnection/duplicate/{financeSystemConnectionId}
     - Returns a duplicated financeSystemConnection identified by the specified id.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     - examples: [{contentType=application/json, example={
  "orderSourceId" : 5,
  "clientId" : 5,
  "financeSystemSKUFieldToMap" : "financeSystemSKUFieldToMap",
  "modifyDate" : "2000-01-23T04:56:07.000+00:00",
  "infoplusSKUFieldToMap" : "infoplusSKUFieldToMap",
  "customFields" : {
    "key" : "{}"
  },
  "active" : false,
  "integrationPartnerId" : 2,
  "environment" : "environment",
  "scriptId" : 7,
  "warehouseId" : 1,
  "name" : "name",
  "id" : 0,
  "financeSystemConnectionType" : "financeSystemConnectionType",
  "createDate" : "2000-01-23T04:56:07.000+00:00",
  "lobId" : 6
}}]
     
     - parameter financeSystemConnectionId: (path) Id of the financeSystemConnection to be duplicated. 

     - returns: RequestBuilder<FinanceSystemConnection> 
     */
    public class func getDuplicateFinanceSystemConnectionByIdWithRequestBuilder(financeSystemConnectionId financeSystemConnectionId: Int32) -> RequestBuilder<FinanceSystemConnection> {
        var path = "/beta/financeSystemConnection/duplicate/{financeSystemConnectionId}"
        path = path.stringByReplacingOccurrencesOfString("{financeSystemConnectionId}", withString: "\(financeSystemConnectionId)", options: .LiteralSearch, range: nil)
        let URLString = InfoplusAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<FinanceSystemConnection>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Search financeSystemConnections by filter
     
     - parameter filter: (query) Query string, used to filter results. (optional)
     - parameter page: (query) Result page number.  Defaults to 1. (optional)
     - parameter limit: (query) Maximum results per page.  Defaults to 20.  Max allowed value is 250. (optional)
     - parameter sort: (query) Sort results by specified field. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getFinanceSystemConnectionByFilter(filter filter: String? = nil, page: Int32? = nil, limit: Int32? = nil, sort: String? = nil, completion: ((data: [FinanceSystemConnection]?, error: ErrorType?) -> Void)) {
        getFinanceSystemConnectionByFilterWithRequestBuilder(filter: filter, page: page, limit: limit, sort: sort).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Search financeSystemConnections by filter
     - GET /beta/financeSystemConnection/search
     - Returns the list of financeSystemConnections that match the given filter.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     - examples: [{contentType=application/json, example=[ {
  "orderSourceId" : 5,
  "clientId" : 5,
  "financeSystemSKUFieldToMap" : "financeSystemSKUFieldToMap",
  "modifyDate" : "2000-01-23T04:56:07.000+00:00",
  "infoplusSKUFieldToMap" : "infoplusSKUFieldToMap",
  "customFields" : {
    "key" : "{}"
  },
  "active" : false,
  "integrationPartnerId" : 2,
  "environment" : "environment",
  "scriptId" : 7,
  "warehouseId" : 1,
  "name" : "name",
  "id" : 0,
  "financeSystemConnectionType" : "financeSystemConnectionType",
  "createDate" : "2000-01-23T04:56:07.000+00:00",
  "lobId" : 6
}, {
  "orderSourceId" : 5,
  "clientId" : 5,
  "financeSystemSKUFieldToMap" : "financeSystemSKUFieldToMap",
  "modifyDate" : "2000-01-23T04:56:07.000+00:00",
  "infoplusSKUFieldToMap" : "infoplusSKUFieldToMap",
  "customFields" : {
    "key" : "{}"
  },
  "active" : false,
  "integrationPartnerId" : 2,
  "environment" : "environment",
  "scriptId" : 7,
  "warehouseId" : 1,
  "name" : "name",
  "id" : 0,
  "financeSystemConnectionType" : "financeSystemConnectionType",
  "createDate" : "2000-01-23T04:56:07.000+00:00",
  "lobId" : 6
} ]}]
     
     - parameter filter: (query) Query string, used to filter results. (optional)
     - parameter page: (query) Result page number.  Defaults to 1. (optional)
     - parameter limit: (query) Maximum results per page.  Defaults to 20.  Max allowed value is 250. (optional)
     - parameter sort: (query) Sort results by specified field. (optional)

     - returns: RequestBuilder<[FinanceSystemConnection]> 
     */
    public class func getFinanceSystemConnectionByFilterWithRequestBuilder(filter filter: String? = nil, page: Int32? = nil, limit: Int32? = nil, sort: String? = nil) -> RequestBuilder<[FinanceSystemConnection]> {
        let path = "/beta/financeSystemConnection/search"
        let URLString = InfoplusAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "filter": filter,
            "page": page?.encodeToJSON(),
            "limit": limit?.encodeToJSON(),
            "sort": sort
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[FinanceSystemConnection]>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get a financeSystemConnection by id
     
     - parameter financeSystemConnectionId: (path) Id of the financeSystemConnection to be returned. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getFinanceSystemConnectionById(financeSystemConnectionId financeSystemConnectionId: Int32, completion: ((data: FinanceSystemConnection?, error: ErrorType?) -> Void)) {
        getFinanceSystemConnectionByIdWithRequestBuilder(financeSystemConnectionId: financeSystemConnectionId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a financeSystemConnection by id
     - GET /beta/financeSystemConnection/{financeSystemConnectionId}
     - Returns the financeSystemConnection identified by the specified id.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     - examples: [{contentType=application/json, example={
  "orderSourceId" : 5,
  "clientId" : 5,
  "financeSystemSKUFieldToMap" : "financeSystemSKUFieldToMap",
  "modifyDate" : "2000-01-23T04:56:07.000+00:00",
  "infoplusSKUFieldToMap" : "infoplusSKUFieldToMap",
  "customFields" : {
    "key" : "{}"
  },
  "active" : false,
  "integrationPartnerId" : 2,
  "environment" : "environment",
  "scriptId" : 7,
  "warehouseId" : 1,
  "name" : "name",
  "id" : 0,
  "financeSystemConnectionType" : "financeSystemConnectionType",
  "createDate" : "2000-01-23T04:56:07.000+00:00",
  "lobId" : 6
}}]
     
     - parameter financeSystemConnectionId: (path) Id of the financeSystemConnection to be returned. 

     - returns: RequestBuilder<FinanceSystemConnection> 
     */
    public class func getFinanceSystemConnectionByIdWithRequestBuilder(financeSystemConnectionId financeSystemConnectionId: Int32) -> RequestBuilder<FinanceSystemConnection> {
        var path = "/beta/financeSystemConnection/{financeSystemConnectionId}"
        path = path.stringByReplacingOccurrencesOfString("{financeSystemConnectionId}", withString: "\(financeSystemConnectionId)", options: .LiteralSearch, range: nil)
        let URLString = InfoplusAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<FinanceSystemConnection>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get the files for a financeSystemConnection.
     
     - parameter financeSystemConnectionId: (path) Id of the financeSystemConnection to get files for 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getFinanceSystemConnectionFiles(financeSystemConnectionId financeSystemConnectionId: Int32, completion: ((error: ErrorType?) -> Void)) {
        getFinanceSystemConnectionFilesWithRequestBuilder(financeSystemConnectionId: financeSystemConnectionId).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Get the files for a financeSystemConnection.
     - GET /beta/financeSystemConnection/{financeSystemConnectionId}/file
     - Get all existing financeSystemConnection files.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     
     - parameter financeSystemConnectionId: (path) Id of the financeSystemConnection to get files for 

     - returns: RequestBuilder<Void> 
     */
    public class func getFinanceSystemConnectionFilesWithRequestBuilder(financeSystemConnectionId financeSystemConnectionId: Int32) -> RequestBuilder<Void> {
        var path = "/beta/financeSystemConnection/{financeSystemConnectionId}/file"
        path = path.stringByReplacingOccurrencesOfString("{financeSystemConnectionId}", withString: "\(financeSystemConnectionId)", options: .LiteralSearch, range: nil)
        let URLString = InfoplusAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get the tags for a financeSystemConnection.
     
     - parameter financeSystemConnectionId: (path) Id of the financeSystemConnection to get tags for 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getFinanceSystemConnectionTags(financeSystemConnectionId financeSystemConnectionId: Int32, completion: ((error: ErrorType?) -> Void)) {
        getFinanceSystemConnectionTagsWithRequestBuilder(financeSystemConnectionId: financeSystemConnectionId).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Get the tags for a financeSystemConnection.
     - GET /beta/financeSystemConnection/{financeSystemConnectionId}/tag
     - Get all existing financeSystemConnection tags.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     
     - parameter financeSystemConnectionId: (path) Id of the financeSystemConnection to get tags for 

     - returns: RequestBuilder<Void> 
     */
    public class func getFinanceSystemConnectionTagsWithRequestBuilder(financeSystemConnectionId financeSystemConnectionId: Int32) -> RequestBuilder<Void> {
        var path = "/beta/financeSystemConnection/{financeSystemConnectionId}/tag"
        path = path.stringByReplacingOccurrencesOfString("{financeSystemConnectionId}", withString: "\(financeSystemConnectionId)", options: .LiteralSearch, range: nil)
        let URLString = InfoplusAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update a financeSystemConnection
     
     - parameter body: (body) FinanceSystemConnection to be updated. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateFinanceSystemConnection(body body: FinanceSystemConnection, completion: ((error: ErrorType?) -> Void)) {
        updateFinanceSystemConnectionWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Update a financeSystemConnection
     - PUT /beta/financeSystemConnection
     - Updates an existing financeSystemConnection using the specified data.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     
     - parameter body: (body) FinanceSystemConnection to be updated. 

     - returns: RequestBuilder<Void> 
     */
    public class func updateFinanceSystemConnectionWithRequestBuilder(body body: FinanceSystemConnection) -> RequestBuilder<Void> {
        let path = "/beta/financeSystemConnection"
        let URLString = InfoplusAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update a financeSystemConnection custom fields
     
     - parameter body: (body) FinanceSystemConnection to be updated. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateFinanceSystemConnectionCustomFields(body body: FinanceSystemConnection, completion: ((error: ErrorType?) -> Void)) {
        updateFinanceSystemConnectionCustomFieldsWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Update a financeSystemConnection custom fields
     - PUT /beta/financeSystemConnection/customFields
     - Updates an existing financeSystemConnection custom fields using the specified data.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     
     - parameter body: (body) FinanceSystemConnection to be updated. 

     - returns: RequestBuilder<Void> 
     */
    public class func updateFinanceSystemConnectionCustomFieldsWithRequestBuilder(body body: FinanceSystemConnection) -> RequestBuilder<Void> {
        let path = "/beta/financeSystemConnection/customFields"
        let URLString = InfoplusAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
