//
// OrderAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class OrderAPI: APIBase {
    /**
     Create an order
     
     - parameter body: (body) Order to be inserted. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func addOrder(body body: Order, completion: ((data: Order?, error: ErrorType?) -> Void)) {
        addOrderWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create an order
     - POST /beta/order
     - Inserts a new order using the specified data.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     - examples: [{contentType=application/json, example={
  "integrationPartnerId" : 4,
  "omsCustomerId" : 6,
  "priceLevel" : "priceLevel",
  "shipToStreet" : "shipToStreet",
  "division" : 1,
  "billToZip" : "billToZip",
  "shipToEmail" : "shipToEmail",
  "billToStreet" : "billToStreet",
  "shipToState" : "shipToState",
  "giftMessage" : "giftMessage",
  "useOrderNoRoot" : 5,
  "costCenter" : "costCenter",
  "shipDate" : "2000-01-23T04:56:07.000+00:00",
  "orderMessage" : "orderMessage",
  "firstShipDate" : "2000-01-23T04:56:07.000+00:00",
  "warehouseId" : 1,
  "billToAttention" : "billToAttention",
  "subtotal" : 6.70401929795003592715829654480330646038055419921875,
  "status" : "status",
  "alternateUsage" : "alternateUsage",
  "authorizationAmount" : 2.3021358869347654518833223846741020679473876953125,
  "freight" : 6.8468526983526398765889098285697400569915771484375,
  "billToCompany" : "billToCompany",
  "shipToCompany" : "shipToCompany",
  "numberOfCartons" : 9,
  "shipToZip" : "shipToZip",
  "preAllocationEstimatedWeight" : 1.024645700144157789424070870154537260532379150390625,
  "customerPONo" : "customerPONo",
  "lastShipDate" : "2000-01-23T04:56:07.000+00:00",
  "shipToAttention" : "shipToAttention",
  "createDate" : "2000-01-23T04:56:07.000+00:00",
  "distributionCharges" : 7.3862819483858839220147274318151175975799560546875,
  "numberOfPallets" : 3,
  "legacyRestrictionType" : "legacyRestrictionType",
  "shipToPhone" : "shipToPhone",
  "needByDate" : "2000-01-23T04:56:07.000+00:00",
  "shipCode" : "shipCode",
  "authorizedBy" : "authorizedBy",
  "holdCode" : "holdCode",
  "deliverOnDate" : "2000-01-23T04:56:07.000+00:00",
  "totalDiscount" : 7.14353804701230643559028976596891880035400390625,
  "priorityCode" : 6,
  "completionStatus" : "completionStatus",
  "customerOrderNo" : "customerOrderNo",
  "mediaCode" : "mediaCode",
  "estimatedNumberOfPicks" : 9,
  "packingSlipTemplateId" : 3,
  "orderAssemblyInstructions" : "orderAssemblyInstructions",
  "totalQty" : 7,
  "orderConfirmationEmailTemplateId" : 1,
  "parcelLabelRef1" : "parcelLabelRef1",
  "billToState" : "billToState",
  "parcelLabelRef3" : "parcelLabelRef3",
  "fulfillmentProcessId" : 6,
  "parcelLabelRef2" : "parcelLabelRef2",
  "billToCity" : "billToCity",
  "lineItems" : [ {
    "itemSubGroupId" : 7,
    "extendedDiscount" : 1.0414449161182959269211778519093059003353118896484375,
    "orderAssemblyInstructions" : "orderAssemblyInstructions",
    "distributionCode" : "distributionCode",
    "itemMajorGroupId" : 0,
    "ncExtendedSell" : 4.67894798900584873990737833082675933837890625,
    "weightPerWrap" : 9.132027271330688478201409452594816684722900390625,
    "customFields" : {
      "key" : "{}"
    },
    "itemLegacyLowStockContactId" : 9,
    "revDate" : "revDate",
    "backorderQty" : 5,
    "orderSourceSKU" : "orderSourceSKU",
    "extendedCost" : 6.6284642750877420525057459599338471889495849609375,
    "id" : 0,
    "sku" : "sku",
    "unitDiscount" : 0.202532411323639305322785730822943150997161865234375,
    "sector" : "sector",
    "itemAccountCodeId" : 0,
    "itemProductCodeId" : 5,
    "itemWeight" : 7.26052126480210358039357743109576404094696044921875,
    "lobId" : 8,
    "shippedQty" : 7,
    "expirationDate" : "2000-01-23T04:56:07.000+00:00",
    "itemSummaryCodeId" : 4,
    "orderNo" : 4.6523964329332461176136348512955009937286376953125,
    "extendedSell" : 4.258773108174356281097061582840979099273681640625,
    "upc" : "upc",
    "productionLot" : "productionLot",
    "orderedQty" : 3,
    "vendorSKU" : "vendorSKU",
    "fulfillmentChannel" : "fulfillmentChannel",
    "unitCost" : 3.258856561904760695824734284542500972747802734375,
    "poNoId" : 7,
    "unitSell" : 4.078845849666752343409825698472559452056884765625,
    "allowedQty" : 3,
    "chargeCode" : "chargeCode"
  }, {
    "itemSubGroupId" : 7,
    "extendedDiscount" : 1.0414449161182959269211778519093059003353118896484375,
    "orderAssemblyInstructions" : "orderAssemblyInstructions",
    "distributionCode" : "distributionCode",
    "itemMajorGroupId" : 0,
    "ncExtendedSell" : 4.67894798900584873990737833082675933837890625,
    "weightPerWrap" : 9.132027271330688478201409452594816684722900390625,
    "customFields" : {
      "key" : "{}"
    },
    "itemLegacyLowStockContactId" : 9,
    "revDate" : "revDate",
    "backorderQty" : 5,
    "orderSourceSKU" : "orderSourceSKU",
    "extendedCost" : 6.6284642750877420525057459599338471889495849609375,
    "id" : 0,
    "sku" : "sku",
    "unitDiscount" : 0.202532411323639305322785730822943150997161865234375,
    "sector" : "sector",
    "itemAccountCodeId" : 0,
    "itemProductCodeId" : 5,
    "itemWeight" : 7.26052126480210358039357743109576404094696044921875,
    "lobId" : 8,
    "shippedQty" : 7,
    "expirationDate" : "2000-01-23T04:56:07.000+00:00",
    "itemSummaryCodeId" : 4,
    "orderNo" : 4.6523964329332461176136348512955009937286376953125,
    "extendedSell" : 4.258773108174356281097061582840979099273681640625,
    "upc" : "upc",
    "productionLot" : "productionLot",
    "orderedQty" : 3,
    "vendorSKU" : "vendorSKU",
    "fulfillmentChannel" : "fulfillmentChannel",
    "unitCost" : 3.258856561904760695824734284542500972747802734375,
    "poNoId" : 7,
    "unitSell" : 4.078845849666752343409825698472559452056884765625,
    "allowedQty" : 3,
    "chargeCode" : "chargeCode"
  } ],
  "shipToCity" : "shipToCity",
  "orderReason" : 9,
  "shipBy" : "2000-01-23T04:56:07.000+00:00",
  "shippingCharge" : 5.94489560761401580890606055618263781070709228515625,
  "distributionChannel" : "distributionChannel",
  "externalShippingSystemId" : 6,
  "lobId" : 6,
  "orderSourceId" : 6,
  "batchNo" : "batchNo",
  "shipToStreet2" : "shipToStreet2",
  "orderNo" : 0.80082819046101150206595775671303272247314453125,
  "shipToStreet3" : "shipToStreet3",
  "billToEmail" : "billToEmail",
  "parentKODOrderId" : 1.173074250955943309548956676735542714595794677734375,
  "modifyDate" : "2000-01-23T04:56:07.000+00:00",
  "totalPaid" : 0.885137473901165261480628032586537301540374755859375,
  "tax" : 3.35319334701124294184637619764544069766998291015625,
  "groupOrderId" : 7.4577447736837658709418974467553198337554931640625,
  "orderInvoiceTemplateId" : 6,
  "billToCountry" : "billToCountry",
  "billToPhone" : "billToPhone",
  "orderDate" : "2000-01-23T04:56:07.000+00:00",
  "numberOfLineItems" : 5,
  "extraOrderData" : [ {
    "sequence" : "sequence",
    "code" : "code",
    "customFields" : {
      "key" : "{}"
    },
    "category" : "category",
    "value" : "value"
  }, {
    "sequence" : "sequence",
    "code" : "code",
    "customFields" : {
      "key" : "{}"
    },
    "category" : "category",
    "value" : "value"
  } ],
  "priceMode" : "priceMode",
  "customFields" : {
    "key" : "{}"
  },
  "shipmentConfirmationEmailTemplateId" : 2,
  "stopBackOrders" : "stopBackOrders",
  "parcelAccountId" : 2,
  "enteredBy" : "enteredBy",
  "shipVia" : "shipVia",
  "total" : 3.093745262666447448651751983561553061008453369140625,
  "serviceTypeId" : "serviceTypeId",
  "estimatedWeightLbs" : 1.489415909854170383397331534069962799549102783203125,
  "weightLbs" : 6.51918095101838179772357761976309120655059814453125,
  "shipToCountry" : "shipToCountry",
  "balanceDue" : 7.061401241503109105224211816675961017608642578125,
  "orderLoadProgramId" : 8,
  "alcoholOrderType" : "alcoholOrderType",
  "billToStreet2" : "billToStreet2",
  "billToStreet3" : "billToStreet3",
  "omsOrderNo" : 9,
  "extraLineItemData" : [ {
    "code" : "code",
    "customFields" : {
      "key" : "{}"
    },
    "sku" : "sku",
    "category" : "category",
    "value" : "value"
  }, {
    "code" : "code",
    "customFields" : {
      "key" : "{}"
    },
    "sku" : "sku",
    "category" : "category",
    "value" : "value"
  } ],
  "thirdPartyParcelAccountId" : 4,
  "carrierId" : 5,
  "customerNo" : "customerNo"
}}]
     
     - parameter body: (body) Order to be inserted. 

     - returns: RequestBuilder<Order> 
     */
    public class func addOrderWithRequestBuilder(body body: Order) -> RequestBuilder<Order> {
        let path = "/beta/order"
        let URLString = InfoplusAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Order>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Add new audit for an order
     
     - parameter orderId: (path) Id of the order to add an audit to 
     - parameter orderAudit: (path) The audit to add 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func addOrderAudit(orderId orderId: Double, orderAudit: String, completion: ((error: ErrorType?) -> Void)) {
        addOrderAuditWithRequestBuilder(orderId: orderId, orderAudit: orderAudit).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Add new audit for an order
     - PUT /beta/order/{orderId}/audit/{orderAudit}
     - Adds an audit to an existing order.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     
     - parameter orderId: (path) Id of the order to add an audit to 
     - parameter orderAudit: (path) The audit to add 

     - returns: RequestBuilder<Void> 
     */
    public class func addOrderAuditWithRequestBuilder(orderId orderId: Double, orderAudit: String) -> RequestBuilder<Void> {
        var path = "/beta/order/{orderId}/audit/{orderAudit}"
        path = path.stringByReplacingOccurrencesOfString("{orderId}", withString: "\(orderId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{orderAudit}", withString: "\(orderAudit)", options: .LiteralSearch, range: nil)
        let URLString = InfoplusAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Add new tags for an order.
     
     - parameter orderId: (path) Id of the order to add a tag to 
     - parameter orderTag: (path) The tag to add 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func addOrderTag(orderId orderId: Double, orderTag: String, completion: ((error: ErrorType?) -> Void)) {
        addOrderTagWithRequestBuilder(orderId: orderId, orderTag: orderTag).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Add new tags for an order.
     - PUT /beta/order/{orderId}/tag/{orderTag}
     - Adds a tag to an existing order.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     
     - parameter orderId: (path) Id of the order to add a tag to 
     - parameter orderTag: (path) The tag to add 

     - returns: RequestBuilder<Void> 
     */
    public class func addOrderTagWithRequestBuilder(orderId orderId: Double, orderTag: String) -> RequestBuilder<Void> {
        var path = "/beta/order/{orderId}/tag/{orderTag}"
        path = path.stringByReplacingOccurrencesOfString("{orderId}", withString: "\(orderId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{orderTag}", withString: "\(orderTag)", options: .LiteralSearch, range: nil)
        let URLString = InfoplusAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Run the Apply Order Warehouse Fulfillment Plan method.
     
     - parameter body: (body) Input data for Apply Order Warehouse Fulfillment Plan process. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func applyOrderWarehouseFulfillmentPlan(body body: ApplyOrderWarehouseFulfillmentPlanInput, completion: ((data: ApplyOrderWarehouseFulfillmentPlanOutput?, error: ErrorType?) -> Void)) {
        applyOrderWarehouseFulfillmentPlanWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Run the Apply Order Warehouse Fulfillment Plan method.
     - POST /beta/order/applyOrderWarehouseFulfillmentPlan
     - 
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     - examples: [{contentType=application/json, example={
  "orderList" : [ {
    "integrationPartnerId" : 4,
    "omsCustomerId" : 6,
    "priceLevel" : "priceLevel",
    "shipToStreet" : "shipToStreet",
    "division" : 1,
    "billToZip" : "billToZip",
    "shipToEmail" : "shipToEmail",
    "billToStreet" : "billToStreet",
    "shipToState" : "shipToState",
    "giftMessage" : "giftMessage",
    "useOrderNoRoot" : 5,
    "costCenter" : "costCenter",
    "shipDate" : "2000-01-23T04:56:07.000+00:00",
    "orderMessage" : "orderMessage",
    "firstShipDate" : "2000-01-23T04:56:07.000+00:00",
    "warehouseId" : 1,
    "billToAttention" : "billToAttention",
    "subtotal" : 6.70401929795003592715829654480330646038055419921875,
    "status" : "status",
    "alternateUsage" : "alternateUsage",
    "authorizationAmount" : 2.3021358869347654518833223846741020679473876953125,
    "freight" : 6.8468526983526398765889098285697400569915771484375,
    "billToCompany" : "billToCompany",
    "shipToCompany" : "shipToCompany",
    "numberOfCartons" : 9,
    "shipToZip" : "shipToZip",
    "preAllocationEstimatedWeight" : 1.024645700144157789424070870154537260532379150390625,
    "customerPONo" : "customerPONo",
    "lastShipDate" : "2000-01-23T04:56:07.000+00:00",
    "shipToAttention" : "shipToAttention",
    "createDate" : "2000-01-23T04:56:07.000+00:00",
    "distributionCharges" : 7.3862819483858839220147274318151175975799560546875,
    "numberOfPallets" : 3,
    "legacyRestrictionType" : "legacyRestrictionType",
    "shipToPhone" : "shipToPhone",
    "needByDate" : "2000-01-23T04:56:07.000+00:00",
    "shipCode" : "shipCode",
    "authorizedBy" : "authorizedBy",
    "holdCode" : "holdCode",
    "deliverOnDate" : "2000-01-23T04:56:07.000+00:00",
    "totalDiscount" : 7.14353804701230643559028976596891880035400390625,
    "priorityCode" : 6,
    "completionStatus" : "completionStatus",
    "customerOrderNo" : "customerOrderNo",
    "mediaCode" : "mediaCode",
    "estimatedNumberOfPicks" : 9,
    "packingSlipTemplateId" : 3,
    "orderAssemblyInstructions" : "orderAssemblyInstructions",
    "totalQty" : 7,
    "orderConfirmationEmailTemplateId" : 1,
    "parcelLabelRef1" : "parcelLabelRef1",
    "billToState" : "billToState",
    "parcelLabelRef3" : "parcelLabelRef3",
    "fulfillmentProcessId" : 6,
    "parcelLabelRef2" : "parcelLabelRef2",
    "billToCity" : "billToCity",
    "lineItems" : [ {
      "itemSubGroupId" : 7,
      "extendedDiscount" : 1.0414449161182959269211778519093059003353118896484375,
      "orderAssemblyInstructions" : "orderAssemblyInstructions",
      "distributionCode" : "distributionCode",
      "itemMajorGroupId" : 0,
      "ncExtendedSell" : 4.67894798900584873990737833082675933837890625,
      "weightPerWrap" : 9.132027271330688478201409452594816684722900390625,
      "customFields" : {
        "key" : "{}"
      },
      "itemLegacyLowStockContactId" : 9,
      "revDate" : "revDate",
      "backorderQty" : 5,
      "orderSourceSKU" : "orderSourceSKU",
      "extendedCost" : 6.6284642750877420525057459599338471889495849609375,
      "id" : 0,
      "sku" : "sku",
      "unitDiscount" : 0.202532411323639305322785730822943150997161865234375,
      "sector" : "sector",
      "itemAccountCodeId" : 0,
      "itemProductCodeId" : 5,
      "itemWeight" : 7.26052126480210358039357743109576404094696044921875,
      "lobId" : 8,
      "shippedQty" : 7,
      "expirationDate" : "2000-01-23T04:56:07.000+00:00",
      "itemSummaryCodeId" : 4,
      "orderNo" : 4.6523964329332461176136348512955009937286376953125,
      "extendedSell" : 4.258773108174356281097061582840979099273681640625,
      "upc" : "upc",
      "productionLot" : "productionLot",
      "orderedQty" : 3,
      "vendorSKU" : "vendorSKU",
      "fulfillmentChannel" : "fulfillmentChannel",
      "unitCost" : 3.258856561904760695824734284542500972747802734375,
      "poNoId" : 7,
      "unitSell" : 4.078845849666752343409825698472559452056884765625,
      "allowedQty" : 3,
      "chargeCode" : "chargeCode"
    }, {
      "itemSubGroupId" : 7,
      "extendedDiscount" : 1.0414449161182959269211778519093059003353118896484375,
      "orderAssemblyInstructions" : "orderAssemblyInstructions",
      "distributionCode" : "distributionCode",
      "itemMajorGroupId" : 0,
      "ncExtendedSell" : 4.67894798900584873990737833082675933837890625,
      "weightPerWrap" : 9.132027271330688478201409452594816684722900390625,
      "customFields" : {
        "key" : "{}"
      },
      "itemLegacyLowStockContactId" : 9,
      "revDate" : "revDate",
      "backorderQty" : 5,
      "orderSourceSKU" : "orderSourceSKU",
      "extendedCost" : 6.6284642750877420525057459599338471889495849609375,
      "id" : 0,
      "sku" : "sku",
      "unitDiscount" : 0.202532411323639305322785730822943150997161865234375,
      "sector" : "sector",
      "itemAccountCodeId" : 0,
      "itemProductCodeId" : 5,
      "itemWeight" : 7.26052126480210358039357743109576404094696044921875,
      "lobId" : 8,
      "shippedQty" : 7,
      "expirationDate" : "2000-01-23T04:56:07.000+00:00",
      "itemSummaryCodeId" : 4,
      "orderNo" : 4.6523964329332461176136348512955009937286376953125,
      "extendedSell" : 4.258773108174356281097061582840979099273681640625,
      "upc" : "upc",
      "productionLot" : "productionLot",
      "orderedQty" : 3,
      "vendorSKU" : "vendorSKU",
      "fulfillmentChannel" : "fulfillmentChannel",
      "unitCost" : 3.258856561904760695824734284542500972747802734375,
      "poNoId" : 7,
      "unitSell" : 4.078845849666752343409825698472559452056884765625,
      "allowedQty" : 3,
      "chargeCode" : "chargeCode"
    } ],
    "shipToCity" : "shipToCity",
    "orderReason" : 9,
    "shipBy" : "2000-01-23T04:56:07.000+00:00",
    "shippingCharge" : 5.94489560761401580890606055618263781070709228515625,
    "distributionChannel" : "distributionChannel",
    "externalShippingSystemId" : 6,
    "lobId" : 6,
    "orderSourceId" : 6,
    "batchNo" : "batchNo",
    "shipToStreet2" : "shipToStreet2",
    "orderNo" : 0.80082819046101150206595775671303272247314453125,
    "shipToStreet3" : "shipToStreet3",
    "billToEmail" : "billToEmail",
    "parentKODOrderId" : 1.173074250955943309548956676735542714595794677734375,
    "modifyDate" : "2000-01-23T04:56:07.000+00:00",
    "totalPaid" : 0.885137473901165261480628032586537301540374755859375,
    "tax" : 3.35319334701124294184637619764544069766998291015625,
    "groupOrderId" : 7.4577447736837658709418974467553198337554931640625,
    "orderInvoiceTemplateId" : 6,
    "billToCountry" : "billToCountry",
    "billToPhone" : "billToPhone",
    "orderDate" : "2000-01-23T04:56:07.000+00:00",
    "numberOfLineItems" : 5,
    "extraOrderData" : [ {
      "sequence" : "sequence",
      "code" : "code",
      "customFields" : {
        "key" : "{}"
      },
      "category" : "category",
      "value" : "value"
    }, {
      "sequence" : "sequence",
      "code" : "code",
      "customFields" : {
        "key" : "{}"
      },
      "category" : "category",
      "value" : "value"
    } ],
    "priceMode" : "priceMode",
    "customFields" : {
      "key" : "{}"
    },
    "shipmentConfirmationEmailTemplateId" : 2,
    "stopBackOrders" : "stopBackOrders",
    "parcelAccountId" : 2,
    "enteredBy" : "enteredBy",
    "shipVia" : "shipVia",
    "total" : 3.093745262666447448651751983561553061008453369140625,
    "serviceTypeId" : "serviceTypeId",
    "estimatedWeightLbs" : 1.489415909854170383397331534069962799549102783203125,
    "weightLbs" : 6.51918095101838179772357761976309120655059814453125,
    "shipToCountry" : "shipToCountry",
    "balanceDue" : 7.061401241503109105224211816675961017608642578125,
    "orderLoadProgramId" : 8,
    "alcoholOrderType" : "alcoholOrderType",
    "billToStreet2" : "billToStreet2",
    "billToStreet3" : "billToStreet3",
    "omsOrderNo" : 9,
    "extraLineItemData" : [ {
      "code" : "code",
      "customFields" : {
        "key" : "{}"
      },
      "sku" : "sku",
      "category" : "category",
      "value" : "value"
    }, {
      "code" : "code",
      "customFields" : {
        "key" : "{}"
      },
      "sku" : "sku",
      "category" : "category",
      "value" : "value"
    } ],
    "thirdPartyParcelAccountId" : 4,
    "carrierId" : 5,
    "customerNo" : "customerNo"
  }, {
    "integrationPartnerId" : 4,
    "omsCustomerId" : 6,
    "priceLevel" : "priceLevel",
    "shipToStreet" : "shipToStreet",
    "division" : 1,
    "billToZip" : "billToZip",
    "shipToEmail" : "shipToEmail",
    "billToStreet" : "billToStreet",
    "shipToState" : "shipToState",
    "giftMessage" : "giftMessage",
    "useOrderNoRoot" : 5,
    "costCenter" : "costCenter",
    "shipDate" : "2000-01-23T04:56:07.000+00:00",
    "orderMessage" : "orderMessage",
    "firstShipDate" : "2000-01-23T04:56:07.000+00:00",
    "warehouseId" : 1,
    "billToAttention" : "billToAttention",
    "subtotal" : 6.70401929795003592715829654480330646038055419921875,
    "status" : "status",
    "alternateUsage" : "alternateUsage",
    "authorizationAmount" : 2.3021358869347654518833223846741020679473876953125,
    "freight" : 6.8468526983526398765889098285697400569915771484375,
    "billToCompany" : "billToCompany",
    "shipToCompany" : "shipToCompany",
    "numberOfCartons" : 9,
    "shipToZip" : "shipToZip",
    "preAllocationEstimatedWeight" : 1.024645700144157789424070870154537260532379150390625,
    "customerPONo" : "customerPONo",
    "lastShipDate" : "2000-01-23T04:56:07.000+00:00",
    "shipToAttention" : "shipToAttention",
    "createDate" : "2000-01-23T04:56:07.000+00:00",
    "distributionCharges" : 7.3862819483858839220147274318151175975799560546875,
    "numberOfPallets" : 3,
    "legacyRestrictionType" : "legacyRestrictionType",
    "shipToPhone" : "shipToPhone",
    "needByDate" : "2000-01-23T04:56:07.000+00:00",
    "shipCode" : "shipCode",
    "authorizedBy" : "authorizedBy",
    "holdCode" : "holdCode",
    "deliverOnDate" : "2000-01-23T04:56:07.000+00:00",
    "totalDiscount" : 7.14353804701230643559028976596891880035400390625,
    "priorityCode" : 6,
    "completionStatus" : "completionStatus",
    "customerOrderNo" : "customerOrderNo",
    "mediaCode" : "mediaCode",
    "estimatedNumberOfPicks" : 9,
    "packingSlipTemplateId" : 3,
    "orderAssemblyInstructions" : "orderAssemblyInstructions",
    "totalQty" : 7,
    "orderConfirmationEmailTemplateId" : 1,
    "parcelLabelRef1" : "parcelLabelRef1",
    "billToState" : "billToState",
    "parcelLabelRef3" : "parcelLabelRef3",
    "fulfillmentProcessId" : 6,
    "parcelLabelRef2" : "parcelLabelRef2",
    "billToCity" : "billToCity",
    "lineItems" : [ {
      "itemSubGroupId" : 7,
      "extendedDiscount" : 1.0414449161182959269211778519093059003353118896484375,
      "orderAssemblyInstructions" : "orderAssemblyInstructions",
      "distributionCode" : "distributionCode",
      "itemMajorGroupId" : 0,
      "ncExtendedSell" : 4.67894798900584873990737833082675933837890625,
      "weightPerWrap" : 9.132027271330688478201409452594816684722900390625,
      "customFields" : {
        "key" : "{}"
      },
      "itemLegacyLowStockContactId" : 9,
      "revDate" : "revDate",
      "backorderQty" : 5,
      "orderSourceSKU" : "orderSourceSKU",
      "extendedCost" : 6.6284642750877420525057459599338471889495849609375,
      "id" : 0,
      "sku" : "sku",
      "unitDiscount" : 0.202532411323639305322785730822943150997161865234375,
      "sector" : "sector",
      "itemAccountCodeId" : 0,
      "itemProductCodeId" : 5,
      "itemWeight" : 7.26052126480210358039357743109576404094696044921875,
      "lobId" : 8,
      "shippedQty" : 7,
      "expirationDate" : "2000-01-23T04:56:07.000+00:00",
      "itemSummaryCodeId" : 4,
      "orderNo" : 4.6523964329332461176136348512955009937286376953125,
      "extendedSell" : 4.258773108174356281097061582840979099273681640625,
      "upc" : "upc",
      "productionLot" : "productionLot",
      "orderedQty" : 3,
      "vendorSKU" : "vendorSKU",
      "fulfillmentChannel" : "fulfillmentChannel",
      "unitCost" : 3.258856561904760695824734284542500972747802734375,
      "poNoId" : 7,
      "unitSell" : 4.078845849666752343409825698472559452056884765625,
      "allowedQty" : 3,
      "chargeCode" : "chargeCode"
    }, {
      "itemSubGroupId" : 7,
      "extendedDiscount" : 1.0414449161182959269211778519093059003353118896484375,
      "orderAssemblyInstructions" : "orderAssemblyInstructions",
      "distributionCode" : "distributionCode",
      "itemMajorGroupId" : 0,
      "ncExtendedSell" : 4.67894798900584873990737833082675933837890625,
      "weightPerWrap" : 9.132027271330688478201409452594816684722900390625,
      "customFields" : {
        "key" : "{}"
      },
      "itemLegacyLowStockContactId" : 9,
      "revDate" : "revDate",
      "backorderQty" : 5,
      "orderSourceSKU" : "orderSourceSKU",
      "extendedCost" : 6.6284642750877420525057459599338471889495849609375,
      "id" : 0,
      "sku" : "sku",
      "unitDiscount" : 0.202532411323639305322785730822943150997161865234375,
      "sector" : "sector",
      "itemAccountCodeId" : 0,
      "itemProductCodeId" : 5,
      "itemWeight" : 7.26052126480210358039357743109576404094696044921875,
      "lobId" : 8,
      "shippedQty" : 7,
      "expirationDate" : "2000-01-23T04:56:07.000+00:00",
      "itemSummaryCodeId" : 4,
      "orderNo" : 4.6523964329332461176136348512955009937286376953125,
      "extendedSell" : 4.258773108174356281097061582840979099273681640625,
      "upc" : "upc",
      "productionLot" : "productionLot",
      "orderedQty" : 3,
      "vendorSKU" : "vendorSKU",
      "fulfillmentChannel" : "fulfillmentChannel",
      "unitCost" : 3.258856561904760695824734284542500972747802734375,
      "poNoId" : 7,
      "unitSell" : 4.078845849666752343409825698472559452056884765625,
      "allowedQty" : 3,
      "chargeCode" : "chargeCode"
    } ],
    "shipToCity" : "shipToCity",
    "orderReason" : 9,
    "shipBy" : "2000-01-23T04:56:07.000+00:00",
    "shippingCharge" : 5.94489560761401580890606055618263781070709228515625,
    "distributionChannel" : "distributionChannel",
    "externalShippingSystemId" : 6,
    "lobId" : 6,
    "orderSourceId" : 6,
    "batchNo" : "batchNo",
    "shipToStreet2" : "shipToStreet2",
    "orderNo" : 0.80082819046101150206595775671303272247314453125,
    "shipToStreet3" : "shipToStreet3",
    "billToEmail" : "billToEmail",
    "parentKODOrderId" : 1.173074250955943309548956676735542714595794677734375,
    "modifyDate" : "2000-01-23T04:56:07.000+00:00",
    "totalPaid" : 0.885137473901165261480628032586537301540374755859375,
    "tax" : 3.35319334701124294184637619764544069766998291015625,
    "groupOrderId" : 7.4577447736837658709418974467553198337554931640625,
    "orderInvoiceTemplateId" : 6,
    "billToCountry" : "billToCountry",
    "billToPhone" : "billToPhone",
    "orderDate" : "2000-01-23T04:56:07.000+00:00",
    "numberOfLineItems" : 5,
    "extraOrderData" : [ {
      "sequence" : "sequence",
      "code" : "code",
      "customFields" : {
        "key" : "{}"
      },
      "category" : "category",
      "value" : "value"
    }, {
      "sequence" : "sequence",
      "code" : "code",
      "customFields" : {
        "key" : "{}"
      },
      "category" : "category",
      "value" : "value"
    } ],
    "priceMode" : "priceMode",
    "customFields" : {
      "key" : "{}"
    },
    "shipmentConfirmationEmailTemplateId" : 2,
    "stopBackOrders" : "stopBackOrders",
    "parcelAccountId" : 2,
    "enteredBy" : "enteredBy",
    "shipVia" : "shipVia",
    "total" : 3.093745262666447448651751983561553061008453369140625,
    "serviceTypeId" : "serviceTypeId",
    "estimatedWeightLbs" : 1.489415909854170383397331534069962799549102783203125,
    "weightLbs" : 6.51918095101838179772357761976309120655059814453125,
    "shipToCountry" : "shipToCountry",
    "balanceDue" : 7.061401241503109105224211816675961017608642578125,
    "orderLoadProgramId" : 8,
    "alcoholOrderType" : "alcoholOrderType",
    "billToStreet2" : "billToStreet2",
    "billToStreet3" : "billToStreet3",
    "omsOrderNo" : 9,
    "extraLineItemData" : [ {
      "code" : "code",
      "customFields" : {
        "key" : "{}"
      },
      "sku" : "sku",
      "category" : "category",
      "value" : "value"
    }, {
      "code" : "code",
      "customFields" : {
        "key" : "{}"
      },
      "sku" : "sku",
      "category" : "category",
      "value" : "value"
    } ],
    "thirdPartyParcelAccountId" : 4,
    "carrierId" : 5,
    "customerNo" : "customerNo"
  } ]
}}]
     
     - parameter body: (body) Input data for Apply Order Warehouse Fulfillment Plan process. 

     - returns: RequestBuilder<ApplyOrderWarehouseFulfillmentPlanOutput> 
     */
    public class func applyOrderWarehouseFulfillmentPlanWithRequestBuilder(body body: ApplyOrderWarehouseFulfillmentPlanInput) -> RequestBuilder<ApplyOrderWarehouseFulfillmentPlanOutput> {
        let path = "/beta/order/applyOrderWarehouseFulfillmentPlan"
        let URLString = InfoplusAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ApplyOrderWarehouseFulfillmentPlanOutput>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete an order
     
     - parameter orderId: (path) Id of the order to be deleted. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteOrder(orderId orderId: Double, completion: ((error: ErrorType?) -> Void)) {
        deleteOrderWithRequestBuilder(orderId: orderId).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Delete an order
     - DELETE /beta/order/{orderId}
     - Deletes the order identified by the specified id.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     
     - parameter orderId: (path) Id of the order to be deleted. 

     - returns: RequestBuilder<Void> 
     */
    public class func deleteOrderWithRequestBuilder(orderId orderId: Double) -> RequestBuilder<Void> {
        var path = "/beta/order/{orderId}"
        path = path.stringByReplacingOccurrencesOfString("{orderId}", withString: "\(orderId)", options: .LiteralSearch, range: nil)
        let URLString = InfoplusAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete a tag for an order.
     
     - parameter orderId: (path) Id of the order to remove tag from 
     - parameter orderTag: (path) The tag to delete 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteOrderTag(orderId orderId: Double, orderTag: String, completion: ((error: ErrorType?) -> Void)) {
        deleteOrderTagWithRequestBuilder(orderId: orderId, orderTag: orderTag).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Delete a tag for an order.
     - DELETE /beta/order/{orderId}/tag/{orderTag}
     - Deletes an existing order tag using the specified data.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     
     - parameter orderId: (path) Id of the order to remove tag from 
     - parameter orderTag: (path) The tag to delete 

     - returns: RequestBuilder<Void> 
     */
    public class func deleteOrderTagWithRequestBuilder(orderId orderId: Double, orderTag: String) -> RequestBuilder<Void> {
        var path = "/beta/order/{orderId}/tag/{orderTag}"
        path = path.stringByReplacingOccurrencesOfString("{orderId}", withString: "\(orderId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{orderTag}", withString: "\(orderTag)", options: .LiteralSearch, range: nil)
        let URLString = InfoplusAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Run the EditLineItemFulfillmentStrategy process.
     
     - parameter body: (body) Input data for EditLineItemFulfillmentStrategy process. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func editFulfillmentChannel(body body: EditLineItemFulfillmentStrategyInputAPIModel, completion: ((data: [ProcessOutputAPIModel]?, error: ErrorType?) -> Void)) {
        editFulfillmentChannelWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Run the EditLineItemFulfillmentStrategy process.
     - POST /beta/order/editFulfillmentChannel
     - 
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     - examples: [{contentType=application/json, example=[ {
  "messageList" : [ "messageList", "messageList" ],
  "id" : "{}",
  "entity" : "{}",
  "status" : "status"
}, {
  "messageList" : [ "messageList", "messageList" ],
  "id" : "{}",
  "entity" : "{}",
  "status" : "status"
} ]}]
     
     - parameter body: (body) Input data for EditLineItemFulfillmentStrategy process. 

     - returns: RequestBuilder<[ProcessOutputAPIModel]> 
     */
    public class func editFulfillmentChannelWithRequestBuilder(body body: EditLineItemFulfillmentStrategyInputAPIModel) -> RequestBuilder<[ProcessOutputAPIModel]> {
        let path = "/beta/order/editFulfillmentChannel"
        let URLString = InfoplusAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[ProcessOutputAPIModel]>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Run the ReqManualSubstitution process.
     
     - parameter body: (body) Input data for ReqManualSubstitution process. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func editLineItems(body body: ReqManualSubstitutionInputAPIModel, completion: ((data: [ProcessOutputAPIModel]?, error: ErrorType?) -> Void)) {
        editLineItemsWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Run the ReqManualSubstitution process.
     - POST /beta/order/editLineItems
     - 
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     - examples: [{contentType=application/json, example=[ {
  "messageList" : [ "messageList", "messageList" ],
  "id" : "{}",
  "entity" : "{}",
  "status" : "status"
}, {
  "messageList" : [ "messageList", "messageList" ],
  "id" : "{}",
  "entity" : "{}",
  "status" : "status"
} ]}]
     
     - parameter body: (body) Input data for ReqManualSubstitution process. 

     - returns: RequestBuilder<[ProcessOutputAPIModel]> 
     */
    public class func editLineItemsWithRequestBuilder(body body: ReqManualSubstitutionInputAPIModel) -> RequestBuilder<[ProcessOutputAPIModel]> {
        let path = "/beta/order/editLineItems"
        let URLString = InfoplusAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[ProcessOutputAPIModel]>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get a duplicated an order by id
     
     - parameter orderId: (path) Id of the order to be duplicated. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getDuplicateOrderById(orderId orderId: Double, completion: ((data: Order?, error: ErrorType?) -> Void)) {
        getDuplicateOrderByIdWithRequestBuilder(orderId: orderId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a duplicated an order by id
     - GET /beta/order/duplicate/{orderId}
     - Returns a duplicated order identified by the specified id.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     - examples: [{contentType=application/json, example={
  "integrationPartnerId" : 4,
  "omsCustomerId" : 6,
  "priceLevel" : "priceLevel",
  "shipToStreet" : "shipToStreet",
  "division" : 1,
  "billToZip" : "billToZip",
  "shipToEmail" : "shipToEmail",
  "billToStreet" : "billToStreet",
  "shipToState" : "shipToState",
  "giftMessage" : "giftMessage",
  "useOrderNoRoot" : 5,
  "costCenter" : "costCenter",
  "shipDate" : "2000-01-23T04:56:07.000+00:00",
  "orderMessage" : "orderMessage",
  "firstShipDate" : "2000-01-23T04:56:07.000+00:00",
  "warehouseId" : 1,
  "billToAttention" : "billToAttention",
  "subtotal" : 6.70401929795003592715829654480330646038055419921875,
  "status" : "status",
  "alternateUsage" : "alternateUsage",
  "authorizationAmount" : 2.3021358869347654518833223846741020679473876953125,
  "freight" : 6.8468526983526398765889098285697400569915771484375,
  "billToCompany" : "billToCompany",
  "shipToCompany" : "shipToCompany",
  "numberOfCartons" : 9,
  "shipToZip" : "shipToZip",
  "preAllocationEstimatedWeight" : 1.024645700144157789424070870154537260532379150390625,
  "customerPONo" : "customerPONo",
  "lastShipDate" : "2000-01-23T04:56:07.000+00:00",
  "shipToAttention" : "shipToAttention",
  "createDate" : "2000-01-23T04:56:07.000+00:00",
  "distributionCharges" : 7.3862819483858839220147274318151175975799560546875,
  "numberOfPallets" : 3,
  "legacyRestrictionType" : "legacyRestrictionType",
  "shipToPhone" : "shipToPhone",
  "needByDate" : "2000-01-23T04:56:07.000+00:00",
  "shipCode" : "shipCode",
  "authorizedBy" : "authorizedBy",
  "holdCode" : "holdCode",
  "deliverOnDate" : "2000-01-23T04:56:07.000+00:00",
  "totalDiscount" : 7.14353804701230643559028976596891880035400390625,
  "priorityCode" : 6,
  "completionStatus" : "completionStatus",
  "customerOrderNo" : "customerOrderNo",
  "mediaCode" : "mediaCode",
  "estimatedNumberOfPicks" : 9,
  "packingSlipTemplateId" : 3,
  "orderAssemblyInstructions" : "orderAssemblyInstructions",
  "totalQty" : 7,
  "orderConfirmationEmailTemplateId" : 1,
  "parcelLabelRef1" : "parcelLabelRef1",
  "billToState" : "billToState",
  "parcelLabelRef3" : "parcelLabelRef3",
  "fulfillmentProcessId" : 6,
  "parcelLabelRef2" : "parcelLabelRef2",
  "billToCity" : "billToCity",
  "lineItems" : [ {
    "itemSubGroupId" : 7,
    "extendedDiscount" : 1.0414449161182959269211778519093059003353118896484375,
    "orderAssemblyInstructions" : "orderAssemblyInstructions",
    "distributionCode" : "distributionCode",
    "itemMajorGroupId" : 0,
    "ncExtendedSell" : 4.67894798900584873990737833082675933837890625,
    "weightPerWrap" : 9.132027271330688478201409452594816684722900390625,
    "customFields" : {
      "key" : "{}"
    },
    "itemLegacyLowStockContactId" : 9,
    "revDate" : "revDate",
    "backorderQty" : 5,
    "orderSourceSKU" : "orderSourceSKU",
    "extendedCost" : 6.6284642750877420525057459599338471889495849609375,
    "id" : 0,
    "sku" : "sku",
    "unitDiscount" : 0.202532411323639305322785730822943150997161865234375,
    "sector" : "sector",
    "itemAccountCodeId" : 0,
    "itemProductCodeId" : 5,
    "itemWeight" : 7.26052126480210358039357743109576404094696044921875,
    "lobId" : 8,
    "shippedQty" : 7,
    "expirationDate" : "2000-01-23T04:56:07.000+00:00",
    "itemSummaryCodeId" : 4,
    "orderNo" : 4.6523964329332461176136348512955009937286376953125,
    "extendedSell" : 4.258773108174356281097061582840979099273681640625,
    "upc" : "upc",
    "productionLot" : "productionLot",
    "orderedQty" : 3,
    "vendorSKU" : "vendorSKU",
    "fulfillmentChannel" : "fulfillmentChannel",
    "unitCost" : 3.258856561904760695824734284542500972747802734375,
    "poNoId" : 7,
    "unitSell" : 4.078845849666752343409825698472559452056884765625,
    "allowedQty" : 3,
    "chargeCode" : "chargeCode"
  }, {
    "itemSubGroupId" : 7,
    "extendedDiscount" : 1.0414449161182959269211778519093059003353118896484375,
    "orderAssemblyInstructions" : "orderAssemblyInstructions",
    "distributionCode" : "distributionCode",
    "itemMajorGroupId" : 0,
    "ncExtendedSell" : 4.67894798900584873990737833082675933837890625,
    "weightPerWrap" : 9.132027271330688478201409452594816684722900390625,
    "customFields" : {
      "key" : "{}"
    },
    "itemLegacyLowStockContactId" : 9,
    "revDate" : "revDate",
    "backorderQty" : 5,
    "orderSourceSKU" : "orderSourceSKU",
    "extendedCost" : 6.6284642750877420525057459599338471889495849609375,
    "id" : 0,
    "sku" : "sku",
    "unitDiscount" : 0.202532411323639305322785730822943150997161865234375,
    "sector" : "sector",
    "itemAccountCodeId" : 0,
    "itemProductCodeId" : 5,
    "itemWeight" : 7.26052126480210358039357743109576404094696044921875,
    "lobId" : 8,
    "shippedQty" : 7,
    "expirationDate" : "2000-01-23T04:56:07.000+00:00",
    "itemSummaryCodeId" : 4,
    "orderNo" : 4.6523964329332461176136348512955009937286376953125,
    "extendedSell" : 4.258773108174356281097061582840979099273681640625,
    "upc" : "upc",
    "productionLot" : "productionLot",
    "orderedQty" : 3,
    "vendorSKU" : "vendorSKU",
    "fulfillmentChannel" : "fulfillmentChannel",
    "unitCost" : 3.258856561904760695824734284542500972747802734375,
    "poNoId" : 7,
    "unitSell" : 4.078845849666752343409825698472559452056884765625,
    "allowedQty" : 3,
    "chargeCode" : "chargeCode"
  } ],
  "shipToCity" : "shipToCity",
  "orderReason" : 9,
  "shipBy" : "2000-01-23T04:56:07.000+00:00",
  "shippingCharge" : 5.94489560761401580890606055618263781070709228515625,
  "distributionChannel" : "distributionChannel",
  "externalShippingSystemId" : 6,
  "lobId" : 6,
  "orderSourceId" : 6,
  "batchNo" : "batchNo",
  "shipToStreet2" : "shipToStreet2",
  "orderNo" : 0.80082819046101150206595775671303272247314453125,
  "shipToStreet3" : "shipToStreet3",
  "billToEmail" : "billToEmail",
  "parentKODOrderId" : 1.173074250955943309548956676735542714595794677734375,
  "modifyDate" : "2000-01-23T04:56:07.000+00:00",
  "totalPaid" : 0.885137473901165261480628032586537301540374755859375,
  "tax" : 3.35319334701124294184637619764544069766998291015625,
  "groupOrderId" : 7.4577447736837658709418974467553198337554931640625,
  "orderInvoiceTemplateId" : 6,
  "billToCountry" : "billToCountry",
  "billToPhone" : "billToPhone",
  "orderDate" : "2000-01-23T04:56:07.000+00:00",
  "numberOfLineItems" : 5,
  "extraOrderData" : [ {
    "sequence" : "sequence",
    "code" : "code",
    "customFields" : {
      "key" : "{}"
    },
    "category" : "category",
    "value" : "value"
  }, {
    "sequence" : "sequence",
    "code" : "code",
    "customFields" : {
      "key" : "{}"
    },
    "category" : "category",
    "value" : "value"
  } ],
  "priceMode" : "priceMode",
  "customFields" : {
    "key" : "{}"
  },
  "shipmentConfirmationEmailTemplateId" : 2,
  "stopBackOrders" : "stopBackOrders",
  "parcelAccountId" : 2,
  "enteredBy" : "enteredBy",
  "shipVia" : "shipVia",
  "total" : 3.093745262666447448651751983561553061008453369140625,
  "serviceTypeId" : "serviceTypeId",
  "estimatedWeightLbs" : 1.489415909854170383397331534069962799549102783203125,
  "weightLbs" : 6.51918095101838179772357761976309120655059814453125,
  "shipToCountry" : "shipToCountry",
  "balanceDue" : 7.061401241503109105224211816675961017608642578125,
  "orderLoadProgramId" : 8,
  "alcoholOrderType" : "alcoholOrderType",
  "billToStreet2" : "billToStreet2",
  "billToStreet3" : "billToStreet3",
  "omsOrderNo" : 9,
  "extraLineItemData" : [ {
    "code" : "code",
    "customFields" : {
      "key" : "{}"
    },
    "sku" : "sku",
    "category" : "category",
    "value" : "value"
  }, {
    "code" : "code",
    "customFields" : {
      "key" : "{}"
    },
    "sku" : "sku",
    "category" : "category",
    "value" : "value"
  } ],
  "thirdPartyParcelAccountId" : 4,
  "carrierId" : 5,
  "customerNo" : "customerNo"
}}]
     
     - parameter orderId: (path) Id of the order to be duplicated. 

     - returns: RequestBuilder<Order> 
     */
    public class func getDuplicateOrderByIdWithRequestBuilder(orderId orderId: Double) -> RequestBuilder<Order> {
        var path = "/beta/order/duplicate/{orderId}"
        path = path.stringByReplacingOccurrencesOfString("{orderId}", withString: "\(orderId)", options: .LiteralSearch, range: nil)
        let URLString = InfoplusAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Order>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Search orders by filter
     
     - parameter filter: (query) Query string, used to filter results. (optional)
     - parameter page: (query) Result page number.  Defaults to 1. (optional)
     - parameter limit: (query) Maximum results per page.  Defaults to 20.  Max allowed value is 250. (optional)
     - parameter sort: (query) Sort results by specified field. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getOrderByFilter(filter filter: String? = nil, page: Int32? = nil, limit: Int32? = nil, sort: String? = nil, completion: ((data: [Order]?, error: ErrorType?) -> Void)) {
        getOrderByFilterWithRequestBuilder(filter: filter, page: page, limit: limit, sort: sort).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Search orders by filter
     - GET /beta/order/search
     - Returns the list of orders that match the given filter.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     - examples: [{contentType=application/json, example=[ {
  "integrationPartnerId" : 4,
  "omsCustomerId" : 6,
  "priceLevel" : "priceLevel",
  "shipToStreet" : "shipToStreet",
  "division" : 1,
  "billToZip" : "billToZip",
  "shipToEmail" : "shipToEmail",
  "billToStreet" : "billToStreet",
  "shipToState" : "shipToState",
  "giftMessage" : "giftMessage",
  "useOrderNoRoot" : 5,
  "costCenter" : "costCenter",
  "shipDate" : "2000-01-23T04:56:07.000+00:00",
  "orderMessage" : "orderMessage",
  "firstShipDate" : "2000-01-23T04:56:07.000+00:00",
  "warehouseId" : 1,
  "billToAttention" : "billToAttention",
  "subtotal" : 6.70401929795003592715829654480330646038055419921875,
  "status" : "status",
  "alternateUsage" : "alternateUsage",
  "authorizationAmount" : 2.3021358869347654518833223846741020679473876953125,
  "freight" : 6.8468526983526398765889098285697400569915771484375,
  "billToCompany" : "billToCompany",
  "shipToCompany" : "shipToCompany",
  "numberOfCartons" : 9,
  "shipToZip" : "shipToZip",
  "preAllocationEstimatedWeight" : 1.024645700144157789424070870154537260532379150390625,
  "customerPONo" : "customerPONo",
  "lastShipDate" : "2000-01-23T04:56:07.000+00:00",
  "shipToAttention" : "shipToAttention",
  "createDate" : "2000-01-23T04:56:07.000+00:00",
  "distributionCharges" : 7.3862819483858839220147274318151175975799560546875,
  "numberOfPallets" : 3,
  "legacyRestrictionType" : "legacyRestrictionType",
  "shipToPhone" : "shipToPhone",
  "needByDate" : "2000-01-23T04:56:07.000+00:00",
  "shipCode" : "shipCode",
  "authorizedBy" : "authorizedBy",
  "holdCode" : "holdCode",
  "deliverOnDate" : "2000-01-23T04:56:07.000+00:00",
  "totalDiscount" : 7.14353804701230643559028976596891880035400390625,
  "priorityCode" : 6,
  "completionStatus" : "completionStatus",
  "customerOrderNo" : "customerOrderNo",
  "mediaCode" : "mediaCode",
  "estimatedNumberOfPicks" : 9,
  "packingSlipTemplateId" : 3,
  "orderAssemblyInstructions" : "orderAssemblyInstructions",
  "totalQty" : 7,
  "orderConfirmationEmailTemplateId" : 1,
  "parcelLabelRef1" : "parcelLabelRef1",
  "billToState" : "billToState",
  "parcelLabelRef3" : "parcelLabelRef3",
  "fulfillmentProcessId" : 6,
  "parcelLabelRef2" : "parcelLabelRef2",
  "billToCity" : "billToCity",
  "lineItems" : [ {
    "itemSubGroupId" : 7,
    "extendedDiscount" : 1.0414449161182959269211778519093059003353118896484375,
    "orderAssemblyInstructions" : "orderAssemblyInstructions",
    "distributionCode" : "distributionCode",
    "itemMajorGroupId" : 0,
    "ncExtendedSell" : 4.67894798900584873990737833082675933837890625,
    "weightPerWrap" : 9.132027271330688478201409452594816684722900390625,
    "customFields" : {
      "key" : "{}"
    },
    "itemLegacyLowStockContactId" : 9,
    "revDate" : "revDate",
    "backorderQty" : 5,
    "orderSourceSKU" : "orderSourceSKU",
    "extendedCost" : 6.6284642750877420525057459599338471889495849609375,
    "id" : 0,
    "sku" : "sku",
    "unitDiscount" : 0.202532411323639305322785730822943150997161865234375,
    "sector" : "sector",
    "itemAccountCodeId" : 0,
    "itemProductCodeId" : 5,
    "itemWeight" : 7.26052126480210358039357743109576404094696044921875,
    "lobId" : 8,
    "shippedQty" : 7,
    "expirationDate" : "2000-01-23T04:56:07.000+00:00",
    "itemSummaryCodeId" : 4,
    "orderNo" : 4.6523964329332461176136348512955009937286376953125,
    "extendedSell" : 4.258773108174356281097061582840979099273681640625,
    "upc" : "upc",
    "productionLot" : "productionLot",
    "orderedQty" : 3,
    "vendorSKU" : "vendorSKU",
    "fulfillmentChannel" : "fulfillmentChannel",
    "unitCost" : 3.258856561904760695824734284542500972747802734375,
    "poNoId" : 7,
    "unitSell" : 4.078845849666752343409825698472559452056884765625,
    "allowedQty" : 3,
    "chargeCode" : "chargeCode"
  }, {
    "itemSubGroupId" : 7,
    "extendedDiscount" : 1.0414449161182959269211778519093059003353118896484375,
    "orderAssemblyInstructions" : "orderAssemblyInstructions",
    "distributionCode" : "distributionCode",
    "itemMajorGroupId" : 0,
    "ncExtendedSell" : 4.67894798900584873990737833082675933837890625,
    "weightPerWrap" : 9.132027271330688478201409452594816684722900390625,
    "customFields" : {
      "key" : "{}"
    },
    "itemLegacyLowStockContactId" : 9,
    "revDate" : "revDate",
    "backorderQty" : 5,
    "orderSourceSKU" : "orderSourceSKU",
    "extendedCost" : 6.6284642750877420525057459599338471889495849609375,
    "id" : 0,
    "sku" : "sku",
    "unitDiscount" : 0.202532411323639305322785730822943150997161865234375,
    "sector" : "sector",
    "itemAccountCodeId" : 0,
    "itemProductCodeId" : 5,
    "itemWeight" : 7.26052126480210358039357743109576404094696044921875,
    "lobId" : 8,
    "shippedQty" : 7,
    "expirationDate" : "2000-01-23T04:56:07.000+00:00",
    "itemSummaryCodeId" : 4,
    "orderNo" : 4.6523964329332461176136348512955009937286376953125,
    "extendedSell" : 4.258773108174356281097061582840979099273681640625,
    "upc" : "upc",
    "productionLot" : "productionLot",
    "orderedQty" : 3,
    "vendorSKU" : "vendorSKU",
    "fulfillmentChannel" : "fulfillmentChannel",
    "unitCost" : 3.258856561904760695824734284542500972747802734375,
    "poNoId" : 7,
    "unitSell" : 4.078845849666752343409825698472559452056884765625,
    "allowedQty" : 3,
    "chargeCode" : "chargeCode"
  } ],
  "shipToCity" : "shipToCity",
  "orderReason" : 9,
  "shipBy" : "2000-01-23T04:56:07.000+00:00",
  "shippingCharge" : 5.94489560761401580890606055618263781070709228515625,
  "distributionChannel" : "distributionChannel",
  "externalShippingSystemId" : 6,
  "lobId" : 6,
  "orderSourceId" : 6,
  "batchNo" : "batchNo",
  "shipToStreet2" : "shipToStreet2",
  "orderNo" : 0.80082819046101150206595775671303272247314453125,
  "shipToStreet3" : "shipToStreet3",
  "billToEmail" : "billToEmail",
  "parentKODOrderId" : 1.173074250955943309548956676735542714595794677734375,
  "modifyDate" : "2000-01-23T04:56:07.000+00:00",
  "totalPaid" : 0.885137473901165261480628032586537301540374755859375,
  "tax" : 3.35319334701124294184637619764544069766998291015625,
  "groupOrderId" : 7.4577447736837658709418974467553198337554931640625,
  "orderInvoiceTemplateId" : 6,
  "billToCountry" : "billToCountry",
  "billToPhone" : "billToPhone",
  "orderDate" : "2000-01-23T04:56:07.000+00:00",
  "numberOfLineItems" : 5,
  "extraOrderData" : [ {
    "sequence" : "sequence",
    "code" : "code",
    "customFields" : {
      "key" : "{}"
    },
    "category" : "category",
    "value" : "value"
  }, {
    "sequence" : "sequence",
    "code" : "code",
    "customFields" : {
      "key" : "{}"
    },
    "category" : "category",
    "value" : "value"
  } ],
  "priceMode" : "priceMode",
  "customFields" : {
    "key" : "{}"
  },
  "shipmentConfirmationEmailTemplateId" : 2,
  "stopBackOrders" : "stopBackOrders",
  "parcelAccountId" : 2,
  "enteredBy" : "enteredBy",
  "shipVia" : "shipVia",
  "total" : 3.093745262666447448651751983561553061008453369140625,
  "serviceTypeId" : "serviceTypeId",
  "estimatedWeightLbs" : 1.489415909854170383397331534069962799549102783203125,
  "weightLbs" : 6.51918095101838179772357761976309120655059814453125,
  "shipToCountry" : "shipToCountry",
  "balanceDue" : 7.061401241503109105224211816675961017608642578125,
  "orderLoadProgramId" : 8,
  "alcoholOrderType" : "alcoholOrderType",
  "billToStreet2" : "billToStreet2",
  "billToStreet3" : "billToStreet3",
  "omsOrderNo" : 9,
  "extraLineItemData" : [ {
    "code" : "code",
    "customFields" : {
      "key" : "{}"
    },
    "sku" : "sku",
    "category" : "category",
    "value" : "value"
  }, {
    "code" : "code",
    "customFields" : {
      "key" : "{}"
    },
    "sku" : "sku",
    "category" : "category",
    "value" : "value"
  } ],
  "thirdPartyParcelAccountId" : 4,
  "carrierId" : 5,
  "customerNo" : "customerNo"
}, {
  "integrationPartnerId" : 4,
  "omsCustomerId" : 6,
  "priceLevel" : "priceLevel",
  "shipToStreet" : "shipToStreet",
  "division" : 1,
  "billToZip" : "billToZip",
  "shipToEmail" : "shipToEmail",
  "billToStreet" : "billToStreet",
  "shipToState" : "shipToState",
  "giftMessage" : "giftMessage",
  "useOrderNoRoot" : 5,
  "costCenter" : "costCenter",
  "shipDate" : "2000-01-23T04:56:07.000+00:00",
  "orderMessage" : "orderMessage",
  "firstShipDate" : "2000-01-23T04:56:07.000+00:00",
  "warehouseId" : 1,
  "billToAttention" : "billToAttention",
  "subtotal" : 6.70401929795003592715829654480330646038055419921875,
  "status" : "status",
  "alternateUsage" : "alternateUsage",
  "authorizationAmount" : 2.3021358869347654518833223846741020679473876953125,
  "freight" : 6.8468526983526398765889098285697400569915771484375,
  "billToCompany" : "billToCompany",
  "shipToCompany" : "shipToCompany",
  "numberOfCartons" : 9,
  "shipToZip" : "shipToZip",
  "preAllocationEstimatedWeight" : 1.024645700144157789424070870154537260532379150390625,
  "customerPONo" : "customerPONo",
  "lastShipDate" : "2000-01-23T04:56:07.000+00:00",
  "shipToAttention" : "shipToAttention",
  "createDate" : "2000-01-23T04:56:07.000+00:00",
  "distributionCharges" : 7.3862819483858839220147274318151175975799560546875,
  "numberOfPallets" : 3,
  "legacyRestrictionType" : "legacyRestrictionType",
  "shipToPhone" : "shipToPhone",
  "needByDate" : "2000-01-23T04:56:07.000+00:00",
  "shipCode" : "shipCode",
  "authorizedBy" : "authorizedBy",
  "holdCode" : "holdCode",
  "deliverOnDate" : "2000-01-23T04:56:07.000+00:00",
  "totalDiscount" : 7.14353804701230643559028976596891880035400390625,
  "priorityCode" : 6,
  "completionStatus" : "completionStatus",
  "customerOrderNo" : "customerOrderNo",
  "mediaCode" : "mediaCode",
  "estimatedNumberOfPicks" : 9,
  "packingSlipTemplateId" : 3,
  "orderAssemblyInstructions" : "orderAssemblyInstructions",
  "totalQty" : 7,
  "orderConfirmationEmailTemplateId" : 1,
  "parcelLabelRef1" : "parcelLabelRef1",
  "billToState" : "billToState",
  "parcelLabelRef3" : "parcelLabelRef3",
  "fulfillmentProcessId" : 6,
  "parcelLabelRef2" : "parcelLabelRef2",
  "billToCity" : "billToCity",
  "lineItems" : [ {
    "itemSubGroupId" : 7,
    "extendedDiscount" : 1.0414449161182959269211778519093059003353118896484375,
    "orderAssemblyInstructions" : "orderAssemblyInstructions",
    "distributionCode" : "distributionCode",
    "itemMajorGroupId" : 0,
    "ncExtendedSell" : 4.67894798900584873990737833082675933837890625,
    "weightPerWrap" : 9.132027271330688478201409452594816684722900390625,
    "customFields" : {
      "key" : "{}"
    },
    "itemLegacyLowStockContactId" : 9,
    "revDate" : "revDate",
    "backorderQty" : 5,
    "orderSourceSKU" : "orderSourceSKU",
    "extendedCost" : 6.6284642750877420525057459599338471889495849609375,
    "id" : 0,
    "sku" : "sku",
    "unitDiscount" : 0.202532411323639305322785730822943150997161865234375,
    "sector" : "sector",
    "itemAccountCodeId" : 0,
    "itemProductCodeId" : 5,
    "itemWeight" : 7.26052126480210358039357743109576404094696044921875,
    "lobId" : 8,
    "shippedQty" : 7,
    "expirationDate" : "2000-01-23T04:56:07.000+00:00",
    "itemSummaryCodeId" : 4,
    "orderNo" : 4.6523964329332461176136348512955009937286376953125,
    "extendedSell" : 4.258773108174356281097061582840979099273681640625,
    "upc" : "upc",
    "productionLot" : "productionLot",
    "orderedQty" : 3,
    "vendorSKU" : "vendorSKU",
    "fulfillmentChannel" : "fulfillmentChannel",
    "unitCost" : 3.258856561904760695824734284542500972747802734375,
    "poNoId" : 7,
    "unitSell" : 4.078845849666752343409825698472559452056884765625,
    "allowedQty" : 3,
    "chargeCode" : "chargeCode"
  }, {
    "itemSubGroupId" : 7,
    "extendedDiscount" : 1.0414449161182959269211778519093059003353118896484375,
    "orderAssemblyInstructions" : "orderAssemblyInstructions",
    "distributionCode" : "distributionCode",
    "itemMajorGroupId" : 0,
    "ncExtendedSell" : 4.67894798900584873990737833082675933837890625,
    "weightPerWrap" : 9.132027271330688478201409452594816684722900390625,
    "customFields" : {
      "key" : "{}"
    },
    "itemLegacyLowStockContactId" : 9,
    "revDate" : "revDate",
    "backorderQty" : 5,
    "orderSourceSKU" : "orderSourceSKU",
    "extendedCost" : 6.6284642750877420525057459599338471889495849609375,
    "id" : 0,
    "sku" : "sku",
    "unitDiscount" : 0.202532411323639305322785730822943150997161865234375,
    "sector" : "sector",
    "itemAccountCodeId" : 0,
    "itemProductCodeId" : 5,
    "itemWeight" : 7.26052126480210358039357743109576404094696044921875,
    "lobId" : 8,
    "shippedQty" : 7,
    "expirationDate" : "2000-01-23T04:56:07.000+00:00",
    "itemSummaryCodeId" : 4,
    "orderNo" : 4.6523964329332461176136348512955009937286376953125,
    "extendedSell" : 4.258773108174356281097061582840979099273681640625,
    "upc" : "upc",
    "productionLot" : "productionLot",
    "orderedQty" : 3,
    "vendorSKU" : "vendorSKU",
    "fulfillmentChannel" : "fulfillmentChannel",
    "unitCost" : 3.258856561904760695824734284542500972747802734375,
    "poNoId" : 7,
    "unitSell" : 4.078845849666752343409825698472559452056884765625,
    "allowedQty" : 3,
    "chargeCode" : "chargeCode"
  } ],
  "shipToCity" : "shipToCity",
  "orderReason" : 9,
  "shipBy" : "2000-01-23T04:56:07.000+00:00",
  "shippingCharge" : 5.94489560761401580890606055618263781070709228515625,
  "distributionChannel" : "distributionChannel",
  "externalShippingSystemId" : 6,
  "lobId" : 6,
  "orderSourceId" : 6,
  "batchNo" : "batchNo",
  "shipToStreet2" : "shipToStreet2",
  "orderNo" : 0.80082819046101150206595775671303272247314453125,
  "shipToStreet3" : "shipToStreet3",
  "billToEmail" : "billToEmail",
  "parentKODOrderId" : 1.173074250955943309548956676735542714595794677734375,
  "modifyDate" : "2000-01-23T04:56:07.000+00:00",
  "totalPaid" : 0.885137473901165261480628032586537301540374755859375,
  "tax" : 3.35319334701124294184637619764544069766998291015625,
  "groupOrderId" : 7.4577447736837658709418974467553198337554931640625,
  "orderInvoiceTemplateId" : 6,
  "billToCountry" : "billToCountry",
  "billToPhone" : "billToPhone",
  "orderDate" : "2000-01-23T04:56:07.000+00:00",
  "numberOfLineItems" : 5,
  "extraOrderData" : [ {
    "sequence" : "sequence",
    "code" : "code",
    "customFields" : {
      "key" : "{}"
    },
    "category" : "category",
    "value" : "value"
  }, {
    "sequence" : "sequence",
    "code" : "code",
    "customFields" : {
      "key" : "{}"
    },
    "category" : "category",
    "value" : "value"
  } ],
  "priceMode" : "priceMode",
  "customFields" : {
    "key" : "{}"
  },
  "shipmentConfirmationEmailTemplateId" : 2,
  "stopBackOrders" : "stopBackOrders",
  "parcelAccountId" : 2,
  "enteredBy" : "enteredBy",
  "shipVia" : "shipVia",
  "total" : 3.093745262666447448651751983561553061008453369140625,
  "serviceTypeId" : "serviceTypeId",
  "estimatedWeightLbs" : 1.489415909854170383397331534069962799549102783203125,
  "weightLbs" : 6.51918095101838179772357761976309120655059814453125,
  "shipToCountry" : "shipToCountry",
  "balanceDue" : 7.061401241503109105224211816675961017608642578125,
  "orderLoadProgramId" : 8,
  "alcoholOrderType" : "alcoholOrderType",
  "billToStreet2" : "billToStreet2",
  "billToStreet3" : "billToStreet3",
  "omsOrderNo" : 9,
  "extraLineItemData" : [ {
    "code" : "code",
    "customFields" : {
      "key" : "{}"
    },
    "sku" : "sku",
    "category" : "category",
    "value" : "value"
  }, {
    "code" : "code",
    "customFields" : {
      "key" : "{}"
    },
    "sku" : "sku",
    "category" : "category",
    "value" : "value"
  } ],
  "thirdPartyParcelAccountId" : 4,
  "carrierId" : 5,
  "customerNo" : "customerNo"
} ]}]
     
     - parameter filter: (query) Query string, used to filter results. (optional)
     - parameter page: (query) Result page number.  Defaults to 1. (optional)
     - parameter limit: (query) Maximum results per page.  Defaults to 20.  Max allowed value is 250. (optional)
     - parameter sort: (query) Sort results by specified field. (optional)

     - returns: RequestBuilder<[Order]> 
     */
    public class func getOrderByFilterWithRequestBuilder(filter filter: String? = nil, page: Int32? = nil, limit: Int32? = nil, sort: String? = nil) -> RequestBuilder<[Order]> {
        let path = "/beta/order/search"
        let URLString = InfoplusAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "filter": filter,
            "page": page?.encodeToJSON(),
            "limit": limit?.encodeToJSON(),
            "sort": sort
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[Order]>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get an order by id
     
     - parameter orderId: (path) Id of the order to be returned. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getOrderById(orderId orderId: Double, completion: ((data: Order?, error: ErrorType?) -> Void)) {
        getOrderByIdWithRequestBuilder(orderId: orderId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get an order by id
     - GET /beta/order/{orderId}
     - Returns the order identified by the specified id.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     - examples: [{contentType=application/json, example={
  "integrationPartnerId" : 4,
  "omsCustomerId" : 6,
  "priceLevel" : "priceLevel",
  "shipToStreet" : "shipToStreet",
  "division" : 1,
  "billToZip" : "billToZip",
  "shipToEmail" : "shipToEmail",
  "billToStreet" : "billToStreet",
  "shipToState" : "shipToState",
  "giftMessage" : "giftMessage",
  "useOrderNoRoot" : 5,
  "costCenter" : "costCenter",
  "shipDate" : "2000-01-23T04:56:07.000+00:00",
  "orderMessage" : "orderMessage",
  "firstShipDate" : "2000-01-23T04:56:07.000+00:00",
  "warehouseId" : 1,
  "billToAttention" : "billToAttention",
  "subtotal" : 6.70401929795003592715829654480330646038055419921875,
  "status" : "status",
  "alternateUsage" : "alternateUsage",
  "authorizationAmount" : 2.3021358869347654518833223846741020679473876953125,
  "freight" : 6.8468526983526398765889098285697400569915771484375,
  "billToCompany" : "billToCompany",
  "shipToCompany" : "shipToCompany",
  "numberOfCartons" : 9,
  "shipToZip" : "shipToZip",
  "preAllocationEstimatedWeight" : 1.024645700144157789424070870154537260532379150390625,
  "customerPONo" : "customerPONo",
  "lastShipDate" : "2000-01-23T04:56:07.000+00:00",
  "shipToAttention" : "shipToAttention",
  "createDate" : "2000-01-23T04:56:07.000+00:00",
  "distributionCharges" : 7.3862819483858839220147274318151175975799560546875,
  "numberOfPallets" : 3,
  "legacyRestrictionType" : "legacyRestrictionType",
  "shipToPhone" : "shipToPhone",
  "needByDate" : "2000-01-23T04:56:07.000+00:00",
  "shipCode" : "shipCode",
  "authorizedBy" : "authorizedBy",
  "holdCode" : "holdCode",
  "deliverOnDate" : "2000-01-23T04:56:07.000+00:00",
  "totalDiscount" : 7.14353804701230643559028976596891880035400390625,
  "priorityCode" : 6,
  "completionStatus" : "completionStatus",
  "customerOrderNo" : "customerOrderNo",
  "mediaCode" : "mediaCode",
  "estimatedNumberOfPicks" : 9,
  "packingSlipTemplateId" : 3,
  "orderAssemblyInstructions" : "orderAssemblyInstructions",
  "totalQty" : 7,
  "orderConfirmationEmailTemplateId" : 1,
  "parcelLabelRef1" : "parcelLabelRef1",
  "billToState" : "billToState",
  "parcelLabelRef3" : "parcelLabelRef3",
  "fulfillmentProcessId" : 6,
  "parcelLabelRef2" : "parcelLabelRef2",
  "billToCity" : "billToCity",
  "lineItems" : [ {
    "itemSubGroupId" : 7,
    "extendedDiscount" : 1.0414449161182959269211778519093059003353118896484375,
    "orderAssemblyInstructions" : "orderAssemblyInstructions",
    "distributionCode" : "distributionCode",
    "itemMajorGroupId" : 0,
    "ncExtendedSell" : 4.67894798900584873990737833082675933837890625,
    "weightPerWrap" : 9.132027271330688478201409452594816684722900390625,
    "customFields" : {
      "key" : "{}"
    },
    "itemLegacyLowStockContactId" : 9,
    "revDate" : "revDate",
    "backorderQty" : 5,
    "orderSourceSKU" : "orderSourceSKU",
    "extendedCost" : 6.6284642750877420525057459599338471889495849609375,
    "id" : 0,
    "sku" : "sku",
    "unitDiscount" : 0.202532411323639305322785730822943150997161865234375,
    "sector" : "sector",
    "itemAccountCodeId" : 0,
    "itemProductCodeId" : 5,
    "itemWeight" : 7.26052126480210358039357743109576404094696044921875,
    "lobId" : 8,
    "shippedQty" : 7,
    "expirationDate" : "2000-01-23T04:56:07.000+00:00",
    "itemSummaryCodeId" : 4,
    "orderNo" : 4.6523964329332461176136348512955009937286376953125,
    "extendedSell" : 4.258773108174356281097061582840979099273681640625,
    "upc" : "upc",
    "productionLot" : "productionLot",
    "orderedQty" : 3,
    "vendorSKU" : "vendorSKU",
    "fulfillmentChannel" : "fulfillmentChannel",
    "unitCost" : 3.258856561904760695824734284542500972747802734375,
    "poNoId" : 7,
    "unitSell" : 4.078845849666752343409825698472559452056884765625,
    "allowedQty" : 3,
    "chargeCode" : "chargeCode"
  }, {
    "itemSubGroupId" : 7,
    "extendedDiscount" : 1.0414449161182959269211778519093059003353118896484375,
    "orderAssemblyInstructions" : "orderAssemblyInstructions",
    "distributionCode" : "distributionCode",
    "itemMajorGroupId" : 0,
    "ncExtendedSell" : 4.67894798900584873990737833082675933837890625,
    "weightPerWrap" : 9.132027271330688478201409452594816684722900390625,
    "customFields" : {
      "key" : "{}"
    },
    "itemLegacyLowStockContactId" : 9,
    "revDate" : "revDate",
    "backorderQty" : 5,
    "orderSourceSKU" : "orderSourceSKU",
    "extendedCost" : 6.6284642750877420525057459599338471889495849609375,
    "id" : 0,
    "sku" : "sku",
    "unitDiscount" : 0.202532411323639305322785730822943150997161865234375,
    "sector" : "sector",
    "itemAccountCodeId" : 0,
    "itemProductCodeId" : 5,
    "itemWeight" : 7.26052126480210358039357743109576404094696044921875,
    "lobId" : 8,
    "shippedQty" : 7,
    "expirationDate" : "2000-01-23T04:56:07.000+00:00",
    "itemSummaryCodeId" : 4,
    "orderNo" : 4.6523964329332461176136348512955009937286376953125,
    "extendedSell" : 4.258773108174356281097061582840979099273681640625,
    "upc" : "upc",
    "productionLot" : "productionLot",
    "orderedQty" : 3,
    "vendorSKU" : "vendorSKU",
    "fulfillmentChannel" : "fulfillmentChannel",
    "unitCost" : 3.258856561904760695824734284542500972747802734375,
    "poNoId" : 7,
    "unitSell" : 4.078845849666752343409825698472559452056884765625,
    "allowedQty" : 3,
    "chargeCode" : "chargeCode"
  } ],
  "shipToCity" : "shipToCity",
  "orderReason" : 9,
  "shipBy" : "2000-01-23T04:56:07.000+00:00",
  "shippingCharge" : 5.94489560761401580890606055618263781070709228515625,
  "distributionChannel" : "distributionChannel",
  "externalShippingSystemId" : 6,
  "lobId" : 6,
  "orderSourceId" : 6,
  "batchNo" : "batchNo",
  "shipToStreet2" : "shipToStreet2",
  "orderNo" : 0.80082819046101150206595775671303272247314453125,
  "shipToStreet3" : "shipToStreet3",
  "billToEmail" : "billToEmail",
  "parentKODOrderId" : 1.173074250955943309548956676735542714595794677734375,
  "modifyDate" : "2000-01-23T04:56:07.000+00:00",
  "totalPaid" : 0.885137473901165261480628032586537301540374755859375,
  "tax" : 3.35319334701124294184637619764544069766998291015625,
  "groupOrderId" : 7.4577447736837658709418974467553198337554931640625,
  "orderInvoiceTemplateId" : 6,
  "billToCountry" : "billToCountry",
  "billToPhone" : "billToPhone",
  "orderDate" : "2000-01-23T04:56:07.000+00:00",
  "numberOfLineItems" : 5,
  "extraOrderData" : [ {
    "sequence" : "sequence",
    "code" : "code",
    "customFields" : {
      "key" : "{}"
    },
    "category" : "category",
    "value" : "value"
  }, {
    "sequence" : "sequence",
    "code" : "code",
    "customFields" : {
      "key" : "{}"
    },
    "category" : "category",
    "value" : "value"
  } ],
  "priceMode" : "priceMode",
  "customFields" : {
    "key" : "{}"
  },
  "shipmentConfirmationEmailTemplateId" : 2,
  "stopBackOrders" : "stopBackOrders",
  "parcelAccountId" : 2,
  "enteredBy" : "enteredBy",
  "shipVia" : "shipVia",
  "total" : 3.093745262666447448651751983561553061008453369140625,
  "serviceTypeId" : "serviceTypeId",
  "estimatedWeightLbs" : 1.489415909854170383397331534069962799549102783203125,
  "weightLbs" : 6.51918095101838179772357761976309120655059814453125,
  "shipToCountry" : "shipToCountry",
  "balanceDue" : 7.061401241503109105224211816675961017608642578125,
  "orderLoadProgramId" : 8,
  "alcoholOrderType" : "alcoholOrderType",
  "billToStreet2" : "billToStreet2",
  "billToStreet3" : "billToStreet3",
  "omsOrderNo" : 9,
  "extraLineItemData" : [ {
    "code" : "code",
    "customFields" : {
      "key" : "{}"
    },
    "sku" : "sku",
    "category" : "category",
    "value" : "value"
  }, {
    "code" : "code",
    "customFields" : {
      "key" : "{}"
    },
    "sku" : "sku",
    "category" : "category",
    "value" : "value"
  } ],
  "thirdPartyParcelAccountId" : 4,
  "carrierId" : 5,
  "customerNo" : "customerNo"
}}]
     
     - parameter orderId: (path) Id of the order to be returned. 

     - returns: RequestBuilder<Order> 
     */
    public class func getOrderByIdWithRequestBuilder(orderId orderId: Double) -> RequestBuilder<Order> {
        var path = "/beta/order/{orderId}"
        path = path.stringByReplacingOccurrencesOfString("{orderId}", withString: "\(orderId)", options: .LiteralSearch, range: nil)
        let URLString = InfoplusAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Order>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get the tags for an order.
     
     - parameter orderId: (path) Id of the order to get tags for 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getOrderTags(orderId orderId: Double, completion: ((error: ErrorType?) -> Void)) {
        getOrderTagsWithRequestBuilder(orderId: orderId).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Get the tags for an order.
     - GET /beta/order/{orderId}/tag
     - Get all existing order tags.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     
     - parameter orderId: (path) Id of the order to get tags for 

     - returns: RequestBuilder<Void> 
     */
    public class func getOrderTagsWithRequestBuilder(orderId orderId: Double) -> RequestBuilder<Void> {
        var path = "/beta/order/{orderId}/tag"
        path = path.stringByReplacingOccurrencesOfString("{orderId}", withString: "\(orderId)", options: .LiteralSearch, range: nil)
        let URLString = InfoplusAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Run the Get Order Warehouse Fulfillment Plan method.
     
     - parameter body: (body) Input data for Get Order Warehouse Fulfillment Plan process. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getOrderWarehouseFulfillmentData(body body: GetOrderWarehouseFulfillmentDataInput, completion: ((data: GetOrderWarehouseFulfillmentDataOutput?, error: ErrorType?) -> Void)) {
        getOrderWarehouseFulfillmentDataWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Run the Get Order Warehouse Fulfillment Plan method.
     - POST /beta/order/getOrderWarehouseFulfillmentData
     - 
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     - examples: [{contentType=application/json, example={
  "rawData" : {
    "key" : {
      "canFulfill" : false,
      "warehouseId" : 0,
      "skuMap" : {
        "key" : {
          "quantity" : 6,
          "canFulfill" : false
        }
      }
    }
  },
  "planList" : [ {
    "score" : 1,
    "planDetailList" : [ {
      "warehouseId" : 5,
      "lineItemList" : [ "lineItemList", "lineItemList" ],
      "carrierCode" : 5
    }, {
      "warehouseId" : 5,
      "lineItemList" : [ "lineItemList", "lineItemList" ],
      "carrierCode" : 5
    } ]
  }, {
    "score" : 1,
    "planDetailList" : [ {
      "warehouseId" : 5,
      "lineItemList" : [ "lineItemList", "lineItemList" ],
      "carrierCode" : 5
    }, {
      "warehouseId" : 5,
      "lineItemList" : [ "lineItemList", "lineItemList" ],
      "carrierCode" : 5
    } ]
  } ]
}}]
     
     - parameter body: (body) Input data for Get Order Warehouse Fulfillment Plan process. 

     - returns: RequestBuilder<GetOrderWarehouseFulfillmentDataOutput> 
     */
    public class func getOrderWarehouseFulfillmentDataWithRequestBuilder(body body: GetOrderWarehouseFulfillmentDataInput) -> RequestBuilder<GetOrderWarehouseFulfillmentDataOutput> {
        let path = "/beta/order/getOrderWarehouseFulfillmentData"
        let URLString = InfoplusAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<GetOrderWarehouseFulfillmentDataOutput>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Run the RunFulfillmentPlan process.
     
     - parameter body: (body) Input data for RunFulfillmentPlan process. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func runFulfillmentPlan(body body: RunFulfillmentPlanInputAPIModel, completion: ((data: [ProcessOutputAPIModel]?, error: ErrorType?) -> Void)) {
        runFulfillmentPlanWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Run the RunFulfillmentPlan process.
     - POST /beta/order/runFulfillmentPlan
     - 
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     - examples: [{contentType=application/json, example=[ {
  "messageList" : [ "messageList", "messageList" ],
  "id" : "{}",
  "entity" : "{}",
  "status" : "status"
}, {
  "messageList" : [ "messageList", "messageList" ],
  "id" : "{}",
  "entity" : "{}",
  "status" : "status"
} ]}]
     
     - parameter body: (body) Input data for RunFulfillmentPlan process. 

     - returns: RequestBuilder<[ProcessOutputAPIModel]> 
     */
    public class func runFulfillmentPlanWithRequestBuilder(body body: RunFulfillmentPlanInputAPIModel) -> RequestBuilder<[ProcessOutputAPIModel]> {
        let path = "/beta/order/runFulfillmentPlan"
        let URLString = InfoplusAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[ProcessOutputAPIModel]>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update an order
     
     - parameter body: (body) Order to be updated. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateOrder(body body: Order, completion: ((error: ErrorType?) -> Void)) {
        updateOrderWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Update an order
     - PUT /beta/order
     - Updates an existing order using the specified data.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     
     - parameter body: (body) Order to be updated. 

     - returns: RequestBuilder<Void> 
     */
    public class func updateOrderWithRequestBuilder(body body: Order) -> RequestBuilder<Void> {
        let path = "/beta/order"
        let URLString = InfoplusAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update an order custom fields
     
     - parameter body: (body) Order to be updated. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateOrderCustomFields(body body: Order, completion: ((error: ErrorType?) -> Void)) {
        updateOrderCustomFieldsWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Update an order custom fields
     - PUT /beta/order/customFields
     - Updates an existing order custom fields using the specified data.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     
     - parameter body: (body) Order to be updated. 

     - returns: RequestBuilder<Void> 
     */
    public class func updateOrderCustomFieldsWithRequestBuilder(body body: Order) -> RequestBuilder<Void> {
        let path = "/beta/order/customFields"
        let URLString = InfoplusAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
