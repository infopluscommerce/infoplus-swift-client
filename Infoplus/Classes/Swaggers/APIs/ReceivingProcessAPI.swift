//
// ReceivingProcessAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class ReceivingProcessAPI: APIBase {
    /**
     
     Delete a receivingProcess
     
     - parameter receivingProcessId: (path) Id of the receivingProcess to be deleted. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteReceivingProcess(receivingProcessId receivingProcessId: Int, completion: ((error: ErrorType?) -> Void)) {
        deleteReceivingProcessWithRequestBuilder(receivingProcessId: receivingProcessId).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     
     Delete a receivingProcess
     
     - DELETE /v1.0/receivingProcess/{receivingProcessId}
     - Deletes the receivingProcess identified by the specified id.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     
     - parameter receivingProcessId: (path) Id of the receivingProcess to be deleted. 

     - returns: RequestBuilder<Void> 
     */
    public class func deleteReceivingProcessWithRequestBuilder(receivingProcessId receivingProcessId: Int) -> RequestBuilder<Void> {
        var path = "/v1.0/receivingProcess/{receivingProcessId}"
        path = path.stringByReplacingOccurrencesOfString("{receivingProcessId}", withString: "\(receivingProcessId)", options: .LiteralSearch, range: nil)
        let URLString = InfoplusAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<Void>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Search receivingProcesses by filter
     
     - parameter filter: (query) Query string, used to filter results. (optional)
     - parameter page: (query) Result page number.  Defaults to 1. (optional)
     - parameter limit: (query) Maximum results per page.  Defaults to 20.  Max allowed value is 250. (optional)
     - parameter sort: (query) Sort results by specified field. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getReceivingProcessByFilter(filter filter: String?, page: Int?, limit: Int?, sort: String?, completion: ((data: [ReceivingProcess]?, error: ErrorType?) -> Void)) {
        getReceivingProcessByFilterWithRequestBuilder(filter: filter, page: page, limit: limit, sort: sort).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Search receivingProcesses by filter
     
     - GET /v1.0/receivingProcess/search
     - Returns the list of receivingProcesses that match the given filter.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     - examples: [{contentType=application/json, example=[ {
  "receivingWorksheetId" : 123,
  "workBatchId" : 123,
  "modifyDate" : "2000-01-23T04:56:07.000+0000",
  "warehouseId" : 123,
  "id" : 123,
  "status" : "aeiou",
  "createDate" : "2000-01-23T04:56:07.000+0000"
} ]}]
     
     - parameter filter: (query) Query string, used to filter results. (optional)
     - parameter page: (query) Result page number.  Defaults to 1. (optional)
     - parameter limit: (query) Maximum results per page.  Defaults to 20.  Max allowed value is 250. (optional)
     - parameter sort: (query) Sort results by specified field. (optional)

     - returns: RequestBuilder<[ReceivingProcess]> 
     */
    public class func getReceivingProcessByFilterWithRequestBuilder(filter filter: String?, page: Int?, limit: Int?, sort: String?) -> RequestBuilder<[ReceivingProcess]> {
        let path = "/v1.0/receivingProcess/search"
        let URLString = InfoplusAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "filter": filter,
            "page": page,
            "limit": limit,
            "sort": sort
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<[ReceivingProcess]>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Get a receivingProcess by id
     
     - parameter receivingProcessId: (path) Id of the receivingProcess to be returned. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getReceivingProcessById(receivingProcessId receivingProcessId: Int, completion: ((data: ReceivingProcess?, error: ErrorType?) -> Void)) {
        getReceivingProcessByIdWithRequestBuilder(receivingProcessId: receivingProcessId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Get a receivingProcess by id
     
     - GET /v1.0/receivingProcess/{receivingProcessId}
     - Returns the receivingProcess identified by the specified id.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     - examples: [{contentType=application/json, example={
  "receivingWorksheetId" : 123,
  "workBatchId" : 123,
  "modifyDate" : "2000-01-23T04:56:07.000+0000",
  "warehouseId" : 123,
  "id" : 123,
  "status" : "aeiou",
  "createDate" : "2000-01-23T04:56:07.000+0000"
}}]
     
     - parameter receivingProcessId: (path) Id of the receivingProcess to be returned. 

     - returns: RequestBuilder<ReceivingProcess> 
     */
    public class func getReceivingProcessByIdWithRequestBuilder(receivingProcessId receivingProcessId: Int) -> RequestBuilder<ReceivingProcess> {
        var path = "/v1.0/receivingProcess/{receivingProcessId}"
        path = path.stringByReplacingOccurrencesOfString("{receivingProcessId}", withString: "\(receivingProcessId)", options: .LiteralSearch, range: nil)
        let URLString = InfoplusAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<ReceivingProcess>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

}
