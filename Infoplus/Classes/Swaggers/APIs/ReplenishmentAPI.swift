//
// ReplenishmentAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class ReplenishmentAPI: APIBase {
    /**
     
     Search replenishments by filter
     
     - parameter filter: (query) Query string, used to filter results. (optional)
     - parameter page: (query) Result page number.  Defaults to 1. (optional)
     - parameter limit: (query) Maximum results per page.  Defaults to 20.  Max allowed value is 250. (optional)
     - parameter sort: (query) Sort results by specified field. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getReplenishmentByFilter(filter filter: String?, page: Int?, limit: Int?, sort: String?, completion: ((data: [Replenishment]?, error: ErrorType?) -> Void)) {
        getReplenishmentByFilterWithRequestBuilder(filter: filter, page: page, limit: limit, sort: sort).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Search replenishments by filter
     
     - GET /v1.0/replenishment/search
     - Returns the list of replenishments that match the given filter.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     - examples: [{contentType=application/json, example=[ {
  "replenishmentProcess" : 123,
  "quantity" : 123,
  "modifyDate" : "2000-01-23T04:56:07.000+0000",
  "locationId" : 123,
  "pickFaceAssignment" : 123,
  "id" : 123,
  "sku" : "aeiou",
  "createDate" : "2000-01-23T04:56:07.000+0000"
} ]}]
     
     - parameter filter: (query) Query string, used to filter results. (optional)
     - parameter page: (query) Result page number.  Defaults to 1. (optional)
     - parameter limit: (query) Maximum results per page.  Defaults to 20.  Max allowed value is 250. (optional)
     - parameter sort: (query) Sort results by specified field. (optional)

     - returns: RequestBuilder<[Replenishment]> 
     */
    public class func getReplenishmentByFilterWithRequestBuilder(filter filter: String?, page: Int?, limit: Int?, sort: String?) -> RequestBuilder<[Replenishment]> {
        let path = "/v1.0/replenishment/search"
        let URLString = InfoplusAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "filter": filter,
            "page": page,
            "limit": limit,
            "sort": sort
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<[Replenishment]>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Get a replenishment by id
     
     - parameter replenishmentId: (path) Id of the replenishment to be returned. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getReplenishmentById(replenishmentId replenishmentId: Int, completion: ((data: Replenishment?, error: ErrorType?) -> Void)) {
        getReplenishmentByIdWithRequestBuilder(replenishmentId: replenishmentId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Get a replenishment by id
     
     - GET /v1.0/replenishment/{replenishmentId}
     - Returns the replenishment identified by the specified id.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     - examples: [{contentType=application/json, example={
  "replenishmentProcess" : 123,
  "quantity" : 123,
  "modifyDate" : "2000-01-23T04:56:07.000+0000",
  "locationId" : 123,
  "pickFaceAssignment" : 123,
  "id" : 123,
  "sku" : "aeiou",
  "createDate" : "2000-01-23T04:56:07.000+0000"
}}]
     
     - parameter replenishmentId: (path) Id of the replenishment to be returned. 

     - returns: RequestBuilder<Replenishment> 
     */
    public class func getReplenishmentByIdWithRequestBuilder(replenishmentId replenishmentId: Int) -> RequestBuilder<Replenishment> {
        var path = "/v1.0/replenishment/{replenishmentId}"
        path = path.stringByReplacingOccurrencesOfString("{replenishmentId}", withString: "\(replenishmentId)", options: .LiteralSearch, range: nil)
        let URLString = InfoplusAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<Replenishment>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

}
