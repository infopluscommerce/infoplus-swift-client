//
// FulfillmentProcessAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class FulfillmentProcessAPI: APIBase {
    /**
     
     Search fulfillmentProcesses by filter
     
     - parameter filter: (query) Query string, used to filter results. (optional)
     - parameter page: (query) Result page number.  Defaults to 1. (optional)
     - parameter limit: (query) Maximum results per page.  Defaults to 20.  Max allowed value is 250. (optional)
     - parameter sort: (query) Sort results by specified field. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getFulfillmentProcessByFilter(filter filter: String?, page: Int?, limit: Int?, sort: String?, completion: ((data: [FulfillmentProcess]?, error: ErrorType?) -> Void)) {
        getFulfillmentProcessByFilterWithRequestBuilder(filter: filter, page: page, limit: limit, sort: sort).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Search fulfillmentProcesses by filter
     
     - GET /v1.0/fulfillmentProcess/search
     - Returns the list of fulfillmentProcesses that match the given filter.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     - examples: [{contentType=application/json, example=[ {
  "pickListLayout" : "aeiou",
  "createPickWork" : true,
  "pickingRule" : "aeiou",
  "pickSummaryLayout" : "aeiou",
  "orderLimit" : 123,
  "pickListSort" : "aeiou",
  "createPickSummary" : true,
  "numberOfOrders" : 123,
  "firstPickPosition" : 123,
  "locationSmartFilterId" : 123,
  "totalPicks" : 123,
  "pickSummaryFormat" : "aeiou",
  "workBatchId" : 123,
  "numberOfSKUs" : 123,
  "cartonizeOrders" : true,
  "pickSortRule" : "aeiou",
  "totalOrdersToShip" : 123,
  "layoutRule" : "aeiou",
  "id" : 123,
  "pickListFormat" : "aeiou",
  "pickListGroup" : "aeiou",
  "shippedCasebreaks" : 123,
  "totalToDo" : 123,
  "createPickList" : true,
  "createDate" : "2000-01-23T04:56:07.000+0000",
  "createOrderAssemblyGuide" : true,
  "modifyDate" : "2000-01-23T04:56:07.000+0000",
  "numberOfLines" : 123,
  "createPackingSlip" : true,
  "shippedOrders" : 123,
  "shipDate" : "2000-01-23T04:56:07.000+0000",
  "processNo" : 123,
  "completedToDo" : 123,
  "pickSummarySort" : "aeiou",
  "preGenerateParcelLabels" : true,
  "warehouseId" : 123,
  "totalCasebreaksToShip" : 123,
  "allocationPlanId" : 123,
  "overridePackingSlipTemplateId" : 123,
  "autoShipCasebreakCartons" : true,
  "completedPicks" : 123,
  "orderSmartFilterId" : 123,
  "status" : "aeiou"
} ]}]
     
     - parameter filter: (query) Query string, used to filter results. (optional)
     - parameter page: (query) Result page number.  Defaults to 1. (optional)
     - parameter limit: (query) Maximum results per page.  Defaults to 20.  Max allowed value is 250. (optional)
     - parameter sort: (query) Sort results by specified field. (optional)

     - returns: RequestBuilder<[FulfillmentProcess]> 
     */
    public class func getFulfillmentProcessByFilterWithRequestBuilder(filter filter: String?, page: Int?, limit: Int?, sort: String?) -> RequestBuilder<[FulfillmentProcess]> {
        let path = "/v1.0/fulfillmentProcess/search"
        let URLString = InfoplusAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "filter": filter,
            "page": page,
            "limit": limit,
            "sort": sort
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<[FulfillmentProcess]>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Get a fulfillmentProcess by id
     
     - parameter fulfillmentProcessId: (path) Id of the fulfillmentProcess to be returned. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getFulfillmentProcessById(fulfillmentProcessId fulfillmentProcessId: Int, completion: ((data: FulfillmentProcess?, error: ErrorType?) -> Void)) {
        getFulfillmentProcessByIdWithRequestBuilder(fulfillmentProcessId: fulfillmentProcessId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Get a fulfillmentProcess by id
     
     - GET /v1.0/fulfillmentProcess/{fulfillmentProcessId}
     - Returns the fulfillmentProcess identified by the specified id.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     - examples: [{contentType=application/json, example={
  "pickListLayout" : "aeiou",
  "createPickWork" : true,
  "pickingRule" : "aeiou",
  "pickSummaryLayout" : "aeiou",
  "orderLimit" : 123,
  "pickListSort" : "aeiou",
  "createPickSummary" : true,
  "numberOfOrders" : 123,
  "firstPickPosition" : 123,
  "locationSmartFilterId" : 123,
  "totalPicks" : 123,
  "pickSummaryFormat" : "aeiou",
  "workBatchId" : 123,
  "numberOfSKUs" : 123,
  "cartonizeOrders" : true,
  "pickSortRule" : "aeiou",
  "totalOrdersToShip" : 123,
  "layoutRule" : "aeiou",
  "id" : 123,
  "pickListFormat" : "aeiou",
  "pickListGroup" : "aeiou",
  "shippedCasebreaks" : 123,
  "totalToDo" : 123,
  "createPickList" : true,
  "createDate" : "2000-01-23T04:56:07.000+0000",
  "createOrderAssemblyGuide" : true,
  "modifyDate" : "2000-01-23T04:56:07.000+0000",
  "numberOfLines" : 123,
  "createPackingSlip" : true,
  "shippedOrders" : 123,
  "shipDate" : "2000-01-23T04:56:07.000+0000",
  "processNo" : 123,
  "completedToDo" : 123,
  "pickSummarySort" : "aeiou",
  "preGenerateParcelLabels" : true,
  "warehouseId" : 123,
  "totalCasebreaksToShip" : 123,
  "allocationPlanId" : 123,
  "overridePackingSlipTemplateId" : 123,
  "autoShipCasebreakCartons" : true,
  "completedPicks" : 123,
  "orderSmartFilterId" : 123,
  "status" : "aeiou"
}}]
     
     - parameter fulfillmentProcessId: (path) Id of the fulfillmentProcess to be returned. 

     - returns: RequestBuilder<FulfillmentProcess> 
     */
    public class func getFulfillmentProcessByIdWithRequestBuilder(fulfillmentProcessId fulfillmentProcessId: Int) -> RequestBuilder<FulfillmentProcess> {
        var path = "/v1.0/fulfillmentProcess/{fulfillmentProcessId}"
        path = path.stringByReplacingOccurrencesOfString("{fulfillmentProcessId}", withString: "\(fulfillmentProcessId)", options: .LiteralSearch, range: nil)
        let URLString = InfoplusAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<FulfillmentProcess>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

}
