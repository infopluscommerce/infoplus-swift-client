//
// CustomerInvoiceTemplateLineAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class CustomerInvoiceTemplateLineAPI: APIBase {
    /**
     Add new audit for a customerInvoiceTemplateLine
     
     - parameter customerInvoiceTemplateLineId: (path) Id of the customerInvoiceTemplateLine to add an audit to 
     - parameter customerInvoiceTemplateLineAudit: (path) The audit to add 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func addCustomerInvoiceTemplateLineAudit(customerInvoiceTemplateLineId customerInvoiceTemplateLineId: Int32, customerInvoiceTemplateLineAudit: String, completion: ((error: ErrorType?) -> Void)) {
        addCustomerInvoiceTemplateLineAuditWithRequestBuilder(customerInvoiceTemplateLineId: customerInvoiceTemplateLineId, customerInvoiceTemplateLineAudit: customerInvoiceTemplateLineAudit).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Add new audit for a customerInvoiceTemplateLine
     - PUT /beta/customerInvoiceTemplateLine/{customerInvoiceTemplateLineId}/audit/{customerInvoiceTemplateLineAudit}
     - Adds an audit to an existing customerInvoiceTemplateLine.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     
     - parameter customerInvoiceTemplateLineId: (path) Id of the customerInvoiceTemplateLine to add an audit to 
     - parameter customerInvoiceTemplateLineAudit: (path) The audit to add 

     - returns: RequestBuilder<Void> 
     */
    public class func addCustomerInvoiceTemplateLineAuditWithRequestBuilder(customerInvoiceTemplateLineId customerInvoiceTemplateLineId: Int32, customerInvoiceTemplateLineAudit: String) -> RequestBuilder<Void> {
        var path = "/beta/customerInvoiceTemplateLine/{customerInvoiceTemplateLineId}/audit/{customerInvoiceTemplateLineAudit}"
        path = path.stringByReplacingOccurrencesOfString("{customerInvoiceTemplateLineId}", withString: "\(customerInvoiceTemplateLineId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{customerInvoiceTemplateLineAudit}", withString: "\(customerInvoiceTemplateLineAudit)", options: .LiteralSearch, range: nil)
        let URLString = InfoplusAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Add new tags for a customerInvoiceTemplateLine.
     
     - parameter customerInvoiceTemplateLineId: (path) Id of the customerInvoiceTemplateLine to add a tag to 
     - parameter customerInvoiceTemplateLineTag: (path) The tag to add 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func addCustomerInvoiceTemplateLineTag(customerInvoiceTemplateLineId customerInvoiceTemplateLineId: Int32, customerInvoiceTemplateLineTag: String, completion: ((error: ErrorType?) -> Void)) {
        addCustomerInvoiceTemplateLineTagWithRequestBuilder(customerInvoiceTemplateLineId: customerInvoiceTemplateLineId, customerInvoiceTemplateLineTag: customerInvoiceTemplateLineTag).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Add new tags for a customerInvoiceTemplateLine.
     - PUT /beta/customerInvoiceTemplateLine/{customerInvoiceTemplateLineId}/tag/{customerInvoiceTemplateLineTag}
     - Adds a tag to an existing customerInvoiceTemplateLine.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     
     - parameter customerInvoiceTemplateLineId: (path) Id of the customerInvoiceTemplateLine to add a tag to 
     - parameter customerInvoiceTemplateLineTag: (path) The tag to add 

     - returns: RequestBuilder<Void> 
     */
    public class func addCustomerInvoiceTemplateLineTagWithRequestBuilder(customerInvoiceTemplateLineId customerInvoiceTemplateLineId: Int32, customerInvoiceTemplateLineTag: String) -> RequestBuilder<Void> {
        var path = "/beta/customerInvoiceTemplateLine/{customerInvoiceTemplateLineId}/tag/{customerInvoiceTemplateLineTag}"
        path = path.stringByReplacingOccurrencesOfString("{customerInvoiceTemplateLineId}", withString: "\(customerInvoiceTemplateLineId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{customerInvoiceTemplateLineTag}", withString: "\(customerInvoiceTemplateLineTag)", options: .LiteralSearch, range: nil)
        let URLString = InfoplusAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete a customerInvoiceTemplateLine
     
     - parameter customerInvoiceTemplateLineId: (path) Id of the customerInvoiceTemplateLine to be deleted. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteCustomerInvoiceTemplateLine(customerInvoiceTemplateLineId customerInvoiceTemplateLineId: Int32, completion: ((error: ErrorType?) -> Void)) {
        deleteCustomerInvoiceTemplateLineWithRequestBuilder(customerInvoiceTemplateLineId: customerInvoiceTemplateLineId).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Delete a customerInvoiceTemplateLine
     - DELETE /beta/customerInvoiceTemplateLine/{customerInvoiceTemplateLineId}
     - Deletes the customerInvoiceTemplateLine identified by the specified id.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     
     - parameter customerInvoiceTemplateLineId: (path) Id of the customerInvoiceTemplateLine to be deleted. 

     - returns: RequestBuilder<Void> 
     */
    public class func deleteCustomerInvoiceTemplateLineWithRequestBuilder(customerInvoiceTemplateLineId customerInvoiceTemplateLineId: Int32) -> RequestBuilder<Void> {
        var path = "/beta/customerInvoiceTemplateLine/{customerInvoiceTemplateLineId}"
        path = path.stringByReplacingOccurrencesOfString("{customerInvoiceTemplateLineId}", withString: "\(customerInvoiceTemplateLineId)", options: .LiteralSearch, range: nil)
        let URLString = InfoplusAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete a tag for a customerInvoiceTemplateLine.
     
     - parameter customerInvoiceTemplateLineId: (path) Id of the customerInvoiceTemplateLine to remove tag from 
     - parameter customerInvoiceTemplateLineTag: (path) The tag to delete 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteCustomerInvoiceTemplateLineTag(customerInvoiceTemplateLineId customerInvoiceTemplateLineId: Int32, customerInvoiceTemplateLineTag: String, completion: ((error: ErrorType?) -> Void)) {
        deleteCustomerInvoiceTemplateLineTagWithRequestBuilder(customerInvoiceTemplateLineId: customerInvoiceTemplateLineId, customerInvoiceTemplateLineTag: customerInvoiceTemplateLineTag).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Delete a tag for a customerInvoiceTemplateLine.
     - DELETE /beta/customerInvoiceTemplateLine/{customerInvoiceTemplateLineId}/tag/{customerInvoiceTemplateLineTag}
     - Deletes an existing customerInvoiceTemplateLine tag using the specified data.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     
     - parameter customerInvoiceTemplateLineId: (path) Id of the customerInvoiceTemplateLine to remove tag from 
     - parameter customerInvoiceTemplateLineTag: (path) The tag to delete 

     - returns: RequestBuilder<Void> 
     */
    public class func deleteCustomerInvoiceTemplateLineTagWithRequestBuilder(customerInvoiceTemplateLineId customerInvoiceTemplateLineId: Int32, customerInvoiceTemplateLineTag: String) -> RequestBuilder<Void> {
        var path = "/beta/customerInvoiceTemplateLine/{customerInvoiceTemplateLineId}/tag/{customerInvoiceTemplateLineTag}"
        path = path.stringByReplacingOccurrencesOfString("{customerInvoiceTemplateLineId}", withString: "\(customerInvoiceTemplateLineId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{customerInvoiceTemplateLineTag}", withString: "\(customerInvoiceTemplateLineTag)", options: .LiteralSearch, range: nil)
        let URLString = InfoplusAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Search customerInvoiceTemplateLines by filter
     
     - parameter filter: (query) Query string, used to filter results. (optional)
     - parameter page: (query) Result page number.  Defaults to 1. (optional)
     - parameter limit: (query) Maximum results per page.  Defaults to 20.  Max allowed value is 250. (optional)
     - parameter sort: (query) Sort results by specified field. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getCustomerInvoiceTemplateLineByFilter(filter filter: String? = nil, page: Int32? = nil, limit: Int32? = nil, sort: String? = nil, completion: ((data: [CustomerInvoiceTemplateLine]?, error: ErrorType?) -> Void)) {
        getCustomerInvoiceTemplateLineByFilterWithRequestBuilder(filter: filter, page: page, limit: limit, sort: sort).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Search customerInvoiceTemplateLines by filter
     - GET /beta/customerInvoiceTemplateLine/search
     - Returns the list of customerInvoiceTemplateLines that match the given filter.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     - examples: [{contentType=application/json, example=[ {
  "priceLevelMode" : "priceLevelMode",
  "accountCode" : "accountCode",
  "modifyDate" : "2000-01-23T04:56:07.000+00:00",
  "seqNo" : 1,
  "priceLevelList" : [ {
    "quantity" : 9,
    "rate" : 3.61607674925191080461672754609026014804840087890625,
    "customFields" : {
      "key" : "{}"
    },
    "id" : 7
  }, {
    "quantity" : 9,
    "rate" : 3.61607674925191080461672754609026014804840087890625,
    "customFields" : {
      "key" : "{}"
    },
    "id" : 7
  } ],
  "customFields" : {
    "key" : "{}"
  },
  "includeIfZero" : false,
  "itemCode" : "itemCode",
  "description" : "description",
  "active" : false,
  "scriptId" : 2,
  "billingRuleId" : 5,
  "id" : 0,
  "department" : "department",
  "createDate" : "2000-01-23T04:56:07.000+00:00",
  "lobId" : 6,
  "invoiceTemplateId" : 5
}, {
  "priceLevelMode" : "priceLevelMode",
  "accountCode" : "accountCode",
  "modifyDate" : "2000-01-23T04:56:07.000+00:00",
  "seqNo" : 1,
  "priceLevelList" : [ {
    "quantity" : 9,
    "rate" : 3.61607674925191080461672754609026014804840087890625,
    "customFields" : {
      "key" : "{}"
    },
    "id" : 7
  }, {
    "quantity" : 9,
    "rate" : 3.61607674925191080461672754609026014804840087890625,
    "customFields" : {
      "key" : "{}"
    },
    "id" : 7
  } ],
  "customFields" : {
    "key" : "{}"
  },
  "includeIfZero" : false,
  "itemCode" : "itemCode",
  "description" : "description",
  "active" : false,
  "scriptId" : 2,
  "billingRuleId" : 5,
  "id" : 0,
  "department" : "department",
  "createDate" : "2000-01-23T04:56:07.000+00:00",
  "lobId" : 6,
  "invoiceTemplateId" : 5
} ]}]
     
     - parameter filter: (query) Query string, used to filter results. (optional)
     - parameter page: (query) Result page number.  Defaults to 1. (optional)
     - parameter limit: (query) Maximum results per page.  Defaults to 20.  Max allowed value is 250. (optional)
     - parameter sort: (query) Sort results by specified field. (optional)

     - returns: RequestBuilder<[CustomerInvoiceTemplateLine]> 
     */
    public class func getCustomerInvoiceTemplateLineByFilterWithRequestBuilder(filter filter: String? = nil, page: Int32? = nil, limit: Int32? = nil, sort: String? = nil) -> RequestBuilder<[CustomerInvoiceTemplateLine]> {
        let path = "/beta/customerInvoiceTemplateLine/search"
        let URLString = InfoplusAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "filter": filter,
            "page": page?.encodeToJSON(),
            "limit": limit?.encodeToJSON(),
            "sort": sort
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[CustomerInvoiceTemplateLine]>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get a customerInvoiceTemplateLine by id
     
     - parameter customerInvoiceTemplateLineId: (path) Id of the customerInvoiceTemplateLine to be returned. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getCustomerInvoiceTemplateLineById(customerInvoiceTemplateLineId customerInvoiceTemplateLineId: Int32, completion: ((data: CustomerInvoiceTemplateLine?, error: ErrorType?) -> Void)) {
        getCustomerInvoiceTemplateLineByIdWithRequestBuilder(customerInvoiceTemplateLineId: customerInvoiceTemplateLineId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a customerInvoiceTemplateLine by id
     - GET /beta/customerInvoiceTemplateLine/{customerInvoiceTemplateLineId}
     - Returns the customerInvoiceTemplateLine identified by the specified id.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     - examples: [{contentType=application/json, example={
  "priceLevelMode" : "priceLevelMode",
  "accountCode" : "accountCode",
  "modifyDate" : "2000-01-23T04:56:07.000+00:00",
  "seqNo" : 1,
  "priceLevelList" : [ {
    "quantity" : 9,
    "rate" : 3.61607674925191080461672754609026014804840087890625,
    "customFields" : {
      "key" : "{}"
    },
    "id" : 7
  }, {
    "quantity" : 9,
    "rate" : 3.61607674925191080461672754609026014804840087890625,
    "customFields" : {
      "key" : "{}"
    },
    "id" : 7
  } ],
  "customFields" : {
    "key" : "{}"
  },
  "includeIfZero" : false,
  "itemCode" : "itemCode",
  "description" : "description",
  "active" : false,
  "scriptId" : 2,
  "billingRuleId" : 5,
  "id" : 0,
  "department" : "department",
  "createDate" : "2000-01-23T04:56:07.000+00:00",
  "lobId" : 6,
  "invoiceTemplateId" : 5
}}]
     
     - parameter customerInvoiceTemplateLineId: (path) Id of the customerInvoiceTemplateLine to be returned. 

     - returns: RequestBuilder<CustomerInvoiceTemplateLine> 
     */
    public class func getCustomerInvoiceTemplateLineByIdWithRequestBuilder(customerInvoiceTemplateLineId customerInvoiceTemplateLineId: Int32) -> RequestBuilder<CustomerInvoiceTemplateLine> {
        var path = "/beta/customerInvoiceTemplateLine/{customerInvoiceTemplateLineId}"
        path = path.stringByReplacingOccurrencesOfString("{customerInvoiceTemplateLineId}", withString: "\(customerInvoiceTemplateLineId)", options: .LiteralSearch, range: nil)
        let URLString = InfoplusAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<CustomerInvoiceTemplateLine>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get the tags for a customerInvoiceTemplateLine.
     
     - parameter customerInvoiceTemplateLineId: (path) Id of the customerInvoiceTemplateLine to get tags for 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getCustomerInvoiceTemplateLineTags(customerInvoiceTemplateLineId customerInvoiceTemplateLineId: Int32, completion: ((error: ErrorType?) -> Void)) {
        getCustomerInvoiceTemplateLineTagsWithRequestBuilder(customerInvoiceTemplateLineId: customerInvoiceTemplateLineId).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Get the tags for a customerInvoiceTemplateLine.
     - GET /beta/customerInvoiceTemplateLine/{customerInvoiceTemplateLineId}/tag
     - Get all existing customerInvoiceTemplateLine tags.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     
     - parameter customerInvoiceTemplateLineId: (path) Id of the customerInvoiceTemplateLine to get tags for 

     - returns: RequestBuilder<Void> 
     */
    public class func getCustomerInvoiceTemplateLineTagsWithRequestBuilder(customerInvoiceTemplateLineId customerInvoiceTemplateLineId: Int32) -> RequestBuilder<Void> {
        var path = "/beta/customerInvoiceTemplateLine/{customerInvoiceTemplateLineId}/tag"
        path = path.stringByReplacingOccurrencesOfString("{customerInvoiceTemplateLineId}", withString: "\(customerInvoiceTemplateLineId)", options: .LiteralSearch, range: nil)
        let URLString = InfoplusAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get a duplicated a customerInvoiceTemplateLine by id
     
     - parameter customerInvoiceTemplateLineId: (path) Id of the customerInvoiceTemplateLine to be duplicated. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getDuplicateCustomerInvoiceTemplateLineById(customerInvoiceTemplateLineId customerInvoiceTemplateLineId: Int32, completion: ((data: CustomerInvoiceTemplateLine?, error: ErrorType?) -> Void)) {
        getDuplicateCustomerInvoiceTemplateLineByIdWithRequestBuilder(customerInvoiceTemplateLineId: customerInvoiceTemplateLineId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a duplicated a customerInvoiceTemplateLine by id
     - GET /beta/customerInvoiceTemplateLine/duplicate/{customerInvoiceTemplateLineId}
     - Returns a duplicated customerInvoiceTemplateLine identified by the specified id.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     - examples: [{contentType=application/json, example={
  "priceLevelMode" : "priceLevelMode",
  "accountCode" : "accountCode",
  "modifyDate" : "2000-01-23T04:56:07.000+00:00",
  "seqNo" : 1,
  "priceLevelList" : [ {
    "quantity" : 9,
    "rate" : 3.61607674925191080461672754609026014804840087890625,
    "customFields" : {
      "key" : "{}"
    },
    "id" : 7
  }, {
    "quantity" : 9,
    "rate" : 3.61607674925191080461672754609026014804840087890625,
    "customFields" : {
      "key" : "{}"
    },
    "id" : 7
  } ],
  "customFields" : {
    "key" : "{}"
  },
  "includeIfZero" : false,
  "itemCode" : "itemCode",
  "description" : "description",
  "active" : false,
  "scriptId" : 2,
  "billingRuleId" : 5,
  "id" : 0,
  "department" : "department",
  "createDate" : "2000-01-23T04:56:07.000+00:00",
  "lobId" : 6,
  "invoiceTemplateId" : 5
}}]
     
     - parameter customerInvoiceTemplateLineId: (path) Id of the customerInvoiceTemplateLine to be duplicated. 

     - returns: RequestBuilder<CustomerInvoiceTemplateLine> 
     */
    public class func getDuplicateCustomerInvoiceTemplateLineByIdWithRequestBuilder(customerInvoiceTemplateLineId customerInvoiceTemplateLineId: Int32) -> RequestBuilder<CustomerInvoiceTemplateLine> {
        var path = "/beta/customerInvoiceTemplateLine/duplicate/{customerInvoiceTemplateLineId}"
        path = path.stringByReplacingOccurrencesOfString("{customerInvoiceTemplateLineId}", withString: "\(customerInvoiceTemplateLineId)", options: .LiteralSearch, range: nil)
        let URLString = InfoplusAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<CustomerInvoiceTemplateLine>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update a customerInvoiceTemplateLine
     
     - parameter body: (body) CustomerInvoiceTemplateLine to be updated. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateCustomerInvoiceTemplateLine(body body: CustomerInvoiceTemplateLine, completion: ((error: ErrorType?) -> Void)) {
        updateCustomerInvoiceTemplateLineWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Update a customerInvoiceTemplateLine
     - PUT /beta/customerInvoiceTemplateLine
     - Updates an existing customerInvoiceTemplateLine using the specified data.
     - API Key:
       - type: apiKey API-Key 
       - name: api_key
     
     - parameter body: (body) CustomerInvoiceTemplateLine to be updated. 

     - returns: RequestBuilder<Void> 
     */
    public class func updateCustomerInvoiceTemplateLineWithRequestBuilder(body body: CustomerInvoiceTemplateLine) -> RequestBuilder<Void> {
        let path = "/beta/customerInvoiceTemplateLine"
        let URLString = InfoplusAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = InfoplusAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
