// Models.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation

protocol JSONEncodable {
    func encodeToJSON() -> AnyObject
}

public enum ErrorResponse : ErrorType {
    case Error(Int, NSData?, ErrorType)
}

public class Response<T> {
    public let statusCode: Int
    public let header: [String: String]
    public let body: T?

    public init(statusCode: Int, header: [String: String], body: T?) {
        self.statusCode = statusCode
        self.header = header
        self.body = body
    }

    public convenience init(response: NSHTTPURLResponse, body: T?) {
        let rawHeader = response.allHeaderFields
        var header = [String:String]()
        for case let (key, value) as (String, String) in rawHeader {
            header[key] = value
        }
        self.init(statusCode: response.statusCode, header: header, body: body)
    }
}

private var once = dispatch_once_t()
class Decoders {
    static private var decoders = Dictionary<String, ((AnyObject) -> AnyObject)>()

    static func addDecoder<T>(clazz clazz: T.Type, decoder: ((AnyObject) -> T)) {
        let key = "\(T.self)"
        decoders[key] = { decoder($0) as! AnyObject }
    }

    static func decode<T>(clazz clazz: [T].Type, source: AnyObject) -> [T] {
        let array = source as! [AnyObject]
        return array.map { Decoders.decode(clazz: T.self, source: $0) }
    }

    static func decode<T, Key: Hashable>(clazz clazz: [Key:T].Type, source: AnyObject) -> [Key:T] {
        let sourceDictionary = source as! [Key: AnyObject]
        var dictionary = [Key:T]()
        for (key, value) in sourceDictionary {
            dictionary[key] = Decoders.decode(clazz: T.self, source: value)
        }
        return dictionary
    }

    static func decode<T>(clazz clazz: T.Type, source: AnyObject) -> T {
        initialize()
        if T.self is Int32.Type && source is NSNumber {
            return source.intValue as! T;
        }
        if T.self is Int64.Type && source is NSNumber {
            return source.longLongValue as! T;
        }
        if T.self is NSUUID.Type && source is String {
            return NSUUID(UUIDString: source as! String) as! T
        }
        if source is T {
            return source as! T
        }
        if T.self is NSData.Type && source is String {
            return NSData(base64EncodedString: source as! String, options: NSDataBase64DecodingOptions()) as! T
        }

        let key = "\(T.self)"
        if let decoder = decoders[key] {
           return decoder(source) as! T
        } else {
            fatalError("Source \(source) is not convertible to type \(clazz): Maybe swagger file is insufficient")
        }
    }

    static func decodeOptional<T>(clazz clazz: T.Type, source: AnyObject?) -> T? {
        if source is NSNull {
            return nil
        }
        return source.map { (source: AnyObject) -> T in
            Decoders.decode(clazz: clazz, source: source)
        }
    }

    static func decodeOptional<T>(clazz clazz: [T].Type, source: AnyObject?) -> [T]? {
        if source is NSNull {
            return nil
        }
        return source.map { (someSource: AnyObject) -> [T] in
            Decoders.decode(clazz: clazz, source: someSource)
        }
    }

    static func decodeOptional<T, Key: Hashable>(clazz clazz: [Key:T].Type, source: AnyObject?) -> [Key:T]? {
        if source is NSNull {
            return nil
        }
        return source.map { (someSource: AnyObject) -> [Key:T] in
            Decoders.decode(clazz: clazz, source: someSource)
        }
    }

    static private func initialize() {
        dispatch_once(&once) {
            let formatters = [
                "yyyy-MM-dd",
                "yyyy-MM-dd'T'HH:mm:ssZZZZZ",
                "yyyy-MM-dd'T'HH:mm:ss.SSSZZZZZ",
                "yyyy-MM-dd'T'HH:mm:ss'Z'",
                "yyyy-MM-dd'T'HH:mm:ss.SSS"
            ].map { (format: String) -> NSDateFormatter in
                let formatter = NSDateFormatter()
                formatter.locale = NSLocale(localeIdentifier:"en_US_POSIX")
                formatter.dateFormat = format
                return formatter
            }
            // Decoder for NSDate
            Decoders.addDecoder(clazz: NSDate.self) { (source: AnyObject) -> NSDate in
               if let sourceString = source as? String {
                    for formatter in formatters {
                        if let date = formatter.dateFromString(sourceString) {
                            return date
                        }
                    }

                }
                if let sourceInt = source as? Int {
                    // treat as a java date
                    return NSDate(timeIntervalSince1970: Double(sourceInt / 1000) )
                }
                fatalError("formatter failed to parse \(source)")
            }

            // Decoder for ISOFullDate
            Decoders.addDecoder(clazz: ISOFullDate.self, decoder: { (source: AnyObject) -> ISOFullDate in
                if let string = source as? String,
                   let isoDate = ISOFullDate.from(string: string) {
                    return isoDate
                }
                fatalError("formatter failed to parse \(source)")
            }) 

            // Decoder for [Aisle]
            Decoders.addDecoder(clazz: [Aisle].self) { (source: AnyObject) -> [Aisle] in
                return Decoders.decode(clazz: [Aisle].self, source: source)
            }
            // Decoder for Aisle
            Decoders.addDecoder(clazz: Aisle.self) { (source: AnyObject) -> Aisle in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Aisle()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.warehouseId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseId"])
                instance.address = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["address"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [Alert]
            Decoders.addDecoder(clazz: [Alert].self) { (source: AnyObject) -> [Alert] in
                return Decoders.decode(clazz: [Alert].self, source: source)
            }
            // Decoder for Alert
            Decoders.addDecoder(clazz: Alert.self) { (source: AnyObject) -> Alert in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Alert()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.type = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["type"])
                instance.level = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["level"])
                instance.message = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["message"])
                instance.link = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["link"])
                instance.linkText = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["linkText"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.expirationDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["expirationDate"])
                instance.acknowledgeDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["acknowledgeDate"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [ApiResponse]
            Decoders.addDecoder(clazz: [ApiResponse].self) { (source: AnyObject) -> [ApiResponse] in
                return Decoders.decode(clazz: [ApiResponse].self, source: source)
            }
            // Decoder for ApiResponse
            Decoders.addDecoder(clazz: ApiResponse.self) { (source: AnyObject) -> ApiResponse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ApiResponse()
                return instance
            }


            // Decoder for [ApplyOrderWarehouseFulfillmentPlanInput]
            Decoders.addDecoder(clazz: [ApplyOrderWarehouseFulfillmentPlanInput].self) { (source: AnyObject) -> [ApplyOrderWarehouseFulfillmentPlanInput] in
                return Decoders.decode(clazz: [ApplyOrderWarehouseFulfillmentPlanInput].self, source: source)
            }
            // Decoder for ApplyOrderWarehouseFulfillmentPlanInput
            Decoders.addDecoder(clazz: ApplyOrderWarehouseFulfillmentPlanInput.self) { (source: AnyObject) -> ApplyOrderWarehouseFulfillmentPlanInput in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ApplyOrderWarehouseFulfillmentPlanInput()
                instance.orderNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orderNo"])
                instance.plan = Decoders.decodeOptional(clazz: OrderWarehouseFulfillmentPlan.self, source: sourceDictionary["plan"])
                return instance
            }


            // Decoder for [ApplyOrderWarehouseFulfillmentPlanOutput]
            Decoders.addDecoder(clazz: [ApplyOrderWarehouseFulfillmentPlanOutput].self) { (source: AnyObject) -> [ApplyOrderWarehouseFulfillmentPlanOutput] in
                return Decoders.decode(clazz: [ApplyOrderWarehouseFulfillmentPlanOutput].self, source: source)
            }
            // Decoder for ApplyOrderWarehouseFulfillmentPlanOutput
            Decoders.addDecoder(clazz: ApplyOrderWarehouseFulfillmentPlanOutput.self) { (source: AnyObject) -> ApplyOrderWarehouseFulfillmentPlanOutput in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ApplyOrderWarehouseFulfillmentPlanOutput()
                instance.orderList = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["orderList"])
                return instance
            }


            // Decoder for [Asn]
            Decoders.addDecoder(clazz: [Asn].self) { (source: AnyObject) -> [Asn] in
                return Decoders.decode(clazz: [Asn].self, source: source)
            }
            // Decoder for Asn
            Decoders.addDecoder(clazz: Asn.self) { (source: AnyObject) -> Asn in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Asn()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.poNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["poNo"])
                instance.vendorId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["vendorId"])
                instance.warehouseId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseId"])
                instance.orderDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["orderDate"])
                instance.type = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["type"])
                instance.billingName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billingName"])
                instance.billingAttention = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billingAttention"])
                instance.billingStreet1 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billingStreet1"])
                instance.billingStreet2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billingStreet2"])
                instance.billingCity = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billingCity"])
                instance.billingState = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billingState"])
                instance.billingZipCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billingZipCode"])
                instance.billingPhone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billingPhone"])
                instance.shipToName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToName"])
                instance.shipToAddress = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToAddress"])
                instance.shipToStreet1 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToStreet1"])
                instance.shipToStreet2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToStreet2"])
                instance.shipToCity = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToCity"])
                instance.shipToState = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToState"])
                instance.shipToZipCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToZipCode"])
                instance.shipToPhone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToPhone"])
                instance.corporateName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["corporateName"])
                instance.corporateAttention = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["corporateAttention"])
                instance.corporateStreet1 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["corporateStreet1"])
                instance.corporateStreet2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["corporateStreet2"])
                instance.corporateCity = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["corporateCity"])
                instance.corporateState = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["corporateState"])
                instance.corporateZipCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["corporateZipCode"])
                instance.accountCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["accountCode"])
                instance.buyer = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["buyer"])
                instance.carrier = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["carrier"])
                instance.confTo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["confTo"])
                instance.fob = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["fob"])
                instance.printed = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["printed"])
                instance.projectNo = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["projectNo"])
                instance.remarks = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["remarks"])
                instance.requestBy = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["requestBy"])
                instance.terms = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["terms"])
                instance.usedBy = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["usedBy"])
                instance.lineItems = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["lineItems"])
                instance.status = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["status"])
                instance.transferOrderId = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["transferOrderId"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [BillOfLading]
            Decoders.addDecoder(clazz: [BillOfLading].self) { (source: AnyObject) -> [BillOfLading] in
                return Decoders.decode(clazz: [BillOfLading].self, source: source)
            }
            // Decoder for BillOfLading
            Decoders.addDecoder(clazz: BillOfLading.self) { (source: AnyObject) -> BillOfLading in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = BillOfLading()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.orderNo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["orderNo"])
                instance.bolNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["bolNo"])
                instance.bolDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["bolDate"])
                instance.shipFromName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipFromName"])
                instance.shipFromAttention = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipFromAttention"])
                instance.shipFromAddress = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipFromAddress"])
                instance.shipFromCity = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipFromCity"])
                instance.shipFromState = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipFromState"])
                instance.shipFromZip = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipFromZip"])
                instance.shipFromCountry = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipFromCountry"])
                instance.sid = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sid"])
                instance.isShipFromFOB = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["isShipFromFOB"])
                instance.shipToName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToName"])
                instance.shipToAttention = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToAttention"])
                instance.shipToAddress = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToAddress"])
                instance.shipToCity = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToCity"])
                instance.shipToState = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToState"])
                instance.shipToZip = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToZip"])
                instance.shipToCountry = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToCountry"])
                instance.shipToLocationNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToLocationNo"])
                instance.cid = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cid"])
                instance.isShipToFOB = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["isShipToFOB"])
                instance.billToName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToName"])
                instance.billToAttention = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToAttention"])
                instance.billToAddress = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToAddress"])
                instance.billToCity = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToCity"])
                instance.billToState = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToState"])
                instance.billToZip = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToZip"])
                instance.billToCountry = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToCountry"])
                instance.isTrailerLoadedByShipper = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["isTrailerLoadedByShipper"])
                instance.byDriver = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["byDriver"])
                instance.codAmount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["codAmount"])
                instance.feeTermsCollect = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["feeTermsCollect"])
                instance.feeTermsPrepaid = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["feeTermsPrepaid"])
                instance.customerCheckAcceptable = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["customerCheckAcceptable"])
                instance.carrierName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["carrierName"])
                instance.trailerNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["trailerNo"])
                instance.sealNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sealNo"])
                instance.scac = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["scac"])
                instance.proNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["proNo"])
                instance.prepaid = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["prepaid"])
                instance.collect = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["collect"])
                instance.thirdParty = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["thirdParty"])
                instance.isThisAMasterBOL = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["isThisAMasterBOL"])
                instance.masterBOLId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["masterBOLId"])
                instance.isFreightCountedByShipper = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["isFreightCountedByShipper"])
                instance.byDriverPallets = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["byDriverPallets"])
                instance.byDriverPieces = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["byDriverPieces"])
                instance.specialInstructions = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["specialInstructions"])
                instance.orderInfoLines = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["orderInfoLines"])
                instance.carrierInfoLines = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["carrierInfoLines"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [BillOfLadingCarrierInfoLine]
            Decoders.addDecoder(clazz: [BillOfLadingCarrierInfoLine].self) { (source: AnyObject) -> [BillOfLadingCarrierInfoLine] in
                return Decoders.decode(clazz: [BillOfLadingCarrierInfoLine].self, source: source)
            }
            // Decoder for BillOfLadingCarrierInfoLine
            Decoders.addDecoder(clazz: BillOfLadingCarrierInfoLine.self) { (source: AnyObject) -> BillOfLadingCarrierInfoLine in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = BillOfLadingCarrierInfoLine()
                instance.seqNo = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["seqNo"])
                instance.huQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["huQuantity"])
                instance.huType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["huType"])
                instance.packageQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["packageQuantity"])
                instance.packageType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["packageType"])
                instance.weight = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["weight"])
                instance.isHazardousMaterial = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["isHazardousMaterial"])
                instance.commodityDescription = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["commodityDescription"])
                instance.nfmcNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nfmcNo"])
                instance.carrierClass = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["carrierClass"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [BillOfLadingOrderInfoLine]
            Decoders.addDecoder(clazz: [BillOfLadingOrderInfoLine].self) { (source: AnyObject) -> [BillOfLadingOrderInfoLine] in
                return Decoders.decode(clazz: [BillOfLadingOrderInfoLine].self, source: source)
            }
            // Decoder for BillOfLadingOrderInfoLine
            Decoders.addDecoder(clazz: BillOfLadingOrderInfoLine.self) { (source: AnyObject) -> BillOfLadingOrderInfoLine in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = BillOfLadingOrderInfoLine()
                instance.customerOrderNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["customerOrderNo"])
                instance.noPackages = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["noPackages"])
                instance.weight = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["weight"])
                instance.palletslip = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["palletslip"])
                instance.additionalShipperInfo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["additionalShipperInfo"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [BillingCode]
            Decoders.addDecoder(clazz: [BillingCode].self) { (source: AnyObject) -> [BillingCode] in
                return Decoders.decode(clazz: [BillingCode].self, source: source)
            }
            // Decoder for BillingCode
            Decoders.addDecoder(clazz: BillingCode.self) { (source: AnyObject) -> BillingCode in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = BillingCode()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.quantity = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["quantity"])
                instance.date = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["date"])
                instance.userId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["userId"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.billingCodeTypeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["billingCodeTypeId"])
                instance.recordType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["recordType"])
                instance.recordId = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["recordId"])
                instance.note = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["note"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [BillingCodeActivity]
            Decoders.addDecoder(clazz: [BillingCodeActivity].self) { (source: AnyObject) -> [BillingCodeActivity] in
                return Decoders.decode(clazz: [BillingCodeActivity].self, source: source)
            }
            // Decoder for BillingCodeActivity
            Decoders.addDecoder(clazz: BillingCodeActivity.self) { (source: AnyObject) -> BillingCodeActivity in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = BillingCodeActivity()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.importedId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["importedId"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.date = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["date"])
                instance.quantity = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["quantity"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.userId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["userId"])
                instance.email = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["email"])
                instance.billingCodeTypeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["billingCodeTypeId"])
                instance.billingCodeTypeName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billingCodeTypeName"])
                instance.note = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["note"])
                instance.recordTypeName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["recordTypeName"])
                instance.recordTypeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["recordTypeId"])
                instance.recordId = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["recordId"])
                instance.billingQuantity = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["billingQuantity"])
                instance.chargeRate = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["chargeRate"])
                instance.extendedCharge = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extendedCharge"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [BillingCodeType]
            Decoders.addDecoder(clazz: [BillingCodeType].self) { (source: AnyObject) -> [BillingCodeType] in
                return Decoders.decode(clazz: [BillingCodeType].self, source: source)
            }
            // Decoder for BillingCodeType
            Decoders.addDecoder(clazz: BillingCodeType.self) { (source: AnyObject) -> BillingCodeType in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = BillingCodeType()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.clientId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["clientId"])
                instance.billingCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billingCode"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.description = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["description"])
                instance.isActive = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["isActive"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [Building]
            Decoders.addDecoder(clazz: [Building].self) { (source: AnyObject) -> [Building] in
                return Decoders.decode(clazz: [Building].self, source: source)
            }
            // Decoder for Building
            Decoders.addDecoder(clazz: Building.self) { (source: AnyObject) -> Building in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Building()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.warehouseId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseId"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.address = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["address"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [BusinessTransaction]
            Decoders.addDecoder(clazz: [BusinessTransaction].self) { (source: AnyObject) -> [BusinessTransaction] in
                return Decoders.decode(clazz: [BusinessTransaction].self, source: source)
            }
            // Decoder for BusinessTransaction
            Decoders.addDecoder(clazz: BusinessTransaction.self) { (source: AnyObject) -> BusinessTransaction in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = BusinessTransaction()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.serverName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["serverName"])
                instance.queueName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["queueName"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.messageBody = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["messageBody"])
                instance.alertId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["alertId"])
                instance.status = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["status"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [Carrier]
            Decoders.addDecoder(clazz: [Carrier].self) { (source: AnyObject) -> [Carrier] in
                return Decoders.decode(clazz: [Carrier].self, source: source)
            }
            // Decoder for Carrier
            Decoders.addDecoder(clazz: Carrier.self) { (source: AnyObject) -> Carrier in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Carrier()
                instance.carrier = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["carrier"])
                instance.label = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["label"])
                instance.fullEntityClassName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["fullEntityClassName"])
                return instance
            }


            // Decoder for [CarrierService]
            Decoders.addDecoder(clazz: [CarrierService].self) { (source: AnyObject) -> [CarrierService] in
                return Decoders.decode(clazz: [CarrierService].self, source: source)
            }
            // Decoder for CarrierService
            Decoders.addDecoder(clazz: CarrierService.self) { (source: AnyObject) -> CarrierService in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CarrierService()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.label = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["label"])
                instance.fullEntityClassName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["fullEntityClassName"])
                return instance
            }


            // Decoder for [Cart]
            Decoders.addDecoder(clazz: [Cart].self) { (source: AnyObject) -> [Cart] in
                return Decoders.decode(clazz: [Cart].self, source: source)
            }
            // Decoder for Cart
            Decoders.addDecoder(clazz: Cart.self) { (source: AnyObject) -> Cart in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Cart()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.cartId = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cartId"])
                instance.description = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["description"])
                instance.currentFulfillmentProcessId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["currentFulfillmentProcessId"])
                instance.currentWorkBatchId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["currentWorkBatchId"])
                instance.positionType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["positionType"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [CartLocation]
            Decoders.addDecoder(clazz: [CartLocation].self) { (source: AnyObject) -> [CartLocation] in
                return Decoders.decode(clazz: [CartLocation].self, source: source)
            }
            // Decoder for CartLocation
            Decoders.addDecoder(clazz: CartLocation.self) { (source: AnyObject) -> CartLocation in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CartLocation()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.cartId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["cartId"])
                instance.address = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["address"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [Carton]
            Decoders.addDecoder(clazz: [Carton].self) { (source: AnyObject) -> [Carton] in
                return Decoders.decode(clazz: [Carton].self, source: source)
            }
            // Decoder for Carton
            Decoders.addDecoder(clazz: Carton.self) { (source: AnyObject) -> Carton in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Carton()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.orderNo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["orderNo"])
                instance.cartonNo = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["cartonNo"])
                instance.cartonTypeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["cartonTypeId"])
                instance.cartonLPN = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cartonLPN"])
                instance.weightLbs = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["weightLbs"])
                instance.layoutPosition = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["layoutPosition"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [CartonActivity]
            Decoders.addDecoder(clazz: [CartonActivity].self) { (source: AnyObject) -> [CartonActivity] in
                return Decoders.decode(clazz: [CartonActivity].self, source: source)
            }
            // Decoder for CartonActivity
            Decoders.addDecoder(clazz: CartonActivity.self) { (source: AnyObject) -> CartonActivity in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CartonActivity()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.orderNo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["orderNo"])
                instance.shipDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["shipDate"])
                instance.deliveredDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["deliveredDate"])
                instance.trackingNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["trackingNo"])
                instance.warehouseId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseId"])
                instance.warehouseName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["warehouseName"])
                instance.cartonNo = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["cartonNo"])
                instance.numberOfCartons = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["numberOfCartons"])
                instance.status = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["status"])
                instance.shipped = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["shipped"])
                instance.carrierServiceId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["carrierServiceId"])
                instance.dim1In = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["dim1In"])
                instance.dim2In = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["dim2In"])
                instance.dim3In = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["dim3In"])
                instance.estimatedZone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["estimatedZone"])
                instance.parcelAccountNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["parcelAccountNo"])
                instance.thirdPartyParcelAccountNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["thirdPartyParcelAccountNo"])
                instance.manifestId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["manifestId"])
                instance.residential = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["residential"])
                instance.billingOption = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billingOption"])
                instance.weightLbs = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["weightLbs"])
                instance.dimWeight = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["dimWeight"])
                instance.licensePlateNumber = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["licensePlateNumber"])
                instance.chargedFreightAmount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["chargedFreightAmount"])
                instance.publishedFreightAmount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["publishedFreightAmount"])
                instance.retailFreightAmount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["retailFreightAmount"])
                instance.cartonCreateDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["cartonCreateDate"])
                instance.cartonModifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["cartonModifyDate"])
                instance.alternateUsage = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alternateUsage"])
                instance.groupOrderId = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["groupOrderId"])
                instance.orderStatus = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orderStatus"])
                instance.orderStatusName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orderStatusName"])
                instance.fulfillmentProcessId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["fulfillmentProcessId"])
                instance.carrierId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["carrierId"])
                instance.carrierName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["carrierName"])
                instance.mediaCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["mediaCode"])
                instance.legacyRestrictionType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["legacyRestrictionType"])
                instance.reqTypeName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["reqTypeName"])
                instance.legacyServiceType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["legacyServiceType"])
                instance.legacyServiceTypeName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["legacyServiceTypeName"])
                instance.alcoholOrderType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholOrderType"])
                instance.distributionChannel = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["distributionChannel"])
                instance.distributionChannelName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["distributionChannelName"])
                instance.priorityCode = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["priorityCode"])
                instance.orderDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["orderDate"])
                instance.enteredBy = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["enteredBy"])
                instance.orderReason = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderReason"])
                instance.customerOrderNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["customerOrderNo"])
                instance.priceLevel = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["priceLevel"])
                instance.orderCreateDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["orderCreateDate"])
                instance.orderModifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["orderModifyDate"])
                instance.shipBy = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["shipBy"])
                instance.stopBackOrders = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["stopBackOrders"])
                instance.orderSourceId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderSourceId"])
                instance.orderSourceName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orderSourceName"])
                instance.integrationPartnerId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["integrationPartnerId"])
                instance.integrationPartnerName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["integrationPartnerName"])
                instance.orderLoadProgramId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderLoadProgramId"])
                instance.orderLoadProgramName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orderLoadProgramName"])
                instance.omsOrderNo = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["omsOrderNo"])
                instance.omsCustomerId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["omsCustomerId"])
                instance.shipToAttention = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToAttention"])
                instance.shipToCompany = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToCompany"])
                instance.shipToStreet = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToStreet"])
                instance.shipToStreet2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToStreet2"])
                instance.shipToStreet3 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToStreet3"])
                instance.shipToCity = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToCity"])
                instance.shipToState = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToState"])
                instance.shipToZip = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToZip"])
                instance.shipToCountry = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToCountry"])
                instance.shipToPhone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToPhone"])
                instance.shipToEmail = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToEmail"])
                instance.billToAttention = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToAttention"])
                instance.billToCompany = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToCompany"])
                instance.billToStreet = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToStreet"])
                instance.billToStreet2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToStreet2"])
                instance.billToStreet3 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToStreet3"])
                instance.billToCity = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToCity"])
                instance.billToState = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToState"])
                instance.billToZip = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToZip"])
                instance.billToCountry = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToCountry"])
                instance.billToPhone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToPhone"])
                instance.billToEmail = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToEmail"])
                instance.orderShipDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["orderShipDate"])
                instance.freight = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["freight"])
                instance.orderWeightLbs = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["orderWeightLbs"])
                instance.orderEstimatedWeightLbs = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["orderEstimatedWeightLbs"])
                instance.numberOfPallets = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["numberOfPallets"])
                instance.numberOfLineItems = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["numberOfLineItems"])
                instance.completionStatus = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["completionStatus"])
                instance.holdCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["holdCode"])
                instance.shipCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipCode"])
                instance.orderMessage = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orderMessage"])
                instance.division = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["division"])
                instance.costCenter = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["costCenter"])
                instance.authorizedBy = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["authorizedBy"])
                instance.batchNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["batchNo"])
                instance.firstShipDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["firstShipDate"])
                instance.lastShipDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["lastShipDate"])
                instance.deliverOnDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["deliverOnDate"])
                instance.customerPONo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["customerPONo"])
                instance.shipVia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipVia"])
                instance.needByDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["needByDate"])
                instance.total = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["total"])
                instance.balanceDue = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["balanceDue"])
                instance.totalPaid = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalPaid"])
                instance.authorizationAmount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["authorizationAmount"])
                instance.subtotal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["subtotal"])
                instance.taxOnFreight = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxOnFreight"])
                instance.tax = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["tax"])
                instance.distributionCharges = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["distributionCharges"])
                instance.shippingCharge = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["shippingCharge"])
                instance.totalDiscount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalDiscount"])
                instance.parcelAccountId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["parcelAccountId"])
                instance.thirdPartyParcelAccountId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["thirdPartyParcelAccountId"])
                instance.packingSlipTemplateId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["packingSlipTemplateId"])
                instance.giftMessage = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["giftMessage"])
                instance.branchSector = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["branchSector"])
                instance.branchArea = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["branchArea"])
                instance.branchCustomerType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["branchCustomerType"])
                instance.branchId = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["branchId"])
                instance.orderCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orderCode"])
                instance.leadPackageId = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["leadPackageId"])
                instance.totalQty = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["totalQty"])
                instance.estimatedNumberOfPicks = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["estimatedNumberOfPicks"])
                instance.orderConfirmationEmailTemplateId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderConfirmationEmailTemplateId"])
                instance.shipmentConfirmationEmailTemplateId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["shipmentConfirmationEmailTemplateId"])
                instance.externalShippingSystemId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["externalShippingSystemId"])
                instance.shippingSystemName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shippingSystemName"])
                instance.orderInvoiceTemplateId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderInvoiceTemplateId"])
                instance.priceMode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["priceMode"])
                instance.warehouseServiceTypeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseServiceTypeId"])
                instance.warehouseServiceLevelId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseServiceLevelId"])
                instance.slaDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["slaDate"])
                instance.slaStatus = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["slaStatus"])
                instance.productionType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["productionType"])
                instance.backOrderStatus = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["backOrderStatus"])
                instance.backOrderReleaseDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["backOrderReleaseDate"])
                instance.cartonTypeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["cartonTypeId"])
                instance.cartonAbbr = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cartonAbbr"])
                instance.cartonName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["cartonName"])
                instance.cartonLength = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["cartonLength"])
                instance.cartonWidth = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["cartonWidth"])
                instance.cartonHeight = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["cartonHeight"])
                instance.cartonInnerLength = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["cartonInnerLength"])
                instance.cartonInnerWidth = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["cartonInnerWidth"])
                instance.cartonInnerHeight = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["cartonInnerHeight"])
                instance.cartonWeight = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["cartonWeight"])
                instance.predefinedCartonId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["predefinedCartonId"])
                instance.predefinedCartonLabel = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["predefinedCartonLabel"])
                instance.billingQuantity = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["billingQuantity"])
                instance.chargeRate = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["chargeRate"])
                instance.extendedCharge = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extendedCharge"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [CartonContent]
            Decoders.addDecoder(clazz: [CartonContent].self) { (source: AnyObject) -> [CartonContent] in
                return Decoders.decode(clazz: [CartonContent].self, source: source)
            }
            // Decoder for CartonContent
            Decoders.addDecoder(clazz: CartonContent.self) { (source: AnyObject) -> CartonContent in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CartonContent()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.groupOrderId = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["groupOrderId"])
                instance.orderNo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["orderNo"])
                instance.cartonNo = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["cartonNo"])
                instance.cartonId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["cartonId"])
                instance.lineItemId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lineItemId"])
                instance.sku = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sku"])
                instance.location = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["location"])
                instance.quantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["quantity"])
                instance.quantityScanned = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["quantityScanned"])
                instance.completed = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["completed"])
                instance.toteId = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["toteId"])
                instance.pickerId = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pickerId"])
                instance.status = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["status"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [CartonType]
            Decoders.addDecoder(clazz: [CartonType].self) { (source: AnyObject) -> [CartonType] in
                return Decoders.decode(clazz: [CartonType].self, source: source)
            }
            // Decoder for CartonType
            Decoders.addDecoder(clazz: CartonType.self) { (source: AnyObject) -> CartonType in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CartonType()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.abbreviation = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["abbreviation"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.lengthIn = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["lengthIn"])
                instance.widthIn = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["widthIn"])
                instance.heightIn = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["heightIn"])
                instance.innerLengthIn = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["innerLengthIn"])
                instance.innerWidthIn = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["innerWidthIn"])
                instance.innerHeightIn = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["innerHeightIn"])
                instance.weightLbs = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["weightLbs"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.isActive = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["isActive"])
                instance.predefinedPackageTypeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["predefinedPackageTypeId"])
                instance.type = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["type"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [Customer]
            Decoders.addDecoder(clazz: [Customer].self) { (source: AnyObject) -> [Customer] in
                return Decoders.decode(clazz: [Customer].self, source: source)
            }
            // Decoder for Customer
            Decoders.addDecoder(clazz: Customer.self) { (source: AnyObject) -> Customer in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Customer()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.customerNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["customerNo"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.attention = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["attention"])
                instance.street = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["street"])
                instance.street2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["street2"])
                instance.street3Province = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["street3Province"])
                instance.city = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["city"])
                instance.state = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["state"])
                instance.zipCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["zipCode"])
                instance.country = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["country"])
                instance.phone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["phone"])
                instance.fax = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["fax"])
                instance.email = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["email"])
                instance.bossBranch = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["bossBranch"])
                instance.packageCarrierId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["packageCarrierId"])
                instance.truckCarrierId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["truckCarrierId"])
                instance.weightBreak = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["weightBreak"])
                instance.sector = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sector"])
                instance.division = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["division"])
                instance.costCenter = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["costCenter"])
                instance.county = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["county"])
                instance.area = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["area"])
                instance.customerType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["customerType"])
                instance.massLevel = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["massLevel"])
                instance.massFactor = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["massFactor"])
                instance.priceLevel = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["priceLevel"])
                instance.openDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["openDate"])
                instance.closeDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["closeDate"])
                instance.restrictionPercent = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["restrictionPercent"])
                instance.externalId = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["externalId"])
                instance.cycleDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["cycleDate"])
                instance.manager = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["manager"])
                instance.alternateInventory = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["alternateInventory"])
                instance.pin = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pin"])
                instance.faxGone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["faxGone"])
                instance.residential = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["residential"])
                instance.csrBranch = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["csrBranch"])
                instance.extrinsicText1 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extrinsicText1"])
                instance.extrinsicText2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extrinsicText2"])
                instance.extrinsicText3 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extrinsicText3"])
                instance.extrinsicNumber1 = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["extrinsicNumber1"])
                instance.extrinsicNumber2 = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["extrinsicNumber2"])
                instance.extrinsicDecimal1 = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extrinsicDecimal1"])
                instance.extrinsicDecimal2 = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extrinsicDecimal2"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.omsCustomerId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["omsCustomerId"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [CustomerInvoiceTemplate]
            Decoders.addDecoder(clazz: [CustomerInvoiceTemplate].self) { (source: AnyObject) -> [CustomerInvoiceTemplate] in
                return Decoders.decode(clazz: [CustomerInvoiceTemplate].self, source: source)
            }
            // Decoder for CustomerInvoiceTemplate
            Decoders.addDecoder(clazz: CustomerInvoiceTemplate.self) { (source: AnyObject) -> CustomerInvoiceTemplate in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CustomerInvoiceTemplate()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.poNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["poNo"])
                instance.costCenter = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["costCenter"])
                instance.description = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["description"])
                instance.notes = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["notes"])
                instance.terms = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["terms"])
                instance.specialInstructions = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["specialInstructions"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.billingPeriod = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billingPeriod"])
                instance.remitToAttention = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["remitToAttention"])
                instance.remitToCompany = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["remitToCompany"])
                instance.remitToStreet = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["remitToStreet"])
                instance.remitToStreet2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["remitToStreet2"])
                instance.remitToStreet3 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["remitToStreet3"])
                instance.remitToCity = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["remitToCity"])
                instance.remitToState = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["remitToState"])
                instance.remitToZip = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["remitToZip"])
                instance.remitToCountry = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["remitToCountry"])
                instance.remitToPhone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["remitToPhone"])
                instance.remitToEmail = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["remitToEmail"])
                instance.billToAttention = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToAttention"])
                instance.billToCompany = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToCompany"])
                instance.billToStreet = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToStreet"])
                instance.billToStreet2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToStreet2"])
                instance.billToStreet3 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToStreet3"])
                instance.billToCity = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToCity"])
                instance.billToState = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToState"])
                instance.billToZip = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToZip"])
                instance.billToCountry = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToCountry"])
                instance.billToPhone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToPhone"])
                instance.billToEmail = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToEmail"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [CustomerInvoiceTemplateLine]
            Decoders.addDecoder(clazz: [CustomerInvoiceTemplateLine].self) { (source: AnyObject) -> [CustomerInvoiceTemplateLine] in
                return Decoders.decode(clazz: [CustomerInvoiceTemplateLine].self, source: source)
            }
            // Decoder for CustomerInvoiceTemplateLine
            Decoders.addDecoder(clazz: CustomerInvoiceTemplateLine.self) { (source: AnyObject) -> CustomerInvoiceTemplateLine in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = CustomerInvoiceTemplateLine()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.description = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["description"])
                instance.seqNo = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["seqNo"])
                instance.accountCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["accountCode"])
                instance.active = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["active"])
                instance.includeIfZero = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["includeIfZero"])
                instance.department = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["department"])
                instance.itemCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemCode"])
                instance.invoiceTemplateId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["invoiceTemplateId"])
                instance.billingRuleId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["billingRuleId"])
                instance.priceLevelMode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["priceLevelMode"])
                instance.minimumCharge = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["minimumCharge"])
                instance.scriptId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["scriptId"])
                instance.priceLevelList = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["priceLevelList"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [DynamicKitComponentLine]
            Decoders.addDecoder(clazz: [DynamicKitComponentLine].self) { (source: AnyObject) -> [DynamicKitComponentLine] in
                return Decoders.decode(clazz: [DynamicKitComponentLine].self, source: source)
            }
            // Decoder for DynamicKitComponentLine
            Decoders.addDecoder(clazz: DynamicKitComponentLine.self) { (source: AnyObject) -> DynamicKitComponentLine in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = DynamicKitComponentLine()
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.sku = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sku"])
                instance.perKitQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["perKitQuantity"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [EDIDocumentType]
            Decoders.addDecoder(clazz: [EDIDocumentType].self) { (source: AnyObject) -> [EDIDocumentType] in
                return Decoders.decode(clazz: [EDIDocumentType].self, source: source)
            }
            // Decoder for EDIDocumentType
            Decoders.addDecoder(clazz: EDIDocumentType.self) { (source: AnyObject) -> EDIDocumentType in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = EDIDocumentType()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.label = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["label"])
                instance.fullEntityClassName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["fullEntityClassName"])
                return instance
            }


            // Decoder for [EdiDocument]
            Decoders.addDecoder(clazz: [EdiDocument].self) { (source: AnyObject) -> [EdiDocument] in
                return Decoders.decode(clazz: [EdiDocument].self, source: source)
            }
            // Decoder for EdiDocument
            Decoders.addDecoder(clazz: EdiDocument.self) { (source: AnyObject) -> EdiDocument in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = EdiDocument()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.ediConnectionId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["ediConnectionId"])
                instance.as2PartnerId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["as2PartnerId"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.transactionType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["transactionType"])
                instance.direction = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["direction"])
                instance.documentTypeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["documentTypeId"])
                instance.status = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["status"])
                instance.interchangeIndex = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["interchangeIndex"])
                instance.groupIndex = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["groupIndex"])
                instance.transactionIndex = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["transactionIndex"])
                instance.body = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["body"])
                instance.jsonBody = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["jsonBody"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [EditLineItemFulfillmentStrategyInputAPIModel]
            Decoders.addDecoder(clazz: [EditLineItemFulfillmentStrategyInputAPIModel].self) { (source: AnyObject) -> [EditLineItemFulfillmentStrategyInputAPIModel] in
                return Decoders.decode(clazz: [EditLineItemFulfillmentStrategyInputAPIModel].self, source: source)
            }
            // Decoder for EditLineItemFulfillmentStrategyInputAPIModel
            Decoders.addDecoder(clazz: EditLineItemFulfillmentStrategyInputAPIModel.self) { (source: AnyObject) -> EditLineItemFulfillmentStrategyInputAPIModel in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = EditLineItemFulfillmentStrategyInputAPIModel()
                instance.orderNoList = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["orderNoList"])
                instance.fulfillmentChannelId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["fulfillmentChannelId"])
                instance.sku = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sku"])
                return instance
            }


            // Decoder for [EmailTemplate]
            Decoders.addDecoder(clazz: [EmailTemplate].self) { (source: AnyObject) -> [EmailTemplate] in
                return Decoders.decode(clazz: [EmailTemplate].self, source: source)
            }
            // Decoder for EmailTemplate
            Decoders.addDecoder(clazz: EmailTemplate.self) { (source: AnyObject) -> EmailTemplate in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = EmailTemplate()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.subject = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["subject"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.fromName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["fromName"])
                instance.fromAddress = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["fromAddress"])
                instance.toName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["toName"])
                instance.toAddress = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["toAddress"])
                instance.ccAddress = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["ccAddress"])
                instance.bccAddress = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["bccAddress"])
                instance.emailTemplateType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["emailTemplateType"])
                instance.recordType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["recordType"])
                instance.apiVersion = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["apiVersion"])
                instance.scriptId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["scriptId"])
                instance.sendToBillTo = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["sendToBillTo"])
                instance.sendToShipTo = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["sendToShipTo"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [ExecuteJobInputAPIModel]
            Decoders.addDecoder(clazz: [ExecuteJobInputAPIModel].self) { (source: AnyObject) -> [ExecuteJobInputAPIModel] in
                return Decoders.decode(clazz: [ExecuteJobInputAPIModel].self, source: source)
            }
            // Decoder for ExecuteJobInputAPIModel
            Decoders.addDecoder(clazz: ExecuteJobInputAPIModel.self) { (source: AnyObject) -> ExecuteJobInputAPIModel in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ExecuteJobInputAPIModel()
                instance.idList = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["idList"])
                return instance
            }


            // Decoder for [ExecuteQuickAdjustmentInputAPIModel]
            Decoders.addDecoder(clazz: [ExecuteQuickAdjustmentInputAPIModel].self) { (source: AnyObject) -> [ExecuteQuickAdjustmentInputAPIModel] in
                return Decoders.decode(clazz: [ExecuteQuickAdjustmentInputAPIModel].self, source: source)
            }
            // Decoder for ExecuteQuickAdjustmentInputAPIModel
            Decoders.addDecoder(clazz: ExecuteQuickAdjustmentInputAPIModel.self) { (source: AnyObject) -> ExecuteQuickAdjustmentInputAPIModel in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ExecuteQuickAdjustmentInputAPIModel()
                instance.idList = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["idList"])
                return instance
            }


            // Decoder for [ExecuteQuickReceiptInputAPIModel]
            Decoders.addDecoder(clazz: [ExecuteQuickReceiptInputAPIModel].self) { (source: AnyObject) -> [ExecuteQuickReceiptInputAPIModel] in
                return Decoders.decode(clazz: [ExecuteQuickReceiptInputAPIModel].self, source: source)
            }
            // Decoder for ExecuteQuickReceiptInputAPIModel
            Decoders.addDecoder(clazz: ExecuteQuickReceiptInputAPIModel.self) { (source: AnyObject) -> ExecuteQuickReceiptInputAPIModel in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ExecuteQuickReceiptInputAPIModel()
                instance.idList = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["idList"])
                return instance
            }


            // Decoder for [ExternalShipment]
            Decoders.addDecoder(clazz: [ExternalShipment].self) { (source: AnyObject) -> [ExternalShipment] in
                return Decoders.decode(clazz: [ExternalShipment].self, source: source)
            }
            // Decoder for ExternalShipment
            Decoders.addDecoder(clazz: ExternalShipment.self) { (source: AnyObject) -> ExternalShipment in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ExternalShipment()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.orderId = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["orderId"])
                instance.carrierId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["carrierId"])
                instance.parcelAccountId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["parcelAccountId"])
                instance.thirdPartyParcelAccountId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["thirdPartyParcelAccountId"])
                instance.freight = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["freight"])
                instance.trackingNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["trackingNo"])
                instance.dim1In = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["dim1In"])
                instance.dim2In = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["dim2In"])
                instance.dim3In = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["dim3In"])
                instance.weightLbs = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["weightLbs"])
                instance.dimWeight = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["dimWeight"])
                instance.residential = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["residential"])
                instance.zone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["zone"])
                instance.status = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["status"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [ExternalShippingSystem]
            Decoders.addDecoder(clazz: [ExternalShippingSystem].self) { (source: AnyObject) -> [ExternalShippingSystem] in
                return Decoders.decode(clazz: [ExternalShippingSystem].self, source: source)
            }
            // Decoder for ExternalShippingSystem
            Decoders.addDecoder(clazz: ExternalShippingSystem.self) { (source: AnyObject) -> ExternalShippingSystem in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ExternalShippingSystem()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.systemType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["systemType"])
                instance.scriptId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["scriptId"])
                instance.explodeAllKitContents = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["explodeAllKitContents"])
                instance.apiKey = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["apiKey"])
                instance.apiSecret = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["apiSecret"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [FinanceSystemConnection]
            Decoders.addDecoder(clazz: [FinanceSystemConnection].self) { (source: AnyObject) -> [FinanceSystemConnection] in
                return Decoders.decode(clazz: [FinanceSystemConnection].self, source: source)
            }
            // Decoder for FinanceSystemConnection
            Decoders.addDecoder(clazz: FinanceSystemConnection.self) { (source: AnyObject) -> FinanceSystemConnection in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = FinanceSystemConnection()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.active = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["active"])
                instance.financeSystemConnectionType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["financeSystemConnectionType"])
                instance.environment = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["environment"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.warehouseId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseId"])
                instance.clientId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["clientId"])
                instance.orderSourceId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderSourceId"])
                instance.integrationPartnerId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["integrationPartnerId"])
                instance.infoplusSKUFieldToMap = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["infoplusSKUFieldToMap"])
                instance.financeSystemSKUFieldToMap = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["financeSystemSKUFieldToMap"])
                instance.scriptId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["scriptId"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [FinanceSystemConnectionLog]
            Decoders.addDecoder(clazz: [FinanceSystemConnectionLog].self) { (source: AnyObject) -> [FinanceSystemConnectionLog] in
                return Decoders.decode(clazz: [FinanceSystemConnectionLog].self, source: source)
            }
            // Decoder for FinanceSystemConnectionLog
            Decoders.addDecoder(clazz: FinanceSystemConnectionLog.self) { (source: AnyObject) -> FinanceSystemConnectionLog in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = FinanceSystemConnectionLog()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.financeSystemConnectionId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["financeSystemConnectionId"])
                instance.type = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["type"])
                instance.notes = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["notes"])
                instance.orderNo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["orderNo"])
                instance.financeSystemOrderNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["financeSystemOrderNo"])
                instance.financeSystemOrderId = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["financeSystemOrderId"])
                instance.asnId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["asnId"])
                instance.financeSystemPONo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["financeSystemPONo"])
                instance.financeSystemPOId = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["financeSystemPOId"])
                instance.itemReceiptIdId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["itemReceiptIdId"])
                instance.adjustmentIdId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["adjustmentIdId"])
                instance.jobIdId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["jobIdId"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [FulfillmentLayoutPosition]
            Decoders.addDecoder(clazz: [FulfillmentLayoutPosition].self) { (source: AnyObject) -> [FulfillmentLayoutPosition] in
                return Decoders.decode(clazz: [FulfillmentLayoutPosition].self, source: source)
            }
            // Decoder for FulfillmentLayoutPosition
            Decoders.addDecoder(clazz: FulfillmentLayoutPosition.self) { (source: AnyObject) -> FulfillmentLayoutPosition in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = FulfillmentLayoutPosition()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.fulfillmentProcessId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["fulfillmentProcessId"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.pickPosition = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pickPosition"])
                instance.layoutPosition = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["layoutPosition"])
                instance.sku = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sku"])
                instance.quantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["quantity"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [FulfillmentPlan]
            Decoders.addDecoder(clazz: [FulfillmentPlan].self) { (source: AnyObject) -> [FulfillmentPlan] in
                return Decoders.decode(clazz: [FulfillmentPlan].self, source: source)
            }
            // Decoder for FulfillmentPlan
            Decoders.addDecoder(clazz: FulfillmentPlan.self) { (source: AnyObject) -> FulfillmentPlan in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = FulfillmentPlan()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.description = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["description"])
                instance.warehouseId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseId"])
                instance.priorityCode = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["priorityCode"])
                instance.lastRunTime = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["lastRunTime"])
                instance.orderSmartFilterId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderSmartFilterId"])
                instance.locationSmartFilterId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["locationSmartFilterId"])
                instance.maxOrders = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["maxOrders"])
                instance.batchSizeMax = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["batchSizeMax"])
                instance.batchSizeMin = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["batchSizeMin"])
                instance.maxCartons = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["maxCartons"])
                instance.version = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["version"])
                instance.isMassDistribution = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["isMassDistribution"])
                instance.createPickWork = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["createPickWork"])
                instance.pickingRule = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pickingRule"])
                instance.pickBatchGroupId = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pickBatchGroupId"])
                instance.maxSKUsPerBatch = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["maxSKUsPerBatch"])
                instance.layoutRule = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["layoutRule"])
                instance.pickSortRule = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pickSortRule"])
                instance.locationSort = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["locationSort"])
                instance.createPickList = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["createPickList"])
                instance.pickListFormat = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pickListFormat"])
                instance.pickListLayout = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pickListLayout"])
                instance.pickListGroup = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pickListGroup"])
                instance.pickListSort = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pickListSort"])
                instance.pickListLocationSort = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pickListLocationSort"])
                instance.createPickSummary = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["createPickSummary"])
                instance.pickSummaryFormat = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pickSummaryFormat"])
                instance.pickSummaryLayout = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pickSummaryLayout"])
                instance.pickSummarySort = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pickSummarySort"])
                instance.pickScanSchemeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["pickScanSchemeId"])
                instance.cartonizeOrders = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["cartonizeOrders"])
                instance.cartonizationScriptId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["cartonizationScriptId"])
                instance.autoShipCasebreakCartons = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["autoShipCasebreakCartons"])
                instance.autoShipOrders = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["autoShipOrders"])
                instance.preGenerateParcelLabels = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["preGenerateParcelLabels"])
                instance.labelSort = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["labelSort"])
                instance.createPackingSlip = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["createPackingSlip"])
                instance.overridePackingSlipTemplateId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["overridePackingSlipTemplateId"])
                instance.createOrderAssemblyGuide = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["createOrderAssemblyGuide"])
                instance.createOrderInvoice = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["createOrderInvoice"])
                instance.overrideOrderInvoiceTemplateId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["overrideOrderInvoiceTemplateId"])
                instance.sendToExternalShippingSystem = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["sendToExternalShippingSystem"])
                instance.externalShippingSystemId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["externalShippingSystemId"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [FulfillmentProcess]
            Decoders.addDecoder(clazz: [FulfillmentProcess].self) { (source: AnyObject) -> [FulfillmentProcess] in
                return Decoders.decode(clazz: [FulfillmentProcess].self, source: source)
            }
            // Decoder for FulfillmentProcess
            Decoders.addDecoder(clazz: FulfillmentProcess.self) { (source: AnyObject) -> FulfillmentProcess in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = FulfillmentProcess()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.processNo = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["processNo"])
                instance.workBatchIdList = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["workBatchIdList"])
                instance.warehouseId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseId"])
                instance.fulfillmentPlanId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["fulfillmentPlanId"])
                instance.pickScanSchemeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["pickScanSchemeId"])
                instance.status = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["status"])
                instance.orderSmartFilterId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderSmartFilterId"])
                instance.locationSmartFilterId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["locationSmartFilterId"])
                instance.maxOrders = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["maxOrders"])
                instance.batchMaxSize = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["batchMaxSize"])
                instance.batchMinSize = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["batchMinSize"])
                instance.maxCartons = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["maxCartons"])
                instance.version = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["version"])
                instance.fulfillmentProcessGroup = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["fulfillmentProcessGroup"])
                instance.isMassDistribution = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["isMassDistribution"])
                instance.priorityCode = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["priorityCode"])
                instance.numberOfOrders = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["numberOfOrders"])
                instance.numberOfLines = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["numberOfLines"])
                instance.numberOfSKUs = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["numberOfSKUs"])
                instance.completedPicks = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["completedPicks"])
                instance.totalPicks = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["totalPicks"])
                instance.shippedCasebreaks = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["shippedCasebreaks"])
                instance.totalCasebreaksToShip = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["totalCasebreaksToShip"])
                instance.shippedOrders = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["shippedOrders"])
                instance.totalOrdersToShip = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["totalOrdersToShip"])
                instance.completedToDo = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["completedToDo"])
                instance.totalToDo = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["totalToDo"])
                instance.createPickWork = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["createPickWork"])
                instance.pickingRule = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pickingRule"])
                instance.pickBatchGroupId = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pickBatchGroupId"])
                instance.maxSKUsPerBatch = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["maxSKUsPerBatch"])
                instance.layoutRule = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["layoutRule"])
                instance.pickSortRule = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pickSortRule"])
                instance.locationSort = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["locationSort"])
                instance.firstPickPosition = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["firstPickPosition"])
                instance.pickListFormat = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pickListFormat"])
                instance.pickListLayout = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pickListLayout"])
                instance.pickListGroup = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pickListGroup"])
                instance.pickListSort = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pickListSort"])
                instance.pickListLocationSort = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pickListLocationSort"])
                instance.pickSummaryFormat = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pickSummaryFormat"])
                instance.pickSummaryLayout = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pickSummaryLayout"])
                instance.pickSummarySort = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pickSummarySort"])
                instance.createPickSummary = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["createPickSummary"])
                instance.createPickList = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["createPickList"])
                instance.preGenerateParcelLabels = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["preGenerateParcelLabels"])
                instance.labelSort = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["labelSort"])
                instance.shipDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["shipDate"])
                instance.autoShipCasebreakCartons = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["autoShipCasebreakCartons"])
                instance.autoShipOrders = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["autoShipOrders"])
                instance.cartonizeOrders = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["cartonizeOrders"])
                instance.cartonizationScriptId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["cartonizationScriptId"])
                instance.createPackingSlip = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["createPackingSlip"])
                instance.overridePackingSlipTemplateId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["overridePackingSlipTemplateId"])
                instance.createOrderAssemblyGuide = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["createOrderAssemblyGuide"])
                instance.createOrderInvoice = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["createOrderInvoice"])
                instance.overrideOrderInvoiceTemplateId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["overrideOrderInvoiceTemplateId"])
                instance.sendToExternalShippingSystem = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["sendToExternalShippingSystem"])
                instance.externalShippingSystemId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["externalShippingSystemId"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [FulfillmentProcessLog]
            Decoders.addDecoder(clazz: [FulfillmentProcessLog].self) { (source: AnyObject) -> [FulfillmentProcessLog] in
                return Decoders.decode(clazz: [FulfillmentProcessLog].self, source: source)
            }
            // Decoder for FulfillmentProcessLog
            Decoders.addDecoder(clazz: FulfillmentProcessLog.self) { (source: AnyObject) -> FulfillmentProcessLog in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = FulfillmentProcessLog()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.processId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["processId"])
                instance.warehouseId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseId"])
                instance.orderNo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["orderNo"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.sku = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sku"])
                instance.locationId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["locationId"])
                instance.itemReceiptId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["itemReceiptId"])
                instance.allocationIssueType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["allocationIssueType"])
                instance.message = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["message"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [FulfillmentProcessPickBatchGroup]
            Decoders.addDecoder(clazz: [FulfillmentProcessPickBatchGroup].self) { (source: AnyObject) -> [FulfillmentProcessPickBatchGroup] in
                return Decoders.decode(clazz: [FulfillmentProcessPickBatchGroup].self, source: source)
            }
            // Decoder for FulfillmentProcessPickBatchGroup
            Decoders.addDecoder(clazz: FulfillmentProcessPickBatchGroup.self) { (source: AnyObject) -> FulfillmentProcessPickBatchGroup in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = FulfillmentProcessPickBatchGroup()
                instance.id = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["id"])
                instance.label = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["label"])
                instance.fullEntityClassName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["fullEntityClassName"])
                return instance
            }


            // Decoder for [GetOrderWarehouseFulfillmentDataInput]
            Decoders.addDecoder(clazz: [GetOrderWarehouseFulfillmentDataInput].self) { (source: AnyObject) -> [GetOrderWarehouseFulfillmentDataInput] in
                return Decoders.decode(clazz: [GetOrderWarehouseFulfillmentDataInput].self, source: source)
            }
            // Decoder for GetOrderWarehouseFulfillmentDataInput
            Decoders.addDecoder(clazz: GetOrderWarehouseFulfillmentDataInput.self) { (source: AnyObject) -> GetOrderWarehouseFulfillmentDataInput in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = GetOrderWarehouseFulfillmentDataInput()
                instance.orderNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orderNo"])
                return instance
            }


            // Decoder for [GetOrderWarehouseFulfillmentDataOutput]
            Decoders.addDecoder(clazz: [GetOrderWarehouseFulfillmentDataOutput].self) { (source: AnyObject) -> [GetOrderWarehouseFulfillmentDataOutput] in
                return Decoders.decode(clazz: [GetOrderWarehouseFulfillmentDataOutput].self, source: source)
            }
            // Decoder for GetOrderWarehouseFulfillmentDataOutput
            Decoders.addDecoder(clazz: GetOrderWarehouseFulfillmentDataOutput.self) { (source: AnyObject) -> GetOrderWarehouseFulfillmentDataOutput in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = GetOrderWarehouseFulfillmentDataOutput()
                instance.rawData = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["rawData"])
                instance.planList = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["planList"])
                return instance
            }


            // Decoder for [IntegrationPartner]
            Decoders.addDecoder(clazz: [IntegrationPartner].self) { (source: AnyObject) -> [IntegrationPartner] in
                return Decoders.decode(clazz: [IntegrationPartner].self, source: source)
            }
            // Decoder for IntegrationPartner
            Decoders.addDecoder(clazz: IntegrationPartner.self) { (source: AnyObject) -> IntegrationPartner in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = IntegrationPartner()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.label = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["label"])
                instance.fullEntityClassName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["fullEntityClassName"])
                return instance
            }


            // Decoder for [InventoryAdjustment]
            Decoders.addDecoder(clazz: [InventoryAdjustment].self) { (source: AnyObject) -> [InventoryAdjustment] in
                return Decoders.decode(clazz: [InventoryAdjustment].self, source: source)
            }
            // Decoder for InventoryAdjustment
            Decoders.addDecoder(clazz: InventoryAdjustment.self) { (source: AnyObject) -> InventoryAdjustment in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = InventoryAdjustment()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.sku = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sku"])
                instance.poNoId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["poNoId"])
                instance.adjustmentDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["adjustmentDate"])
                instance.adjustmentTime = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["adjustmentTime"])
                instance.location = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["location"])
                instance.qty = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["qty"])
                instance.note = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["note"])
                instance.authorizedBy = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["authorizedBy"])
                instance.printed = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["printed"])
                instance.orderNo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["orderNo"])
                instance.adjustmentCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["adjustmentCode"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [InventoryDetail]
            Decoders.addDecoder(clazz: [InventoryDetail].self) { (source: AnyObject) -> [InventoryDetail] in
                return Decoders.decode(clazz: [InventoryDetail].self, source: source)
            }
            // Decoder for InventoryDetail
            Decoders.addDecoder(clazz: InventoryDetail.self) { (source: AnyObject) -> InventoryDetail in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = InventoryDetail()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.warehouseLocationId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseLocationId"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.sku = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sku"])
                instance.quantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["quantity"])
                instance.distributionDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["distributionDate"])
                instance.expirationDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["expirationDate"])
                instance.quantityPerInnerPack = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["quantityPerInnerPack"])
                instance.quantityPerCase = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["quantityPerCase"])
                instance.quantityPerPallet = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["quantityPerPallet"])
                instance.estimatedInnerPacks = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["estimatedInnerPacks"])
                instance.estimatedCases = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["estimatedCases"])
                instance.estimatedPallets = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["estimatedPallets"])
                instance.unitsPerWrap = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["unitsPerWrap"])
                instance.revisionDate = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["revisionDate"])
                instance.productionLot = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["productionLot"])
                instance.oldestReceiptDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["oldestReceiptDate"])
                instance.poNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["poNo"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [InventorySnapshot]
            Decoders.addDecoder(clazz: [InventorySnapshot].self) { (source: AnyObject) -> [InventorySnapshot] in
                return Decoders.decode(clazz: [InventorySnapshot].self, source: source)
            }
            // Decoder for InventorySnapshot
            Decoders.addDecoder(clazz: InventorySnapshot.self) { (source: AnyObject) -> InventorySnapshot in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = InventorySnapshot()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.warehouseLocationId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseLocationId"])
                instance.itemId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["itemId"])
                instance.itemDescription = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemDescription"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.snapshotDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["snapshotDate"])
                instance.isMixedReceipts = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["isMixedReceipts"])
                instance.quantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["quantity"])
                instance.address = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["address"])
                instance.estimatedInnerPacks = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["estimatedInnerPacks"])
                instance.estimatedCases = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["estimatedCases"])
                instance.estimatedPallets = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["estimatedPallets"])
                instance.inventoryValue = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["inventoryValue"])
                instance.inventoryAgeDays = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["inventoryAgeDays"])
                instance.warehouseId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseId"])
                instance.warehouseName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["warehouseName"])
                instance.warehouseZoneId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseZoneId"])
                instance.warehouseZoneName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["warehouseZoneName"])
                instance.warehouseZoneAddress = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["warehouseZoneAddress"])
                instance.warehouseBuildingId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseBuildingId"])
                instance.warehouseBuildingName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["warehouseBuildingName"])
                instance.warehouseAisleId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseAisleId"])
                instance.warehouseAisleAddress = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["warehouseAisleAddress"])
                instance.warehouseLocationOriginId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseLocationOriginId"])
                instance.warehouseLocationOriginName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["warehouseLocationOriginName"])
                instance.warehouseLocationBillingTypeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseLocationBillingTypeId"])
                instance.warehouseLocationBillingTypeName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["warehouseLocationBillingTypeName"])
                instance.warehouseLocationBehaviorTypeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseLocationBehaviorTypeId"])
                instance.warehouseLocationBehaviorTypeName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["warehouseLocationBehaviorTypeName"])
                instance.warehouseLocationFootprintId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseLocationFootprintId"])
                instance.warehouseLocationFootprintName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["warehouseLocationFootprintName"])
                instance.warehouseLocationFootprintWidth = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseLocationFootprintWidth"])
                instance.warehouseLocationFootprintHeight = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseLocationFootprintHeight"])
                instance.warehouseLocationFootprintDepth = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseLocationFootprintDepth"])
                instance.warehouseLocationCubicFeet = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["warehouseLocationCubicFeet"])
                instance.warehouseLocationLevel = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseLocationLevel"])
                instance.warehouseLocationBay = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseLocationBay"])
                instance.warehouseLocationNumber = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseLocationNumber"])
                instance.warehouseLocationOnline = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["warehouseLocationOnline"])
                instance.warehouseLocationPriorityCode = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseLocationPriorityCode"])
                instance.warehouseLocationAllowItemMixing = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["warehouseLocationAllowItemMixing"])
                instance.warehouseLocationCost = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseLocationCost"])
                instance.sku = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sku"])
                instance.itemVendorSku = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemVendorSku"])
                instance.itemUpc = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemUpc"])
                instance.itemMajorGroup = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["itemMajorGroup"])
                instance.itemMajorGroupName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemMajorGroupName"])
                instance.itemSubGroup = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["itemSubGroup"])
                instance.itemSubGroupName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemSubGroupName"])
                instance.itemProductCode = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["itemProductCode"])
                instance.itemProductCodeName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemProductCodeName"])
                instance.itemAccountCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemAccountCode"])
                instance.itemAccountCodeName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemAccountCodeName"])
                instance.itemSummaryCode = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["itemSummaryCode"])
                instance.itemSummaryCodeName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemSummaryCodeName"])
                instance.itemSector = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemSector"])
                instance.itemCubicFeet = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["itemCubicFeet"])
                instance.poNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["poNo"])
                instance.receiptDistributionDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["receiptDistributionDate"])
                instance.receiptUnitsPerWrap = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["receiptUnitsPerWrap"])
                instance.receiptQuantityPerInnerPack = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["receiptQuantityPerInnerPack"])
                instance.receiptQuantityPerCase = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["receiptQuantityPerCase"])
                instance.receiptQuantityPerPallet = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["receiptQuantityPerPallet"])
                instance.receiptRevisionDate = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["receiptRevisionDate"])
                instance.receiptProductionLot = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["receiptProductionLot"])
                instance.receiptReceiveDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["receiptReceiveDate"])
                instance.receiptStatus = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["receiptStatus"])
                instance.receiptStatusName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["receiptStatusName"])
                instance.receiptUnitCode = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["receiptUnitCode"])
                instance.receiptUnitCodeText = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["receiptUnitCodeText"])
                instance.receiptWrapCode = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["receiptWrapCode"])
                instance.receiptWrapCodeText = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["receiptWrapCodeText"])
                instance.receiptCaseWeight = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["receiptCaseWeight"])
                instance.receiptProductIdTag = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["receiptProductIdTag"])
                instance.alcoholType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholType"])
                instance.alcoholTypeName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholTypeName"])
                instance.alcoholContent = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["alcoholContent"])
                instance.alcoholContainer = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholContainer"])
                instance.alcoholContainerName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholContainerName"])
                instance.alcoholContainerVolume = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["alcoholContainerVolume"])
                instance.alcoholVintageYear = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholVintageYear"])
                instance.alcoholCountry = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholCountry"])
                instance.alcoholCountryName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholCountryName"])
                instance.alcoholState = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholState"])
                instance.alcoholRegion = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholRegion"])
                instance.alcoholBrand = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholBrand"])
                instance.alcoholUPCCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholUPCCode"])
                instance.alcoholNABCACode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholNABCACode"])
                instance.alcoholUNIMERCCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholUNIMERCCode"])
                instance.alcoholSCCCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholSCCCode"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [InventoryStorageActivity]
            Decoders.addDecoder(clazz: [InventoryStorageActivity].self) { (source: AnyObject) -> [InventoryStorageActivity] in
                return Decoders.decode(clazz: [InventoryStorageActivity].self, source: source)
            }
            // Decoder for InventoryStorageActivity
            Decoders.addDecoder(clazz: InventoryStorageActivity.self) { (source: AnyObject) -> InventoryStorageActivity in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = InventoryStorageActivity()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.importedRecordId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["importedRecordId"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.warehouseLocationId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseLocationId"])
                instance.itemId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["itemId"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.snapshotDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["snapshotDate"])
                instance.isMixedReceipts = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["isMixedReceipts"])
                instance.quantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["quantity"])
                instance.address = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["address"])
                instance.estimatedInnerPacks = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["estimatedInnerPacks"])
                instance.estimatedCases = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["estimatedCases"])
                instance.estimatedPallets = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["estimatedPallets"])
                instance.inventoryValue = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["inventoryValue"])
                instance.inventoryAgeDays = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["inventoryAgeDays"])
                instance.warehouseId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseId"])
                instance.warehouseName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["warehouseName"])
                instance.warehouseZoneId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseZoneId"])
                instance.warehouseZoneName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["warehouseZoneName"])
                instance.warehouseZoneAddress = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["warehouseZoneAddress"])
                instance.warehouseBuildingId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseBuildingId"])
                instance.warehouseBuildingName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["warehouseBuildingName"])
                instance.warehouseAisleId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseAisleId"])
                instance.warehouseAisleAddress = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["warehouseAisleAddress"])
                instance.warehouseLocationOriginId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseLocationOriginId"])
                instance.warehouseLocationOriginName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["warehouseLocationOriginName"])
                instance.warehouseLocationBillingTypeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseLocationBillingTypeId"])
                instance.warehouseLocationBillingTypeName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["warehouseLocationBillingTypeName"])
                instance.warehouseLocationBehaviorTypeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseLocationBehaviorTypeId"])
                instance.warehouseLocationBehaviorTypeName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["warehouseLocationBehaviorTypeName"])
                instance.warehouseLocationFootprintId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseLocationFootprintId"])
                instance.warehouseLocationFootprintName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["warehouseLocationFootprintName"])
                instance.warehouseLocationFootprintWidth = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseLocationFootprintWidth"])
                instance.warehouseLocationFootprintHeight = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseLocationFootprintHeight"])
                instance.warehouseLocationFootprintDepth = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseLocationFootprintDepth"])
                instance.warehouseLocationCubicFeet = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["warehouseLocationCubicFeet"])
                instance.warehouseLocationLevel = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseLocationLevel"])
                instance.warehouseLocationBay = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseLocationBay"])
                instance.warehouseLocationNumber = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseLocationNumber"])
                instance.warehouseLocationOnline = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["warehouseLocationOnline"])
                instance.warehouseLocationPriorityCode = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseLocationPriorityCode"])
                instance.warehouseLocationAllowItemMixing = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["warehouseLocationAllowItemMixing"])
                instance.warehouseLocationCost = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseLocationCost"])
                instance.sku = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sku"])
                instance.itemVendorSku = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemVendorSku"])
                instance.itemUpc = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemUpc"])
                instance.itemMajorGroup = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["itemMajorGroup"])
                instance.itemMajorGroupName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemMajorGroupName"])
                instance.itemSubGroup = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["itemSubGroup"])
                instance.itemSubGroupName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemSubGroupName"])
                instance.itemProductCode = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["itemProductCode"])
                instance.itemProductCodeName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemProductCodeName"])
                instance.itemAccountCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemAccountCode"])
                instance.itemAccountCodeName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemAccountCodeName"])
                instance.itemSummaryCode = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["itemSummaryCode"])
                instance.itemSummaryCodeName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemSummaryCodeName"])
                instance.itemSector = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemSector"])
                instance.itemCubicFeet = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["itemCubicFeet"])
                instance.poNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["poNo"])
                instance.receiptDistributionDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["receiptDistributionDate"])
                instance.receiptUnitsPerWrap = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["receiptUnitsPerWrap"])
                instance.receiptQuantityPerInnerPack = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["receiptQuantityPerInnerPack"])
                instance.receiptQuantityPerCase = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["receiptQuantityPerCase"])
                instance.receiptQuantityPerPallet = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["receiptQuantityPerPallet"])
                instance.receiptRevisionDate = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["receiptRevisionDate"])
                instance.receiptProductionLot = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["receiptProductionLot"])
                instance.receiptReceiveDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["receiptReceiveDate"])
                instance.receiptStatus = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["receiptStatus"])
                instance.receiptStatusName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["receiptStatusName"])
                instance.receiptUnitCode = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["receiptUnitCode"])
                instance.receiptUnitCodeText = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["receiptUnitCodeText"])
                instance.receiptWrapCode = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["receiptWrapCode"])
                instance.receiptWrapCodeText = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["receiptWrapCodeText"])
                instance.receiptCaseWeight = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["receiptCaseWeight"])
                instance.receiptProductIdTag = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["receiptProductIdTag"])
                instance.alcoholTypeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["alcoholTypeId"])
                instance.alcoholTypeName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholTypeName"])
                instance.alcoholContent = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["alcoholContent"])
                instance.alcoholContainerId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["alcoholContainerId"])
                instance.alcoholContainerName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholContainerName"])
                instance.alcoholContainerVolume = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["alcoholContainerVolume"])
                instance.alcoholVintageYear = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholVintageYear"])
                instance.alcoholCountryId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["alcoholCountryId"])
                instance.alcoholCountryName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholCountryName"])
                instance.alcoholState = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholState"])
                instance.alcoholRegion = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholRegion"])
                instance.alcoholBrand = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholBrand"])
                instance.alcoholUPCCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholUPCCode"])
                instance.alcoholNABCACode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholNABCACode"])
                instance.alcoholUNIMERCCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholUNIMERCCode"])
                instance.alcoholSCCCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholSCCCode"])
                instance.billingQuantity = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["billingQuantity"])
                instance.chargeRate = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["chargeRate"])
                instance.extendedCharge = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extendedCharge"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [InvoiceTemplateLinePriceLevel]
            Decoders.addDecoder(clazz: [InvoiceTemplateLinePriceLevel].self) { (source: AnyObject) -> [InvoiceTemplateLinePriceLevel] in
                return Decoders.decode(clazz: [InvoiceTemplateLinePriceLevel].self, source: source)
            }
            // Decoder for InvoiceTemplateLinePriceLevel
            Decoders.addDecoder(clazz: InvoiceTemplateLinePriceLevel.self) { (source: AnyObject) -> InvoiceTemplateLinePriceLevel in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = InvoiceTemplateLinePriceLevel()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.quantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["quantity"])
                instance.rate = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["rate"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [InvoiceWorksheet]
            Decoders.addDecoder(clazz: [InvoiceWorksheet].self) { (source: AnyObject) -> [InvoiceWorksheet] in
                return Decoders.decode(clazz: [InvoiceWorksheet].self, source: source)
            }
            // Decoder for InvoiceWorksheet
            Decoders.addDecoder(clazz: InvoiceWorksheet.self) { (source: AnyObject) -> InvoiceWorksheet in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = InvoiceWorksheet()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.invoiceNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["invoiceNo"])
                instance.poNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["poNo"])
                instance.costCenter = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["costCenter"])
                instance.description = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["description"])
                instance.notes = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["notes"])
                instance.terms = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["terms"])
                instance.specialInstructions = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["specialInstructions"])
                instance.total = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["total"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.customerInvoiceTemplateId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["customerInvoiceTemplateId"])
                instance.startDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["startDate"])
                instance.endDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["endDate"])
                instance.issueDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["issueDate"])
                instance.status = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["status"])
                instance.remitToAttention = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["remitToAttention"])
                instance.remitToCompany = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["remitToCompany"])
                instance.remitToStreet = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["remitToStreet"])
                instance.remitToStreet2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["remitToStreet2"])
                instance.remitToStreet3 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["remitToStreet3"])
                instance.remitToCity = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["remitToCity"])
                instance.remitToState = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["remitToState"])
                instance.remitToZip = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["remitToZip"])
                instance.remitToCountry = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["remitToCountry"])
                instance.remitToPhone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["remitToPhone"])
                instance.remitToEmail = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["remitToEmail"])
                instance.billToAttention = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToAttention"])
                instance.billToCompany = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToCompany"])
                instance.billToStreet = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToStreet"])
                instance.billToStreet2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToStreet2"])
                instance.billToStreet3 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToStreet3"])
                instance.billToCity = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToCity"])
                instance.billToState = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToState"])
                instance.billToZip = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToZip"])
                instance.billToCountry = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToCountry"])
                instance.billToPhone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToPhone"])
                instance.billToEmail = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToEmail"])
                instance.invoiceWorksheetLineItemList = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["invoiceWorksheetLineItemList"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [InvoiceWorksheetLine]
            Decoders.addDecoder(clazz: [InvoiceWorksheetLine].self) { (source: AnyObject) -> [InvoiceWorksheetLine] in
                return Decoders.decode(clazz: [InvoiceWorksheetLine].self, source: source)
            }
            // Decoder for InvoiceWorksheetLine
            Decoders.addDecoder(clazz: InvoiceWorksheetLine.self) { (source: AnyObject) -> InvoiceWorksheetLine in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = InvoiceWorksheetLine()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.seqNo = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["seqNo"])
                instance.description = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["description"])
                instance.accountCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["accountCode"])
                instance.department = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["department"])
                instance.itemCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemCode"])
                instance.quantity = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["quantity"])
                instance.chargeRate = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["chargeRate"])
                instance.extendedCharge = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extendedCharge"])
                instance.backupFile = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["backupFile"])
                instance.backupDocument = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["backupDocument"])
                instance.invoiceWorksheetId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["invoiceWorksheetId"])
                instance.invoiceTemplateLineId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["invoiceTemplateLineId"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [InvoiceWorksheetLineDetail]
            Decoders.addDecoder(clazz: [InvoiceWorksheetLineDetail].self) { (source: AnyObject) -> [InvoiceWorksheetLineDetail] in
                return Decoders.decode(clazz: [InvoiceWorksheetLineDetail].self, source: source)
            }
            // Decoder for InvoiceWorksheetLineDetail
            Decoders.addDecoder(clazz: InvoiceWorksheetLineDetail.self) { (source: AnyObject) -> InvoiceWorksheetLineDetail in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = InvoiceWorksheetLineDetail()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.quantity = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["quantity"])
                instance.chargeRate = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["chargeRate"])
                instance.extendedCharge = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extendedCharge"])
                instance.invoiceWorksheetId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["invoiceWorksheetId"])
                instance.invoiceWorksheetLineId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["invoiceWorksheetLineId"])
                instance.activityType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["activityType"])
                instance.activityRecordID = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["activityRecordID"])
                instance.reference1 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["reference1"])
                instance.reference2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["reference2"])
                instance.reference3 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["reference3"])
                instance.reference4 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["reference4"])
                instance.reference5 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["reference5"])
                instance.activityRecord = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["activityRecord"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [Item]
            Decoders.addDecoder(clazz: [Item].self) { (source: AnyObject) -> [Item] in
                return Decoders.decode(clazz: [Item].self, source: source)
            }
            // Decoder for Item
            Decoders.addDecoder(clazz: Item.self) { (source: AnyObject) -> Item in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Item()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.accountCodeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["accountCodeId"])
                instance.lowStockContactId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lowStockContactId"])
                instance.legacyLowLevelContactId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["legacyLowLevelContactId"])
                instance.lowStockCodeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lowStockCodeId"])
                instance.majorGroupId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["majorGroupId"])
                instance.subGroupId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["subGroupId"])
                instance.productCodeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["productCodeId"])
                instance.summaryCodeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["summaryCodeId"])
                instance.buyerId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["buyerId"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.sku = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sku"])
                instance.vendorSKU = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["vendorSKU"])
                instance.upc = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["upc"])
                instance.itemDescription = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemDescription"])
                instance.packingSlipDescription = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["packingSlipDescription"])
                instance.absoluteMax = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["absoluteMax"])
                instance.additionalDescription = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["additionalDescription"])
                instance.backorder = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["backorder"])
                instance.chargeCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["chargeCode"])
                instance.commodityCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["commodityCode"])
                instance.companionCode = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["companionCode"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.criticalAmount = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["criticalAmount"])
                instance.overallFixedReorderPoint = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["overallFixedReorderPoint"])
                instance.overallLeadTime = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["overallLeadTime"])
                instance.sellPrice = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["sellPrice"])
                instance.pricingPer = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pricingPer"])
                instance.lotControlFlag = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["lotControlFlag"])
                instance.maxCycle = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["maxCycle"])
                instance.maxInterim = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["maxInterim"])
                instance.numericSortOrder = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["numericSortOrder"])
                instance.outsideVendorId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["outsideVendorId"])
                instance.pickCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pickCode"])
                instance.podOrderSuffix = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["podOrderSuffix"])
                instance.podRevDate = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["podRevDate"])
                instance.status = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["status"])
                instance.seasonalItem = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["seasonalItem"])
                instance.requiresProductionLot = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["requiresProductionLot"])
                instance.sector = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sector"])
                instance.secure = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["secure"])
                instance.serialCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["serialCode"])
                instance.unitCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["unitCode"])
                instance.unitsPerWrap = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["unitsPerWrap"])
                instance.weightPerWrap = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["weightPerWrap"])
                instance.quantityPerInnerPack = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["quantityPerInnerPack"])
                instance.quantityPerCase = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["quantityPerCase"])
                instance.quantityPerPallet = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["quantityPerPallet"])
                instance.innerPackBarcode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["innerPackBarcode"])
                instance.caseBarcode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["caseBarcode"])
                instance.palletBarcode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["palletBarcode"])
                instance.voidDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["voidDate"])
                instance.wrapCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["wrapCode"])
                instance.extrinsicText1 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extrinsicText1"])
                instance.extrinsicText2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extrinsicText2"])
                instance.extrinsicText3 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extrinsicText3"])
                instance.extrinsicNumber1 = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["extrinsicNumber1"])
                instance.extrinsicNumber2 = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["extrinsicNumber2"])
                instance.extrinsicDecimal1 = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extrinsicDecimal1"])
                instance.extrinsicDecimal2 = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extrinsicDecimal2"])
                instance.casebreakEnabled = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["casebreakEnabled"])
                instance.vendorId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["vendorId"])
                instance.vendorPrice = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["vendorPrice"])
                instance.vendorPer = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["vendorPer"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.primaryImage = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["primaryImage"])
                instance.pickImage = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pickImage"])
                instance.behaviorType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["behaviorType"])
                instance.assemblyInstructions = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["assemblyInstructions"])
                instance.forwardLotMixingRule = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["forwardLotMixingRule"])
                instance.storageLotMixingRule = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["storageLotMixingRule"])
                instance.forwardItemMixingRule = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["forwardItemMixingRule"])
                instance.storageItemMixingRule = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["storageItemMixingRule"])
                instance.allocationRule = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["allocationRule"])
                instance.allocationSort = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["allocationSort"])
                instance.allocationField = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["allocationField"])
                instance.barcodeField = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["barcodeField"])
                instance.warehouseDisplayField = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["warehouseDisplayField"])
                instance.productIdTagSchemeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["productIdTagSchemeId"])
                instance.itemSerialSchemeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["itemSerialSchemeId"])
                instance.receivingCriteriaSchemeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["receivingCriteriaSchemeId"])
                instance.asnRule = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["asnRule"])
                instance.quantityType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["quantityType"])
                instance.hazmat = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["hazmat"])
                instance.isAlcohol = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["isAlcohol"])
                instance.alcoholType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholType"])
                instance.alcoholContent = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["alcoholContent"])
                instance.alcoholContainer = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholContainer"])
                instance.alcoholVintageYear = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholVintageYear"])
                instance.alcoholCountry = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholCountry"])
                instance.alcoholState = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholState"])
                instance.alcoholRegion = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholRegion"])
                instance.alcoholBrand = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholBrand"])
                instance.alcoholUPCCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholUPCCode"])
                instance.alcoholNAMBCACode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholNAMBCACode"])
                instance.alcoholUNIMERCCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholUNIMERCCode"])
                instance.alcoholSCCCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholSCCCode"])
                instance.length = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["length"])
                instance.width = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["width"])
                instance.height = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["height"])
                instance.topUp = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["topUp"])
                instance.shipSolo = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["shipSolo"])
                instance.inventoryUpdateTimestamp = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["inventoryUpdateTimestamp"])
                instance.availableQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["availableQuantity"])
                instance.damagedQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["damagedQuantity"])
                instance.inFulfillmentProcessQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["inFulfillmentProcessQuantity"])
                instance.onHandQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["onHandQuantity"])
                instance.openOrderQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["openOrderQuantity"])
                instance.openPOQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["openPOQuantity"])
                instance.orderableQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderableQuantity"])
                instance.unallocatableQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["unallocatableQuantity"])
                instance.unavailableQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["unavailableQuantity"])
                instance.totalDemand = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["totalDemand"])
                instance.availableQuantityInnerPacks = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["availableQuantityInnerPacks"])
                instance.damagedQuantityInnerPacks = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["damagedQuantityInnerPacks"])
                instance.inFulfillmentProcessQuantityInnerPacks = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["inFulfillmentProcessQuantityInnerPacks"])
                instance.onHandQuantityInnerPacks = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["onHandQuantityInnerPacks"])
                instance.openOrderQuantityInnerPacks = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["openOrderQuantityInnerPacks"])
                instance.openPOQuantityInnerPacks = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["openPOQuantityInnerPacks"])
                instance.orderableQuantityInnerPacks = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderableQuantityInnerPacks"])
                instance.unallocatableQuantityInnerPacks = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["unallocatableQuantityInnerPacks"])
                instance.unavailableQuantityInnerPacks = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["unavailableQuantityInnerPacks"])
                instance.availableQuantityCases = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["availableQuantityCases"])
                instance.damagedQuantityCases = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["damagedQuantityCases"])
                instance.inFulfillmentProcessQuantityCases = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["inFulfillmentProcessQuantityCases"])
                instance.onHandQuantityCases = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["onHandQuantityCases"])
                instance.openOrderQuantityCases = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["openOrderQuantityCases"])
                instance.openPOQuantityCases = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["openPOQuantityCases"])
                instance.orderableQuantityCases = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderableQuantityCases"])
                instance.unallocatableQuantityCases = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["unallocatableQuantityCases"])
                instance.unavailableQuantityCases = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["unavailableQuantityCases"])
                instance.availableQuantityPallets = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["availableQuantityPallets"])
                instance.damagedQuantityPallets = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["damagedQuantityPallets"])
                instance.inFulfillmentProcessQuantityPallets = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["inFulfillmentProcessQuantityPallets"])
                instance.onHandQuantityPallets = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["onHandQuantityPallets"])
                instance.openOrderQuantityPallets = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["openOrderQuantityPallets"])
                instance.openPOQuantityPallets = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["openPOQuantityPallets"])
                instance.orderableQuantityPallets = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderableQuantityPallets"])
                instance.unallocatableQuantityPallets = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["unallocatableQuantityPallets"])
                instance.unavailableQuantityPallets = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["unavailableQuantityPallets"])
                instance.overallDaysOnHand = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["overallDaysOnHand"])
                instance.overallStockStatus = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["overallStockStatus"])
                instance.estimatedPallets = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["estimatedPallets"])
                instance.estimatedCases = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["estimatedCases"])
                instance.estimatedInnerPacks = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["estimatedInnerPacks"])
                instance.nextRequestedDeliveryDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["nextRequestedDeliveryDate"])
                instance.warehouse1Id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouse1Id"])
                instance.w1AvailableQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w1AvailableQuantity"])
                instance.w1DamagedQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w1DamagedQuantity"])
                instance.w1InFulfillmentProcessQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w1InFulfillmentProcessQuantity"])
                instance.w1OnHandQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w1OnHandQuantity"])
                instance.w1OpenOrderQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w1OpenOrderQuantity"])
                instance.w1OpenPOQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w1OpenPOQuantity"])
                instance.w1OrderableQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w1OrderableQuantity"])
                instance.w1UnallocatableQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w1UnallocatableQuantity"])
                instance.w1UnavailableQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w1UnavailableQuantity"])
                instance.w1DaysOnHand = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w1DaysOnHand"])
                instance.w1StockStatus = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["w1StockStatus"])
                instance.w1EstimatedPallets = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w1EstimatedPallets"])
                instance.w1EstimatedCases = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w1EstimatedCases"])
                instance.w1EstimatedInnerPacks = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w1EstimatedInnerPacks"])
                instance.w1NextRequestedDeliveryDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["w1NextRequestedDeliveryDate"])
                instance.warehouse2Id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouse2Id"])
                instance.w2AvailableQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w2AvailableQuantity"])
                instance.w2DamagedQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w2DamagedQuantity"])
                instance.w2InFulfillmentProcessQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w2InFulfillmentProcessQuantity"])
                instance.w2OnHandQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w2OnHandQuantity"])
                instance.w2OpenOrderQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w2OpenOrderQuantity"])
                instance.w2OpenPOQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w2OpenPOQuantity"])
                instance.w2OrderableQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w2OrderableQuantity"])
                instance.w2UnallocatableQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w2UnallocatableQuantity"])
                instance.w2UnavailableQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w2UnavailableQuantity"])
                instance.w2DaysOnHand = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w2DaysOnHand"])
                instance.w2StockStatus = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["w2StockStatus"])
                instance.w2EstimatedPallets = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w2EstimatedPallets"])
                instance.w2EstimatedCases = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w2EstimatedCases"])
                instance.w2EstimatedInnerPacks = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w2EstimatedInnerPacks"])
                instance.w2NextRequestedDeliveryDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["w2NextRequestedDeliveryDate"])
                instance.warehouse3Id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouse3Id"])
                instance.w3AvailableQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w3AvailableQuantity"])
                instance.w3DamagedQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w3DamagedQuantity"])
                instance.w3InFulfillmentProcessQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w3InFulfillmentProcessQuantity"])
                instance.w3OnHandQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w3OnHandQuantity"])
                instance.w3OpenOrderQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w3OpenOrderQuantity"])
                instance.w3OpenPOQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w3OpenPOQuantity"])
                instance.w3OrderableQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w3OrderableQuantity"])
                instance.w3UnallocatableQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w3UnallocatableQuantity"])
                instance.w3UnavailableQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w3UnavailableQuantity"])
                instance.w3DaysOnHand = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w3DaysOnHand"])
                instance.w3StockStatus = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["w3StockStatus"])
                instance.w3EstimatedPallets = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w3EstimatedPallets"])
                instance.w3EstimatedCases = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w3EstimatedCases"])
                instance.w3EstimatedInnerPacks = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w3EstimatedInnerPacks"])
                instance.w3NextRequestedDeliveryDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["w3NextRequestedDeliveryDate"])
                instance.warehouse4Id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouse4Id"])
                instance.w4AvailableQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w4AvailableQuantity"])
                instance.w4DamagedQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w4DamagedQuantity"])
                instance.w4InFulfillmentProcessQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w4InFulfillmentProcessQuantity"])
                instance.w4OnHandQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w4OnHandQuantity"])
                instance.w4OpenOrderQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w4OpenOrderQuantity"])
                instance.w4OpenPOQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w4OpenPOQuantity"])
                instance.w4OrderableQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w4OrderableQuantity"])
                instance.w4UnallocatableQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w4UnallocatableQuantity"])
                instance.w4UnavailableQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w4UnavailableQuantity"])
                instance.w4DaysOnHand = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w4DaysOnHand"])
                instance.w4StockStatus = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["w4StockStatus"])
                instance.w4EstimatedPallets = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w4EstimatedPallets"])
                instance.w4EstimatedCases = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w4EstimatedCases"])
                instance.w4EstimatedInnerPacks = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w4EstimatedInnerPacks"])
                instance.w4NextRequestedDeliveryDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["w4NextRequestedDeliveryDate"])
                instance.warehouse5Id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouse5Id"])
                instance.w5AvailableQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w5AvailableQuantity"])
                instance.w5DamagedQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w5DamagedQuantity"])
                instance.w5InFulfillmentProcessQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w5InFulfillmentProcessQuantity"])
                instance.w5OnHandQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w5OnHandQuantity"])
                instance.w5OpenOrderQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w5OpenOrderQuantity"])
                instance.w5OpenPOQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w5OpenPOQuantity"])
                instance.w5OrderableQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w5OrderableQuantity"])
                instance.w5UnallocatableQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w5UnallocatableQuantity"])
                instance.w5UnavailableQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w5UnavailableQuantity"])
                instance.w5DaysOnHand = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w5DaysOnHand"])
                instance.w5StockStatus = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["w5StockStatus"])
                instance.w5EstimatedPallets = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w5EstimatedPallets"])
                instance.w5EstimatedCases = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w5EstimatedCases"])
                instance.w5EstimatedInnerPacks = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["w5EstimatedInnerPacks"])
                instance.w5NextRequestedDeliveryDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["w5NextRequestedDeliveryDate"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [ItemAccountCode]
            Decoders.addDecoder(clazz: [ItemAccountCode].self) { (source: AnyObject) -> [ItemAccountCode] in
                return Decoders.decode(clazz: [ItemAccountCode].self, source: source)
            }
            // Decoder for ItemAccountCode
            Decoders.addDecoder(clazz: ItemAccountCode.self) { (source: AnyObject) -> ItemAccountCode in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ItemAccountCode()
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.internalId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["internalId"])
                instance.id = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["id"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [ItemActivityType]
            Decoders.addDecoder(clazz: [ItemActivityType].self) { (source: AnyObject) -> [ItemActivityType] in
                return Decoders.decode(clazz: [ItemActivityType].self, source: source)
            }
            // Decoder for ItemActivityType
            Decoders.addDecoder(clazz: ItemActivityType.self) { (source: AnyObject) -> ItemActivityType in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ItemActivityType()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.label = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["label"])
                instance.fullEntityClassName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["fullEntityClassName"])
                return instance
            }


            // Decoder for [ItemBuyer]
            Decoders.addDecoder(clazz: [ItemBuyer].self) { (source: AnyObject) -> [ItemBuyer] in
                return Decoders.decode(clazz: [ItemBuyer].self, source: source)
            }
            // Decoder for ItemBuyer
            Decoders.addDecoder(clazz: ItemBuyer.self) { (source: AnyObject) -> ItemBuyer in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ItemBuyer()
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.internalId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["internalId"])
                instance.id = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["id"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [ItemCategory]
            Decoders.addDecoder(clazz: [ItemCategory].self) { (source: AnyObject) -> [ItemCategory] in
                return Decoders.decode(clazz: [ItemCategory].self, source: source)
            }
            // Decoder for ItemCategory
            Decoders.addDecoder(clazz: ItemCategory.self) { (source: AnyObject) -> ItemCategory in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ItemCategory()
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.internalId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["internalId"])
                instance.id = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["id"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [ItemLowstockCode]
            Decoders.addDecoder(clazz: [ItemLowstockCode].self) { (source: AnyObject) -> [ItemLowstockCode] in
                return Decoders.decode(clazz: [ItemLowstockCode].self, source: source)
            }
            // Decoder for ItemLowstockCode
            Decoders.addDecoder(clazz: ItemLowstockCode.self) { (source: AnyObject) -> ItemLowstockCode in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ItemLowstockCode()
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.internalId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["internalId"])
                instance.id = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["id"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [ItemProductCode]
            Decoders.addDecoder(clazz: [ItemProductCode].self) { (source: AnyObject) -> [ItemProductCode] in
                return Decoders.decode(clazz: [ItemProductCode].self, source: source)
            }
            // Decoder for ItemProductCode
            Decoders.addDecoder(clazz: ItemProductCode.self) { (source: AnyObject) -> ItemProductCode in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ItemProductCode()
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.internalId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["internalId"])
                instance.id = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["id"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [ItemReceipt]
            Decoders.addDecoder(clazz: [ItemReceipt].self) { (source: AnyObject) -> [ItemReceipt] in
                return Decoders.decode(clazz: [ItemReceipt].self, source: source)
            }
            // Decoder for ItemReceipt
            Decoders.addDecoder(clazz: ItemReceipt.self) { (source: AnyObject) -> ItemReceipt in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ItemReceipt()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.poNoId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["poNoId"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.legacyPoNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["legacyPoNo"])
                instance.warehouseId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseId"])
                instance.orderDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["orderDate"])
                instance.fullDescription = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["fullDescription"])
                instance.factCost = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["factCost"])
                instance.mlCost = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["mlCost"])
                instance.sku = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sku"])
                instance.orderQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderQuantity"])
                instance.requestedDeliveryDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["requestedDeliveryDate"])
                instance.unitCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["unitCode"])
                instance.wrapCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["wrapCode"])
                instance.unitsPerWrap = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["unitsPerWrap"])
                instance.cost = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["cost"])
                instance.sellPrice = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["sellPrice"])
                instance.pricingPer = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pricingPer"])
                instance.maxFreight = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["maxFreight"])
                instance.chargeFreight = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["chargeFreight"])
                instance.maxOther = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["maxOther"])
                instance.distDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["distDate"])
                instance.voidDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["voidDate"])
                instance.freezeAction = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["freezeAction"])
                instance.revDate = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["revDate"])
                instance.expirationDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["expirationDate"])
                instance.artBack = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["artBack"])
                instance.origin = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["origin"])
                instance.sample = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["sample"])
                instance.sampleTo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sampleTo"])
                instance.maxOvers = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["maxOvers"])
                instance.maxUnders = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["maxUnders"])
                instance.receivedSfp = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["receivedSfp"])
                instance.budgetCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["budgetCode"])
                instance.accountingCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["accountingCode"])
                instance.taxExempt = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["taxExempt"])
                instance.capitalize = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["capitalize"])
                instance.accrual = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["accrual"])
                instance.oddQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["oddQuantity"])
                instance.freightCost = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["freightCost"])
                instance.receivedDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["receivedDate"])
                instance.receivedQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["receivedQuantity"])
                instance.fromProd = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["fromProd"])
                instance.sfpComplete = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sfpComplete"])
                instance.endQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["endQuantity"])
                instance.endVal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["endVal"])
                instance.endFact = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["endFact"])
                instance.interimQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["interimQuantity"])
                instance.interimVal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["interimVal"])
                instance.interimFact = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["interimFact"])
                instance.lastAct = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["lastAct"])
                instance.weightPerWrap = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["weightPerWrap"])
                instance.norcs = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["norcs"])
                instance.vendorId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["vendorId"])
                instance.bsVendor = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["bsVendor"])
                instance.mlVendor = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["mlVendor"])
                instance.receiptNo = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["receiptNo"])
                instance.paidFull = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["paidFull"])
                instance.enteredBy = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["enteredBy"])
                instance.receivedBy = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["receivedBy"])
                instance.lineNo = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lineNo"])
                instance.prodLot = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["prodLot"])
                instance.productIdTag = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["productIdTag"])
                instance.unitsPerInnerPack = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["unitsPerInnerPack"])
                instance.unitsPerCase = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["unitsPerCase"])
                instance.unitsPerPallet = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["unitsPerPallet"])
                instance.caseWeight = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["caseWeight"])
                instance.height = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["height"])
                instance.width = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["width"])
                instance.length = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["length"])
                instance.dockDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["dockDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.impressions = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["impressions"])
                instance.asnLine = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["asnLine"])
                instance.upc = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["upc"])
                instance.vendorSKU = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["vendorSKU"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [ItemReceiptActivity]
            Decoders.addDecoder(clazz: [ItemReceiptActivity].self) { (source: AnyObject) -> [ItemReceiptActivity] in
                return Decoders.decode(clazz: [ItemReceiptActivity].self, source: source)
            }
            // Decoder for ItemReceiptActivity
            Decoders.addDecoder(clazz: ItemReceiptActivity.self) { (source: AnyObject) -> ItemReceiptActivity in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ItemReceiptActivity()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.receiptASNCreateDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["receiptASNCreateDate"])
                instance.receiptModifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["receiptModifyDate"])
                instance.itemReceiptId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["itemReceiptId"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.poNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["poNo"])
                instance.receiptDistributionDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["receiptDistributionDate"])
                instance.receiptUnitsPerWrap = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["receiptUnitsPerWrap"])
                instance.receiptUnitsPerInnerPack = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["receiptUnitsPerInnerPack"])
                instance.receiptUnitsPerCase = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["receiptUnitsPerCase"])
                instance.receiptUnitsPerPallet = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["receiptUnitsPerPallet"])
                instance.receiptVendor = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["receiptVendor"])
                instance.receiptRevisionDate = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["receiptRevisionDate"])
                instance.receiptProductionLot = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["receiptProductionLot"])
                instance.receiptReceiveDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["receiptReceiveDate"])
                instance.receiptReceiveQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["receiptReceiveQuantity"])
                instance.receiptNumberOfInnerPack = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["receiptNumberOfInnerPack"])
                instance.receiptNumberOfCases = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["receiptNumberOfCases"])
                instance.receiptNumberOfPallets = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["receiptNumberOfPallets"])
                instance.receiptStatus = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["receiptStatus"])
                instance.receiptStatusName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["receiptStatusName"])
                instance.receiptUnitCode = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["receiptUnitCode"])
                instance.receiptUnitCodeText = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["receiptUnitCodeText"])
                instance.receiptWrapCode = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["receiptWrapCode"])
                instance.receiptWrapCodeText = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["receiptWrapCodeText"])
                instance.receiptWrapUnitWeight = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["receiptWrapUnitWeight"])
                instance.receiptCaseWeight = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["receiptCaseWeight"])
                instance.receiptProductIdTag = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["receiptProductIdTag"])
                instance.receiptEnteredBy = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["receiptEnteredBy"])
                instance.receiptReceivedBy = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["receiptReceivedBy"])
                instance.receiptType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["receiptType"])
                instance.warehouseId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseId"])
                instance.warehouseName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["warehouseName"])
                instance.itemId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["itemId"])
                instance.sku = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sku"])
                instance.itemVendorSku = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemVendorSku"])
                instance.itemUPC = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemUPC"])
                instance.itemMajorGroup = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["itemMajorGroup"])
                instance.itemMajorGroupName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemMajorGroupName"])
                instance.itemSubGroup = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["itemSubGroup"])
                instance.itemSubGroupName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemSubGroupName"])
                instance.itemProductCode = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["itemProductCode"])
                instance.itemProductCodeName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemProductCodeName"])
                instance.itemAccountCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemAccountCode"])
                instance.itemAccountCodeName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemAccountCodeName"])
                instance.itemSummaryCode = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["itemSummaryCode"])
                instance.itemSummaryCodeName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemSummaryCodeName"])
                instance.itemSector = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemSector"])
                instance.vendorComplianceSurveyAnswer1 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["vendorComplianceSurveyAnswer1"])
                instance.vendorComplianceSurveyAnswer2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["vendorComplianceSurveyAnswer2"])
                instance.vendorComplianceSurveyAnswer3 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["vendorComplianceSurveyAnswer3"])
                instance.vendorComplianceSurveyAnswer4 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["vendorComplianceSurveyAnswer4"])
                instance.vendorComplianceSurveyAnswer5 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["vendorComplianceSurveyAnswer5"])
                instance.vendorComplianceSurveyAnswer6 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["vendorComplianceSurveyAnswer6"])
                instance.vendorComplianceSurveyAnswer7 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["vendorComplianceSurveyAnswer7"])
                instance.vendorComplianceSurveyAnswer8 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["vendorComplianceSurveyAnswer8"])
                instance.vendorComplianceSurveyAnswer9 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["vendorComplianceSurveyAnswer9"])
                instance.vendorComplianceSurveyAnswer10 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["vendorComplianceSurveyAnswer10"])
                instance.vendorComplianceSurveyAnswer11 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["vendorComplianceSurveyAnswer11"])
                instance.vendorComplianceSurveyAnswer12 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["vendorComplianceSurveyAnswer12"])
                instance.vendorComplianceSurveyAnswer13 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["vendorComplianceSurveyAnswer13"])
                instance.vendorComplianceSurveyAnswer14 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["vendorComplianceSurveyAnswer14"])
                instance.vendorComplianceSurveyAnswer15 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["vendorComplianceSurveyAnswer15"])
                instance.vendorComplianceSurveyAnswer16 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["vendorComplianceSurveyAnswer16"])
                instance.vendorComplianceSurveyAnswer17 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["vendorComplianceSurveyAnswer17"])
                instance.vendorComplianceSurveyAnswer18 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["vendorComplianceSurveyAnswer18"])
                instance.vendorComplianceSurveyAnswer19 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["vendorComplianceSurveyAnswer19"])
                instance.vendorComplianceSurveyAnswer20 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["vendorComplianceSurveyAnswer20"])
                instance.alcoholTypeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["alcoholTypeId"])
                instance.alcoholTypeName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholTypeName"])
                instance.alcoholContent = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["alcoholContent"])
                instance.alcoholContainerId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["alcoholContainerId"])
                instance.alcoholContainerName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholContainerName"])
                instance.alcoholContainerVolume = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["alcoholContainerVolume"])
                instance.alcoholVintageYear = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholVintageYear"])
                instance.alcoholCountryId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["alcoholCountryId"])
                instance.alcoholCountryName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholCountryName"])
                instance.alcoholState = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholState"])
                instance.alcoholRegion = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholRegion"])
                instance.alcoholBrand = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholBrand"])
                instance.alcoholUPCCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholUPCCode"])
                instance.alcoholNABCACode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholNABCACode"])
                instance.alcoholUNIMERCCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholUNIMERCCode"])
                instance.alcoholSCCCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholSCCCode"])
                instance.billingQuantity = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["billingQuantity"])
                instance.chargeRate = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["chargeRate"])
                instance.extendedCharge = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extendedCharge"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [ItemSector]
            Decoders.addDecoder(clazz: [ItemSector].self) { (source: AnyObject) -> [ItemSector] in
                return Decoders.decode(clazz: [ItemSector].self, source: source)
            }
            // Decoder for ItemSector
            Decoders.addDecoder(clazz: ItemSector.self) { (source: AnyObject) -> ItemSector in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ItemSector()
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.internalId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["internalId"])
                instance.id = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["id"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [ItemSerial]
            Decoders.addDecoder(clazz: [ItemSerial].self) { (source: AnyObject) -> [ItemSerial] in
                return Decoders.decode(clazz: [ItemSerial].self, source: source)
            }
            // Decoder for ItemSerial
            Decoders.addDecoder(clazz: ItemSerial.self) { (source: AnyObject) -> ItemSerial in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ItemSerial()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.itemReceiptId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["itemReceiptId"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.asnId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["asnId"])
                instance.orderNoId = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["orderNoId"])
                instance.serial = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["serial"])
                instance.receivedDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["receivedDate"])
                instance.shippedDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["shippedDate"])
                instance.inInventory = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["inInventory"])
                instance.s0 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["s0"])
                instance.s1 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["s1"])
                instance.s2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["s2"])
                instance.s3 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["s3"])
                instance.s4 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["s4"])
                instance.s5 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["s5"])
                instance.s6 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["s6"])
                instance.s7 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["s7"])
                instance.s8 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["s8"])
                instance.s9 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["s9"])
                instance.s10 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["s10"])
                instance.s11 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["s11"])
                instance.s12 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["s12"])
                instance.s13 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["s13"])
                instance.s14 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["s14"])
                instance.s15 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["s15"])
                instance.s16 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["s16"])
                instance.s17 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["s17"])
                instance.s18 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["s18"])
                instance.s19 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["s19"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                instance.sku = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sku"])
                return instance
            }


            // Decoder for [ItemSerialScheme]
            Decoders.addDecoder(clazz: [ItemSerialScheme].self) { (source: AnyObject) -> [ItemSerialScheme] in
                return Decoders.decode(clazz: [ItemSerialScheme].self, source: source)
            }
            // Decoder for ItemSerialScheme
            Decoders.addDecoder(clazz: ItemSerialScheme.self) { (source: AnyObject) -> ItemSerialScheme in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ItemSerialScheme()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.receivingBehavior = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["receivingBehavior"])
                instance.shippingBehavior = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shippingBehavior"])
                instance.requireUnique = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["requireUnique"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [ItemSubCategory]
            Decoders.addDecoder(clazz: [ItemSubCategory].self) { (source: AnyObject) -> [ItemSubCategory] in
                return Decoders.decode(clazz: [ItemSubCategory].self, source: source)
            }
            // Decoder for ItemSubCategory
            Decoders.addDecoder(clazz: ItemSubCategory.self) { (source: AnyObject) -> ItemSubCategory in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ItemSubCategory()
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.internalId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["internalId"])
                instance.id = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["id"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [ItemSummaryCode]
            Decoders.addDecoder(clazz: [ItemSummaryCode].self) { (source: AnyObject) -> [ItemSummaryCode] in
                return Decoders.decode(clazz: [ItemSummaryCode].self, source: source)
            }
            // Decoder for ItemSummaryCode
            Decoders.addDecoder(clazz: ItemSummaryCode.self) { (source: AnyObject) -> ItemSummaryCode in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ItemSummaryCode()
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.internalId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["internalId"])
                instance.id = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["id"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [Job]
            Decoders.addDecoder(clazz: [Job].self) { (source: AnyObject) -> [Job] in
                return Decoders.decode(clazz: [Job].self, source: source)
            }
            // Decoder for Job
            Decoders.addDecoder(clazz: Job.self) { (source: AnyObject) -> Job in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Job()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.sourceJobRecipeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["sourceJobRecipeId"])
                instance.assemblyQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["assemblyQuantity"])
                instance.warehouseId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseId"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.status = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["status"])
                instance.orderNoId = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["orderNoId"])
                instance.poNoId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["poNoId"])
                instance.workBatchId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["workBatchId"])
                instance.layout = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["layout"])
                instance.trackAssemblies = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["trackAssemblies"])
                instance.trackSteps = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["trackSteps"])
                instance.jobNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["jobNo"])
                instance.assemblyInstructions = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["assemblyInstructions"])
                instance.inputs = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["inputs"])
                instance.outputs = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["outputs"])
                instance.steps = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["steps"])
                instance.fulfillmentPlanId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["fulfillmentPlanId"])
                instance.totalPicksPutbacks = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["totalPicksPutbacks"])
                instance.completedPicksPutbacks = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["completedPicksPutbacks"])
                instance.totalAssemblies = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["totalAssemblies"])
                instance.completedAssemblies = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["completedAssemblies"])
                instance.totalSteps = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["totalSteps"])
                instance.completedSteps = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["completedSteps"])
                instance.totalReceipts = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["totalReceipts"])
                instance.completedReceipts = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["completedReceipts"])
                instance.totalToDo = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["totalToDo"])
                instance.completedToDo = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["completedToDo"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [JobInput]
            Decoders.addDecoder(clazz: [JobInput].self) { (source: AnyObject) -> [JobInput] in
                return Decoders.decode(clazz: [JobInput].self, source: source)
            }
            // Decoder for JobInput
            Decoders.addDecoder(clazz: JobInput.self) { (source: AnyObject) -> JobInput in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = JobInput()
                instance.sku = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sku"])
                instance.quantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["quantity"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [JobOutput]
            Decoders.addDecoder(clazz: [JobOutput].self) { (source: AnyObject) -> [JobOutput] in
                return Decoders.decode(clazz: [JobOutput].self, source: source)
            }
            // Decoder for JobOutput
            Decoders.addDecoder(clazz: JobOutput.self) { (source: AnyObject) -> JobOutput in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = JobOutput()
                instance.sku = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sku"])
                instance.quantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["quantity"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [JobRecipe]
            Decoders.addDecoder(clazz: [JobRecipe].self) { (source: AnyObject) -> [JobRecipe] in
                return Decoders.decode(clazz: [JobRecipe].self, source: source)
            }
            // Decoder for JobRecipe
            Decoders.addDecoder(clazz: JobRecipe.self) { (source: AnyObject) -> JobRecipe in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = JobRecipe()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.warehouseId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseId"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.assemblyInstructions = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["assemblyInstructions"])
                instance.inputs = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["inputs"])
                instance.outputs = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["outputs"])
                instance.steps = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["steps"])
                instance.fulfillmentPlanId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["fulfillmentPlanId"])
                instance.layout = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["layout"])
                instance.trackAssemblies = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["trackAssemblies"])
                instance.trackSteps = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["trackSteps"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [JobRecipeInput]
            Decoders.addDecoder(clazz: [JobRecipeInput].self) { (source: AnyObject) -> [JobRecipeInput] in
                return Decoders.decode(clazz: [JobRecipeInput].self, source: source)
            }
            // Decoder for JobRecipeInput
            Decoders.addDecoder(clazz: JobRecipeInput.self) { (source: AnyObject) -> JobRecipeInput in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = JobRecipeInput()
                instance.sku = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sku"])
                instance.quantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["quantity"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [JobRecipeOutput]
            Decoders.addDecoder(clazz: [JobRecipeOutput].self) { (source: AnyObject) -> [JobRecipeOutput] in
                return Decoders.decode(clazz: [JobRecipeOutput].self, source: source)
            }
            // Decoder for JobRecipeOutput
            Decoders.addDecoder(clazz: JobRecipeOutput.self) { (source: AnyObject) -> JobRecipeOutput in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = JobRecipeOutput()
                instance.sku = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sku"])
                instance.quantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["quantity"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [JobRecipeStep]
            Decoders.addDecoder(clazz: [JobRecipeStep].self) { (source: AnyObject) -> [JobRecipeStep] in
                return Decoders.decode(clazz: [JobRecipeStep].self, source: source)
            }
            // Decoder for JobRecipeStep
            Decoders.addDecoder(clazz: JobRecipeStep.self) { (source: AnyObject) -> JobRecipeStep in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = JobRecipeStep()
                instance.sequenceNo = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["sequenceNo"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.assemblyInstructions = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["assemblyInstructions"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [JobStep]
            Decoders.addDecoder(clazz: [JobStep].self) { (source: AnyObject) -> [JobStep] in
                return Decoders.decode(clazz: [JobStep].self, source: source)
            }
            // Decoder for JobStep
            Decoders.addDecoder(clazz: JobStep.self) { (source: AnyObject) -> JobStep in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = JobStep()
                instance.sequenceNo = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["sequenceNo"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.assemblyInstructions = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["assemblyInstructions"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [JobTime]
            Decoders.addDecoder(clazz: [JobTime].self) { (source: AnyObject) -> [JobTime] in
                return Decoders.decode(clazz: [JobTime].self, source: source)
            }
            // Decoder for JobTime
            Decoders.addDecoder(clazz: JobTime.self) { (source: AnyObject) -> JobTime in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = JobTime()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.secondDuration = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["secondDuration"])
                instance.date = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["date"])
                instance.userId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["userId"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.jobTypeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["jobTypeId"])
                instance.note = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["note"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [JobTimeActivity]
            Decoders.addDecoder(clazz: [JobTimeActivity].self) { (source: AnyObject) -> [JobTimeActivity] in
                return Decoders.decode(clazz: [JobTimeActivity].self, source: source)
            }
            // Decoder for JobTimeActivity
            Decoders.addDecoder(clazz: JobTimeActivity.self) { (source: AnyObject) -> JobTimeActivity in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = JobTimeActivity()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.importedId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["importedId"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.date = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["date"])
                instance.secondDuration = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["secondDuration"])
                instance.userId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["userId"])
                instance.email = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["email"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.jobTypeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["jobTypeId"])
                instance.jobTypeName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["jobTypeName"])
                instance.note = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["note"])
                instance.billingQuantity = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["billingQuantity"])
                instance.chargeRate = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["chargeRate"])
                instance.extendedCharge = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extendedCharge"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [JobType]
            Decoders.addDecoder(clazz: [JobType].self) { (source: AnyObject) -> [JobType] in
                return Decoders.decode(clazz: [JobType].self, source: source)
            }
            // Decoder for JobType
            Decoders.addDecoder(clazz: JobType.self) { (source: AnyObject) -> JobType in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = JobType()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.clientId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["clientId"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.description = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["description"])
                instance.jobCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["jobCode"])
                instance.isActive = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["isActive"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [Kit]
            Decoders.addDecoder(clazz: [Kit].self) { (source: AnyObject) -> [Kit] in
                return Decoders.decode(clazz: [Kit].self, source: source)
            }
            // Decoder for Kit
            Decoders.addDecoder(clazz: Kit.self) { (source: AnyObject) -> Kit in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Kit()
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.kitSKU = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["kitSKU"])
                instance.packagingType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["packagingType"])
                instance.other = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["other"])
                instance.numberOfComponents = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["numberOfComponents"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.line1 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["line1"])
                instance.line2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["line2"])
                instance.line3 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["line3"])
                instance.line4 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["line4"])
                instance.line5 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["line5"])
                instance.line6 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["line6"])
                instance.line7 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["line7"])
                instance.line8 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["line8"])
                instance.touches = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["touches"])
                instance.minInvQty = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["minInvQty"])
                instance.midInvQty = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["midInvQty"])
                instance.maxInvQty = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["maxInvQty"])
                instance.isKOD = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["isKOD"])
                instance.kodType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["kodType"])
                instance.kitComponentList = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["kitComponentList"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [KitComponent]
            Decoders.addDecoder(clazz: [KitComponent].self) { (source: AnyObject) -> [KitComponent] in
                return Decoders.decode(clazz: [KitComponent].self, source: source)
            }
            // Decoder for KitComponent
            Decoders.addDecoder(clazz: KitComponent.self) { (source: AnyObject) -> KitComponent in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = KitComponent()
                instance.sku = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sku"])
                instance.quantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["quantity"])
                instance.instructions = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["instructions"])
                instance.additionalServices = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["additionalServices"])
                instance.critical = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["critical"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [LegacyLowstockContact]
            Decoders.addDecoder(clazz: [LegacyLowstockContact].self) { (source: AnyObject) -> [LegacyLowstockContact] in
                return Decoders.decode(clazz: [LegacyLowstockContact].self, source: source)
            }
            // Decoder for LegacyLowstockContact
            Decoders.addDecoder(clazz: LegacyLowstockContact.self) { (source: AnyObject) -> LegacyLowstockContact in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = LegacyLowstockContact()
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.internalId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["internalId"])
                instance.id = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["id"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [LineOfBusiness]
            Decoders.addDecoder(clazz: [LineOfBusiness].self) { (source: AnyObject) -> [LineOfBusiness] in
                return Decoders.decode(clazz: [LineOfBusiness].self, source: source)
            }
            // Decoder for LineOfBusiness
            Decoders.addDecoder(clazz: LineOfBusiness.self) { (source: AnyObject) -> LineOfBusiness in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = LineOfBusiness()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.code = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["code"])
                instance.label = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["label"])
                instance.defaultWarehouseServiceTypeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["defaultWarehouseServiceTypeId"])
                instance.defaultSLAServiceDays = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["defaultSLAServiceDays"])
                instance.defaultSLACutoffTime = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["defaultSLACutoffTime"])
                instance.onHold = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["onHold"])
                instance.onHoldReason = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["onHoldReason"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [Location]
            Decoders.addDecoder(clazz: [Location].self) { (source: AnyObject) -> [Location] in
                return Decoders.decode(clazz: [Location].self, source: source)
            }
            // Decoder for Location
            Decoders.addDecoder(clazz: Location.self) { (source: AnyObject) -> Location in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Location()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.warehouseId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseId"])
                instance.buildingId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["buildingId"])
                instance.zoneId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["zoneId"])
                instance.aisleId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["aisleId"])
                instance.billingTypeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["billingTypeId"])
                instance.behaviorType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["behaviorType"])
                instance.footprintId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["footprintId"])
                instance.addressSchemeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["addressSchemeId"])
                instance.origin = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["origin"])
                instance.address = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["address"])
                instance.level = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["level"])
                instance.bay = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["bay"])
                instance.number = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["number"])
                instance.online = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["online"])
                instance.priorityCode = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["priorityCode"])
                instance.cost = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["cost"])
                instance.allowItemMixing = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["allowItemMixing"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.quantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["quantity"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [LocationAddressScheme]
            Decoders.addDecoder(clazz: [LocationAddressScheme].self) { (source: AnyObject) -> [LocationAddressScheme] in
                return Decoders.decode(clazz: [LocationAddressScheme].self, source: source)
            }
            // Decoder for LocationAddressScheme
            Decoders.addDecoder(clazz: LocationAddressScheme.self) { (source: AnyObject) -> LocationAddressScheme in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = LocationAddressScheme()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.clientId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["clientId"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.formatString = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["formatString"])
                instance.locationNamingScheme = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["locationNamingScheme"])
                instance.locationNumberZeroPadded = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["locationNumberZeroPadded"])
                instance.locationNumberMinimumNumberOfDigits = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["locationNumberMinimumNumberOfDigits"])
                instance.levelNamingScheme = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["levelNamingScheme"])
                instance.levelNumberZeroPadded = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["levelNumberZeroPadded"])
                instance.levelNumberMinimumNumberOfDigits = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["levelNumberMinimumNumberOfDigits"])
                instance.aisleNamingScheme = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["aisleNamingScheme"])
                instance.aisleNumberZeroPadded = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["aisleNumberZeroPadded"])
                instance.aisleNumberMinimumNumberOfDigits = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["aisleNumberMinimumNumberOfDigits"])
                instance.bayNamingScheme = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["bayNamingScheme"])
                instance.bayNumberZeroPadded = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["bayNumberZeroPadded"])
                instance.bayNumberMinimumNumberOfDigits = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["bayNumberMinimumNumberOfDigits"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [LocationBillingType]
            Decoders.addDecoder(clazz: [LocationBillingType].self) { (source: AnyObject) -> [LocationBillingType] in
                return Decoders.decode(clazz: [LocationBillingType].self, source: source)
            }
            // Decoder for LocationBillingType
            Decoders.addDecoder(clazz: LocationBillingType.self) { (source: AnyObject) -> LocationBillingType in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = LocationBillingType()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.clientId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["clientId"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [LocationFootprint]
            Decoders.addDecoder(clazz: [LocationFootprint].self) { (source: AnyObject) -> [LocationFootprint] in
                return Decoders.decode(clazz: [LocationFootprint].self, source: source)
            }
            // Decoder for LocationFootprint
            Decoders.addDecoder(clazz: LocationFootprint.self) { (source: AnyObject) -> LocationFootprint in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = LocationFootprint()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.clientId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["clientId"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.width = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["width"])
                instance.depth = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["depth"])
                instance.height = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["height"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [LoggedTime]
            Decoders.addDecoder(clazz: [LoggedTime].self) { (source: AnyObject) -> [LoggedTime] in
                return Decoders.decode(clazz: [LoggedTime].self, source: source)
            }
            // Decoder for LoggedTime
            Decoders.addDecoder(clazz: LoggedTime.self) { (source: AnyObject) -> LoggedTime in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = LoggedTime()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.start = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["start"])
                instance.end = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["end"])
                instance.duration = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["duration"])
                instance.description = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["description"])
                instance.client = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["client"])
                instance.userId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["userId"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.warehouseId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseId"])
                instance.loggedTimeTypeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["loggedTimeTypeId"])
                instance.appId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["appId"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [LoggedTimeType]
            Decoders.addDecoder(clazz: [LoggedTimeType].self) { (source: AnyObject) -> [LoggedTimeType] in
                return Decoders.decode(clazz: [LoggedTimeType].self, source: source)
            }
            // Decoder for LoggedTimeType
            Decoders.addDecoder(clazz: LoggedTimeType.self) { (source: AnyObject) -> LoggedTimeType in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = LoggedTimeType()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.label = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["label"])
                instance.fullEntityClassName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["fullEntityClassName"])
                return instance
            }


            // Decoder for [LowStock]
            Decoders.addDecoder(clazz: [LowStock].self) { (source: AnyObject) -> [LowStock] in
                return Decoders.decode(clazz: [LowStock].self, source: source)
            }
            // Decoder for LowStock
            Decoders.addDecoder(clazz: LowStock.self) { (source: AnyObject) -> LowStock in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = LowStock()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.warehouseId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseId"])
                instance.lowLevelDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["lowLevelDate"])
                instance.lowStockMessage = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["lowStockMessage"])
                instance.printFlag = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["printFlag"])
                instance.isDelayed = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["isDelayed"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                instance.sku = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sku"])
                return instance
            }


            // Decoder for [ManageScheduledPlans]
            Decoders.addDecoder(clazz: [ManageScheduledPlans].self) { (source: AnyObject) -> [ManageScheduledPlans] in
                return Decoders.decode(clazz: [ManageScheduledPlans].self, source: source)
            }
            // Decoder for ManageScheduledPlans
            Decoders.addDecoder(clazz: ManageScheduledPlans.self) { (source: AnyObject) -> ManageScheduledPlans in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ManageScheduledPlans()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.description = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["description"])
                instance.scheduledplantypeid = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["scheduledplantypeid"])
                instance.planid = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["planid"])
                instance.active = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["active"])
                instance.user = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["user"])
                instance.deleted = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["deleted"])
                instance.warehouseId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseId"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [NonBusinessDay]
            Decoders.addDecoder(clazz: [NonBusinessDay].self) { (source: AnyObject) -> [NonBusinessDay] in
                return Decoders.decode(clazz: [NonBusinessDay].self, source: source)
            }
            // Decoder for NonBusinessDay
            Decoders.addDecoder(clazz: NonBusinessDay.self) { (source: AnyObject) -> NonBusinessDay in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = NonBusinessDay()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.date = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["date"])
                instance.note = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["note"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [OmsOrder]
            Decoders.addDecoder(clazz: [OmsOrder].self) { (source: AnyObject) -> [OmsOrder] in
                return Decoders.decode(clazz: [OmsOrder].self, source: source)
            }
            // Decoder for OmsOrder
            Decoders.addDecoder(clazz: OmsOrder.self) { (source: AnyObject) -> OmsOrder in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = OmsOrder()
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.externalId = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["externalId"])
                instance.omsOrderNo = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["omsOrderNo"])
                instance.total = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["total"])
                instance.orderStatus = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orderStatus"])
                instance.orderEntryProgramId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderEntryProgramId"])
                instance.legacyUserId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["legacyUserId"])
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.nextOMSOrderId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["nextOMSOrderId"])
                instance.customerId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["customerId"])
                instance.tax = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["tax"])
                instance.shippingHandling = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["shippingHandling"])
                instance.shOverrideAmount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["shOverrideAmount"])
                instance.integrationPartnerId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["integrationPartnerId"])
                instance.orderSourceId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderSourceId"])
                instance.batchNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["batchNo"])
                instance.isGift = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["isGift"])
                instance.giftMessageTo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["giftMessageTo"])
                instance.giftMessageFrom = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["giftMessageFrom"])
                instance.giftMessage = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["giftMessage"])
                instance.emailRecipient = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["emailRecipient"])
                instance.mailRecipient = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["mailRecipient"])
                instance.keyCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["keyCode"])
                instance.keyCodeDescription = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["keyCodeDescription"])
                instance.deliverOnDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["deliverOnDate"])
                instance.distCharges = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["distCharges"])
                instance.subTotal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["subTotal"])
                instance.shipVia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipVia"])
                instance.lineItems = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["lineItems"])
                instance.shipToFirstName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToFirstName"])
                instance.shipToLastName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToLastName"])
                instance.shipToCompany = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToCompany"])
                instance.shipToStreet1 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToStreet1"])
                instance.shipToStreet2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToStreet2"])
                instance.shipToStreet3 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToStreet3"])
                instance.shipToCity = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToCity"])
                instance.shipToState = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToState"])
                instance.shipToZip = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToZip"])
                instance.shipToEmail = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToEmail"])
                instance.shipToPhone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToPhone"])
                instance.billToFirstName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToFirstName"])
                instance.billToLastName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToLastName"])
                instance.billToCompany = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToCompany"])
                instance.billToStreet1 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToStreet1"])
                instance.billToStreet2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToStreet2"])
                instance.billToStreet3 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToStreet3"])
                instance.billToCity = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToCity"])
                instance.billToState = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToState"])
                instance.billToZip = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToZip"])
                instance.billToEmail = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToEmail"])
                instance.billToPhone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToPhone"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [Order]
            Decoders.addDecoder(clazz: [Order].self) { (source: AnyObject) -> [Order] in
                return Decoders.decode(clazz: [Order].self, source: source)
            }
            // Decoder for Order
            Decoders.addDecoder(clazz: Order.self) { (source: AnyObject) -> Order in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Order()
                instance.orderNo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["orderNo"])
                instance.customerOrderNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["customerOrderNo"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.warehouseId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseId"])
                instance.orderDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["orderDate"])
                instance.customerNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["customerNo"])
                instance.useOrderNoRoot = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["useOrderNoRoot"])
                instance.shippingMethod = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shippingMethod"])
                instance.firstShipDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["firstShipDate"])
                instance.lastShipDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["lastShipDate"])
                instance.deliverOnDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["deliverOnDate"])
                instance.needByDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["needByDate"])
                instance.carrierId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["carrierId"])
                instance.shipVia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipVia"])
                instance.mediaCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["mediaCode"])
                instance.legacyRestrictionType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["legacyRestrictionType"])
                instance.alcoholOrderType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholOrderType"])
                instance.alternateUsage = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alternateUsage"])
                instance.authorizationAmount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["authorizationAmount"])
                instance.authorizedBy = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["authorizedBy"])
                instance.balanceDue = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["balanceDue"])
                instance.batchNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["batchNo"])
                instance.billToAttention = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToAttention"])
                instance.billToCompany = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToCompany"])
                instance.billToStreet = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToStreet"])
                instance.billToStreet2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToStreet2"])
                instance.billToStreet3 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToStreet3"])
                instance.billToCity = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToCity"])
                instance.billToState = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToState"])
                instance.billToZip = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToZip"])
                instance.billToCountry = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToCountry"])
                instance.billToPhone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToPhone"])
                instance.billToEmail = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToEmail"])
                instance.numberOfCartons = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["numberOfCartons"])
                instance.numberOfPallets = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["numberOfPallets"])
                instance.completionStatus = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["completionStatus"])
                instance.parcelAccountId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["parcelAccountId"])
                instance.thirdPartyParcelAccountId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["thirdPartyParcelAccountId"])
                instance.costCenter = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["costCenter"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.customerPONo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["customerPONo"])
                instance.distributionChannel = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["distributionChannel"])
                instance.distributionCharges = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["distributionCharges"])
                instance.division = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["division"])
                instance.enteredBy = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["enteredBy"])
                instance.preAllocationEstimatedWeight = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["preAllocationEstimatedWeight"])
                instance.estimatedWeightLbs = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["estimatedWeightLbs"])
                instance.freight = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["freight"])
                instance.giftMessageTo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["giftMessageTo"])
                instance.giftMessageFrom = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["giftMessageFrom"])
                instance.giftMessage = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["giftMessage"])
                instance.groupOrderId = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["groupOrderId"])
                instance.parentKODOrderId = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["parentKODOrderId"])
                instance.holdCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["holdCode"])
                instance.integrationPartnerId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["integrationPartnerId"])
                instance.numberOfLineItems = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["numberOfLineItems"])
                instance.estimatedNumberOfPicks = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["estimatedNumberOfPicks"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.omsOrderID = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["omsOrderID"])
                instance.omsOrderNo = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["omsOrderNo"])
                instance.omsCustomerId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["omsCustomerId"])
                instance.orderLoadProgramId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderLoadProgramId"])
                instance.orderMessage = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orderMessage"])
                instance.orderReason = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderReason"])
                instance.orderSourceId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderSourceId"])
                instance.packingSlipTemplateId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["packingSlipTemplateId"])
                instance.orderInvoiceTemplateId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderInvoiceTemplateId"])
                instance.orderEmailTemplateId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderEmailTemplateId"])
                instance.shipmentEmailTemplateId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["shipmentEmailTemplateId"])
                instance.outForDeliveryEmailTemplateId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["outForDeliveryEmailTemplateId"])
                instance.deliveredEmailTemplateId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["deliveredEmailTemplateId"])
                instance.priceLevel = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["priceLevel"])
                instance.priceMode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["priceMode"])
                instance.priorityCode = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["priorityCode"])
                instance.fulfillmentProcessId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["fulfillmentProcessId"])
                instance.shipBy = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["shipBy"])
                instance.shipCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipCode"])
                instance.shipDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["shipDate"])
                instance.shippedDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["shippedDate"])
                instance.shipToAttention = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToAttention"])
                instance.shipToCompany = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToCompany"])
                instance.shipToStreet = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToStreet"])
                instance.shipToStreet2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToStreet2"])
                instance.shipToStreet3 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToStreet3"])
                instance.shipToCity = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToCity"])
                instance.shipToState = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToState"])
                instance.shipToZip = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToZip"])
                instance.shipToCountry = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToCountry"])
                instance.shipToPhone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToPhone"])
                instance.shipToEmail = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToEmail"])
                instance.shippingCharge = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["shippingCharge"])
                instance.status = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["status"])
                instance.stopBackOrders = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["stopBackOrders"])
                instance.subtotal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["subtotal"])
                instance.tax = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["tax"])
                instance.total = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["total"])
                instance.totalDiscount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalDiscount"])
                instance.totalPaid = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalPaid"])
                instance.totalQty = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["totalQty"])
                instance.weightLbs = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["weightLbs"])
                instance.orderAssemblyInstructions = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orderAssemblyInstructions"])
                instance.parcelLabelRef1 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["parcelLabelRef1"])
                instance.parcelLabelRef2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["parcelLabelRef2"])
                instance.parcelLabelRef3 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["parcelLabelRef3"])
                instance.lineItems = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["lineItems"])
                instance.requestedParcelAccessories = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["requestedParcelAccessories"])
                instance.extraOrderData = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["extraOrderData"])
                instance.extraLineItemData = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["extraLineItemData"])
                instance.externalShippingSystemId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["externalShippingSystemId"])
                instance.serviceTypeId = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["serviceTypeId"])
                instance.warehouseServiceTypeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseServiceTypeId"])
                instance.warehouseServiceLevelId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseServiceLevelId"])
                instance.slaDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["slaDate"])
                instance.slaStatus = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["slaStatus"])
                instance.productionType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["productionType"])
                instance.backOrderStatus = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["backOrderStatus"])
                instance.backOrderReleaseDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["backOrderReleaseDate"])
                instance.estimatedNumberOfCartons = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["estimatedNumberOfCartons"])
                instance.estimatedCartonizationPlan = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["estimatedCartonizationPlan"])
                instance.manifestScriptId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["manifestScriptId"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [OrderActivity]
            Decoders.addDecoder(clazz: [OrderActivity].self) { (source: AnyObject) -> [OrderActivity] in
                return Decoders.decode(clazz: [OrderActivity].self, source: source)
            }
            // Decoder for OrderActivity
            Decoders.addDecoder(clazz: OrderActivity.self) { (source: AnyObject) -> OrderActivity in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = OrderActivity()
                instance.orderNo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["orderNo"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.alternateUsage = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alternateUsage"])
                instance.groupOrderId = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["groupOrderId"])
                instance.status = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["status"])
                instance.reqStatusName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["reqStatusName"])
                instance.fulfillmentProcessId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["fulfillmentProcessId"])
                instance.carrierId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["carrierId"])
                instance.carrierName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["carrierName"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.mediaCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["mediaCode"])
                instance.legacyRestrictionType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["legacyRestrictionType"])
                instance.reqTypeName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["reqTypeName"])
                instance.legacyServiceType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["legacyServiceType"])
                instance.legacyServiceTypeName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["legacyServiceTypeName"])
                instance.alcoholOrderType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholOrderType"])
                instance.distributionChannel = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["distributionChannel"])
                instance.distributionChannelName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["distributionChannelName"])
                instance.priorityCode = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["priorityCode"])
                instance.orderDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["orderDate"])
                instance.enteredBy = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["enteredBy"])
                instance.orderReason = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderReason"])
                instance.customerOrderNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["customerOrderNo"])
                instance.priceLevel = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["priceLevel"])
                instance.orderCreateDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["orderCreateDate"])
                instance.orderModifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["orderModifyDate"])
                instance.shipBy = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["shipBy"])
                instance.stopBackOrders = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["stopBackOrders"])
                instance.warehouseId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseId"])
                instance.orderSourceId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderSourceId"])
                instance.orderSourceName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orderSourceName"])
                instance.integrationPartnerId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["integrationPartnerId"])
                instance.integrationPartnerName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["integrationPartnerName"])
                instance.orderLoadProgramId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderLoadProgramId"])
                instance.orderLoadProgramName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orderLoadProgramName"])
                instance.omsOrderNo = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["omsOrderNo"])
                instance.omsCustomerId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["omsCustomerId"])
                instance.shipToAttention = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToAttention"])
                instance.shipToCompany = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToCompany"])
                instance.shipToStreet = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToStreet"])
                instance.shipToStreet2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToStreet2"])
                instance.shipToStreet3 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToStreet3"])
                instance.shipToCity = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToCity"])
                instance.shipToState = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToState"])
                instance.shipToZip = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToZip"])
                instance.shipToCountry = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToCountry"])
                instance.shipToPhone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToPhone"])
                instance.shipToEmail = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToEmail"])
                instance.billToAttention = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToAttention"])
                instance.billToCompany = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToCompany"])
                instance.billToStreet = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToStreet"])
                instance.billToStreet2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToStreet2"])
                instance.billToStreet3 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToStreet3"])
                instance.billToCity = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToCity"])
                instance.billToState = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToState"])
                instance.billToZip = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToZip"])
                instance.billToCountry = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToCountry"])
                instance.billToPhone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToPhone"])
                instance.billToEmail = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToEmail"])
                instance.shipDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["shipDate"])
                instance.shippedDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["shippedDate"])
                instance.freight = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["freight"])
                instance.weightLbs = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["weightLbs"])
                instance.estimatedWeightLbs = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["estimatedWeightLbs"])
                instance.numberOfCartons = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["numberOfCartons"])
                instance.numberOfPallets = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["numberOfPallets"])
                instance.numberOfLineItems = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["numberOfLineItems"])
                instance.completionStatus = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["completionStatus"])
                instance.holdCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["holdCode"])
                instance.shipCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipCode"])
                instance.orderMessage = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orderMessage"])
                instance.division = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["division"])
                instance.costCenter = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["costCenter"])
                instance.authorizedBy = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["authorizedBy"])
                instance.batchNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["batchNo"])
                instance.firstShipDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["firstShipDate"])
                instance.lastShipDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["lastShipDate"])
                instance.deliverOnDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["deliverOnDate"])
                instance.customerPONo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["customerPONo"])
                instance.shipVia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipVia"])
                instance.needByDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["needByDate"])
                instance.total = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["total"])
                instance.balanceDue = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["balanceDue"])
                instance.totalPaid = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalPaid"])
                instance.authorizationAmount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["authorizationAmount"])
                instance.subtotal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["subtotal"])
                instance.taxOnFreight = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxOnFreight"])
                instance.tax = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["tax"])
                instance.distributionCharges = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["distributionCharges"])
                instance.shippingCharge = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["shippingCharge"])
                instance.totalDiscount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalDiscount"])
                instance.parcelAccountId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["parcelAccountId"])
                instance.thirdPartyParcelAccountId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["thirdPartyParcelAccountId"])
                instance.packingSlipTemplateId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["packingSlipTemplateId"])
                instance.giftMessage = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["giftMessage"])
                instance.branchSector = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["branchSector"])
                instance.branchArea = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["branchArea"])
                instance.branchCustomerType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["branchCustomerType"])
                instance.branchId = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["branchId"])
                instance.orderCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orderCode"])
                instance.leadPackageId = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["leadPackageId"])
                instance.deliveredDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["deliveredDate"])
                instance.totalQty = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["totalQty"])
                instance.numberOfWraps = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["numberOfWraps"])
                instance.numberOfCases = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["numberOfCases"])
                instance.numberOfInnerPacks = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["numberOfInnerPacks"])
                instance.numberOfTouches = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["numberOfTouches"])
                instance.estimatedNumberOfPicks = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["estimatedNumberOfPicks"])
                instance.orderConfirmationEmailTemplateId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderConfirmationEmailTemplateId"])
                instance.shipmentConfirmationEmailTemplateId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["shipmentConfirmationEmailTemplateId"])
                instance.externalShippingSystemId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["externalShippingSystemId"])
                instance.shippingSystemName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shippingSystemName"])
                instance.orderInvoiceTemplateId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderInvoiceTemplateId"])
                instance.priceMode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["priceMode"])
                instance.warehouseServiceTypeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseServiceTypeId"])
                instance.warehouseServiceLevelId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseServiceLevelId"])
                instance.slaDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["slaDate"])
                instance.slaStatus = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["slaStatus"])
                instance.productionType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["productionType"])
                instance.backOrderStatus = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["backOrderStatus"])
                instance.backOrderReleaseDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["backOrderReleaseDate"])
                instance.billingQuantity = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["billingQuantity"])
                instance.chargedRate = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["chargedRate"])
                instance.extendedCharge = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extendedCharge"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [OrderExtraLineItemData]
            Decoders.addDecoder(clazz: [OrderExtraLineItemData].self) { (source: AnyObject) -> [OrderExtraLineItemData] in
                return Decoders.decode(clazz: [OrderExtraLineItemData].self, source: source)
            }
            // Decoder for OrderExtraLineItemData
            Decoders.addDecoder(clazz: OrderExtraLineItemData.self) { (source: AnyObject) -> OrderExtraLineItemData in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = OrderExtraLineItemData()
                instance.sku = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sku"])
                instance.category = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["category"])
                instance.code = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["code"])
                instance.value = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["value"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [OrderExtraOrderData]
            Decoders.addDecoder(clazz: [OrderExtraOrderData].self) { (source: AnyObject) -> [OrderExtraOrderData] in
                return Decoders.decode(clazz: [OrderExtraOrderData].self, source: source)
            }
            // Decoder for OrderExtraOrderData
            Decoders.addDecoder(clazz: OrderExtraOrderData.self) { (source: AnyObject) -> OrderExtraOrderData in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = OrderExtraOrderData()
                instance.sequence = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sequence"])
                instance.category = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["category"])
                instance.code = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["code"])
                instance.value = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["value"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [OrderInvoiceTemplateLineItemDescriptionEnum]
            Decoders.addDecoder(clazz: [OrderInvoiceTemplateLineItemDescriptionEnum].self) { (source: AnyObject) -> [OrderInvoiceTemplateLineItemDescriptionEnum] in
                return Decoders.decode(clazz: [OrderInvoiceTemplateLineItemDescriptionEnum].self, source: source)
            }
            // Decoder for OrderInvoiceTemplateLineItemDescriptionEnum
            Decoders.addDecoder(clazz: OrderInvoiceTemplateLineItemDescriptionEnum.self) { (source: AnyObject) -> OrderInvoiceTemplateLineItemDescriptionEnum in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = OrderInvoiceTemplateLineItemDescriptionEnum()
                instance.id = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["id"])
                instance.label = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["label"])
                instance.fullEntityClassName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["fullEntityClassName"])
                return instance
            }


            // Decoder for [OrderLine]
            Decoders.addDecoder(clazz: [OrderLine].self) { (source: AnyObject) -> [OrderLine] in
                return Decoders.decode(clazz: [OrderLine].self, source: source)
            }
            // Decoder for OrderLine
            Decoders.addDecoder(clazz: OrderLine.self) { (source: AnyObject) -> OrderLine in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = OrderLine()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.lineItemId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lineItemId"])
                instance.customerLineItemNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["customerLineItemNo"])
                instance.orderNo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["orderNo"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.sku = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sku"])
                instance.poNoId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["poNoId"])
                instance.orderedQty = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderedQty"])
                instance.allowedQty = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["allowedQty"])
                instance.shippedQty = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["shippedQty"])
                instance.backorderQty = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["backorderQty"])
                instance.numberOfWraps = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["numberOfWraps"])
                instance.numberOfCases = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["numberOfCases"])
                instance.numberOfInnerPacks = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["numberOfInnerPacks"])
                instance.revDate = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["revDate"])
                instance.chargeCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["chargeCode"])
                instance.distributionCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["distributionCode"])
                instance.upc = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["upc"])
                instance.vendorSKU = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["vendorSKU"])
                instance.orderSourceSKU = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orderSourceSKU"])
                instance.unitCost = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["unitCost"])
                instance.unitSell = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["unitSell"])
                instance.unitDiscount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["unitDiscount"])
                instance.unitDeclaredValueOverride = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["unitDeclaredValueOverride"])
                instance.extendedCost = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extendedCost"])
                instance.extendedSell = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extendedSell"])
                instance.extendedDiscount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extendedDiscount"])
                instance.ncExtendedSell = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["ncExtendedSell"])
                instance.extendedDeclaredValueOverride = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extendedDeclaredValueOverride"])
                instance.itemWeight = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["itemWeight"])
                instance.productionLot = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["productionLot"])
                instance.expirationDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["expirationDate"])
                instance.weightPerWrap = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["weightPerWrap"])
                instance.sector = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sector"])
                instance.orderAssemblyInstructions = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orderAssemblyInstructions"])
                instance.itemAccountCodeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["itemAccountCodeId"])
                instance.itemLegacyLowStockContactId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["itemLegacyLowStockContactId"])
                instance.itemMajorGroupId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["itemMajorGroupId"])
                instance.itemSubGroupId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["itemSubGroupId"])
                instance.itemProductCodeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["itemProductCodeId"])
                instance.itemSummaryCodeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["itemSummaryCodeId"])
                instance.fulfillmentChannel = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["fulfillmentChannel"])
                instance.dynamicKitComponentList = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["dynamicKitComponentList"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [OrderLineActivity]
            Decoders.addDecoder(clazz: [OrderLineActivity].self) { (source: AnyObject) -> [OrderLineActivity] in
                return Decoders.decode(clazz: [OrderLineActivity].self, source: source)
            }
            // Decoder for OrderLineActivity
            Decoders.addDecoder(clazz: OrderLineActivity.self) { (source: AnyObject) -> OrderLineActivity in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = OrderLineActivity()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.orderNo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["orderNo"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.sku = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sku"])
                instance.poNoId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["poNoId"])
                instance.lineItemId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lineItemId"])
                instance.orderCreateDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["orderCreateDate"])
                instance.orderModifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["orderModifyDate"])
                instance.crossDock = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["crossDock"])
                instance.processNoId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["processNoId"])
                instance.orderedQty = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderedQty"])
                instance.allowedQty = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["allowedQty"])
                instance.shippedQty = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["shippedQty"])
                instance.backorderQty = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["backorderQty"])
                instance.adjustCode = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["adjustCode"])
                instance.processFlag = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["processFlag"])
                instance.revDate = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["revDate"])
                instance.restrictionRule = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["restrictionRule"])
                instance.unitCost = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["unitCost"])
                instance.unitSell = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["unitSell"])
                instance.unitDiscount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["unitDiscount"])
                instance.extendedCost = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extendedCost"])
                instance.extendedSell = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extendedSell"])
                instance.extendedDiscount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extendedDiscount"])
                instance.ncExtendedSell = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["ncExtendedSell"])
                instance.per = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["per"])
                instance.chargeCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["chargeCode"])
                instance.distributionCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["distributionCode"])
                instance.upc = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["upc"])
                instance.vendorSKU = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["vendorSKU"])
                instance.orderSourceSKU = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orderSourceSKU"])
                instance.itemMajorGroupId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["itemMajorGroupId"])
                instance.masterMajorGroupName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["masterMajorGroupName"])
                instance.itemSubGroupId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["itemSubGroupId"])
                instance.masterSubGroupName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["masterSubGroupName"])
                instance.itemProductCodeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["itemProductCodeId"])
                instance.masterProductionCodeName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["masterProductionCodeName"])
                instance.itemAccountCodeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["itemAccountCodeId"])
                instance.masterAccountCodeName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["masterAccountCodeName"])
                instance.itemSummaryCodeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["itemSummaryCodeId"])
                instance.masterSummaryCodeName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["masterSummaryCodeName"])
                instance.itemLegacyLowStockContactId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["itemLegacyLowStockContactId"])
                instance.lowStockContactName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["lowStockContactName"])
                instance.sector = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sector"])
                instance.weightPerWrap = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["weightPerWrap"])
                instance.itemWeight = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["itemWeight"])
                instance.productionLot = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["productionLot"])
                instance.numberOfWraps = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["numberOfWraps"])
                instance.numberOfCases = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["numberOfCases"])
                instance.numberOfInnerPacks = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["numberOfInnerPacks"])
                instance.numberOfTouches = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["numberOfTouches"])
                instance.alcoholTypeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["alcoholTypeId"])
                instance.alcoholTypeName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholTypeName"])
                instance.alcoholContent = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["alcoholContent"])
                instance.alcoholContainerId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["alcoholContainerId"])
                instance.alcoholContainerName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholContainerName"])
                instance.alcoholContainerVolume = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["alcoholContainerVolume"])
                instance.alcoholVintageYear = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholVintageYear"])
                instance.alcoholCountryId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["alcoholCountryId"])
                instance.alcoholCountryName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholCountryName"])
                instance.alcoholState = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholState"])
                instance.alcoholRegion = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholRegion"])
                instance.alcoholBrand = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholBrand"])
                instance.alcoholUPCCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholUPCCode"])
                instance.alcoholNABCACode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholNABCACode"])
                instance.alcoholUNIMERCCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholUNIMERCCode"])
                instance.alcoholSCCCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholSCCCode"])
                instance.alternateUsage = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alternateUsage"])
                instance.groupOrderId = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["groupOrderId"])
                instance.orderStatus = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orderStatus"])
                instance.orderStatusName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orderStatusName"])
                instance.carrierId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["carrierId"])
                instance.carrierName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["carrierName"])
                instance.mediaCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["mediaCode"])
                instance.legacyRestrictionType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["legacyRestrictionType"])
                instance.reqTypeName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["reqTypeName"])
                instance.legacyServiceType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["legacyServiceType"])
                instance.legacyServiceTypeName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["legacyServiceTypeName"])
                instance.alcoholOrderType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholOrderType"])
                instance.distributionChannel = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["distributionChannel"])
                instance.distributionChannelName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["distributionChannelName"])
                instance.priorityCode = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["priorityCode"])
                instance.orderDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["orderDate"])
                instance.enteredBy = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["enteredBy"])
                instance.orderReason = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderReason"])
                instance.customerOrderNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["customerOrderNo"])
                instance.priceLevel = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["priceLevel"])
                instance.shipBy = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["shipBy"])
                instance.stopBackOrders = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["stopBackOrders"])
                instance.orderSourceId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderSourceId"])
                instance.orderSourceName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orderSourceName"])
                instance.integrationPartnerId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["integrationPartnerId"])
                instance.integrationPartnerName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["integrationPartnerName"])
                instance.orderLoadProgramId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderLoadProgramId"])
                instance.orderLoadProgramName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orderLoadProgramName"])
                instance.omsOrderNo = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["omsOrderNo"])
                instance.omsCustomerId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["omsCustomerId"])
                instance.shipToAttention = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToAttention"])
                instance.shipToCompany = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToCompany"])
                instance.shipToStreet = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToStreet"])
                instance.shipToStreet2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToStreet2"])
                instance.shipToStreet3 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToStreet3"])
                instance.shipToCity = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToCity"])
                instance.shipToState = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToState"])
                instance.shipToZip = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToZip"])
                instance.shipToCountry = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToCountry"])
                instance.shipToPhone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToPhone"])
                instance.shipToEmail = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToEmail"])
                instance.billToAttention = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToAttention"])
                instance.billToCompany = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToCompany"])
                instance.billToStreet = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToStreet"])
                instance.billToStreet2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToStreet2"])
                instance.billToStreet3 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToStreet3"])
                instance.billToCity = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToCity"])
                instance.billToState = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToState"])
                instance.billToZip = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToZip"])
                instance.billToCountry = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToCountry"])
                instance.billToPhone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToPhone"])
                instance.billToEmail = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billToEmail"])
                instance.orderShipDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["orderShipDate"])
                instance.shippedDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["shippedDate"])
                instance.daysInStorage = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["daysInStorage"])
                instance.freight = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["freight"])
                instance.orderWeightLbs = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["orderWeightLbs"])
                instance.orderEstimatedWeightLbs = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["orderEstimatedWeightLbs"])
                instance.numberOfPallets = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["numberOfPallets"])
                instance.numberOfLineItems = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["numberOfLineItems"])
                instance.completionStatus = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["completionStatus"])
                instance.holdCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["holdCode"])
                instance.shipCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipCode"])
                instance.orderMessage = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orderMessage"])
                instance.division = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["division"])
                instance.costCenter = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["costCenter"])
                instance.authorizedBy = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["authorizedBy"])
                instance.batchNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["batchNo"])
                instance.firstShipDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["firstShipDate"])
                instance.lastShipDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["lastShipDate"])
                instance.deliverOnDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["deliverOnDate"])
                instance.customerPONo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["customerPONo"])
                instance.shipVia = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipVia"])
                instance.needByDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["needByDate"])
                instance.total = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["total"])
                instance.balanceDue = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["balanceDue"])
                instance.totalPaid = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalPaid"])
                instance.authorizationAmount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["authorizationAmount"])
                instance.subtotal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["subtotal"])
                instance.taxOnFreight = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["taxOnFreight"])
                instance.tax = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["tax"])
                instance.distributionCharges = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["distributionCharges"])
                instance.shippingCharge = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["shippingCharge"])
                instance.totalDiscount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["totalDiscount"])
                instance.parcelAccountId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["parcelAccountId"])
                instance.thirdPartyParcelAccountId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["thirdPartyParcelAccountId"])
                instance.packingSlipTemplateId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["packingSlipTemplateId"])
                instance.giftMessage = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["giftMessage"])
                instance.branchSector = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["branchSector"])
                instance.branchArea = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["branchArea"])
                instance.branchCustomerType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["branchCustomerType"])
                instance.branchId = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["branchId"])
                instance.orderCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orderCode"])
                instance.leadPackageId = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["leadPackageId"])
                instance.totalQty = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["totalQty"])
                instance.estimatedNumberOfPicks = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["estimatedNumberOfPicks"])
                instance.orderConfirmationEmailTemplateId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderConfirmationEmailTemplateId"])
                instance.shipmentConfirmationEmailTemplateId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["shipmentConfirmationEmailTemplateId"])
                instance.orderInvoiceTemplateId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderInvoiceTemplateId"])
                instance.priceMode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["priceMode"])
                instance.warehouseServiceTypeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseServiceTypeId"])
                instance.warehouseServiceLevelId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseServiceLevelId"])
                instance.slaDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["slaDate"])
                instance.slaStatus = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["slaStatus"])
                instance.productionType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["productionType"])
                instance.backOrderStatus = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["backOrderStatus"])
                instance.backOrderReleaseDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["backOrderReleaseDate"])
                instance.billingQuantity = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["billingQuantity"])
                instance.chargedRate = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["chargedRate"])
                instance.extendedCharge = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extendedCharge"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [OrderLineItem]
            Decoders.addDecoder(clazz: [OrderLineItem].self) { (source: AnyObject) -> [OrderLineItem] in
                return Decoders.decode(clazz: [OrderLineItem].self, source: source)
            }
            // Decoder for OrderLineItem
            Decoders.addDecoder(clazz: OrderLineItem.self) { (source: AnyObject) -> OrderLineItem in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = OrderLineItem()
                instance.quantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["quantity"])
                instance.price = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["price"])
                instance.discount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["discount"])
                instance.subTotal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["subTotal"])
                instance.originalPrice = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["originalPrice"])
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.sku = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sku"])
                instance.description = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["description"])
                instance.majorGroup = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["majorGroup"])
                instance.subGroup = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["subGroup"])
                instance.available = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["available"])
                instance.onHand = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["onHand"])
                instance.onOrder = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["onOrder"])
                instance.discountType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["discountType"])
                instance.discountPercent = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["discountPercent"])
                instance.customPrice = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["customPrice"])
                instance.discountedPrice = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["discountedPrice"])
                instance.alternateSKU = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alternateSKU"])
                instance.isGiftCard = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["isGiftCard"])
                instance.giftCardAmount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["giftCardAmount"])
                instance.giftCardTo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["giftCardTo"])
                instance.giftCardEmail = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["giftCardEmail"])
                instance.giftCardMessage = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["giftCardMessage"])
                instance.account = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["account"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [OrderLoadProgram]
            Decoders.addDecoder(clazz: [OrderLoadProgram].self) { (source: AnyObject) -> [OrderLoadProgram] in
                return Decoders.decode(clazz: [OrderLoadProgram].self, source: source)
            }
            // Decoder for OrderLoadProgram
            Decoders.addDecoder(clazz: OrderLoadProgram.self) { (source: AnyObject) -> OrderLoadProgram in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = OrderLoadProgram()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.label = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["label"])
                instance.fullEntityClassName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["fullEntityClassName"])
                return instance
            }


            // Decoder for [OrderSource]
            Decoders.addDecoder(clazz: [OrderSource].self) { (source: AnyObject) -> [OrderSource] in
                return Decoders.decode(clazz: [OrderSource].self, source: source)
            }
            // Decoder for OrderSource
            Decoders.addDecoder(clazz: OrderSource.self) { (source: AnyObject) -> OrderSource in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = OrderSource()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.packingNotes = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["packingNotes"])
                instance.requireCartonizedASN = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["requireCartonizedASN"])
                instance.usesReservations = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["usesReservations"])
                instance.requireGS1128Label = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["requireGS1128Label"])
                instance.shippingNotes = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shippingNotes"])
                instance.packingSlipId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["packingSlipId"])
                instance.orderInvoiceId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderInvoiceId"])
                instance.orderConfirmationEmailId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderConfirmationEmailId"])
                instance.shipmentConfirmationEmailId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["shipmentConfirmationEmailId"])
                instance.outForDeliveryConfirmationEmailId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["outForDeliveryConfirmationEmailId"])
                instance.deliveredConfirmationEmailId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["deliveredConfirmationEmailId"])
                instance.defaultServiceTypeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["defaultServiceTypeId"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [OrderSourceItemSetup]
            Decoders.addDecoder(clazz: [OrderSourceItemSetup].self) { (source: AnyObject) -> [OrderSourceItemSetup] in
                return Decoders.decode(clazz: [OrderSourceItemSetup].self, source: source)
            }
            // Decoder for OrderSourceItemSetup
            Decoders.addDecoder(clazz: OrderSourceItemSetup.self) { (source: AnyObject) -> OrderSourceItemSetup in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = OrderSourceItemSetup()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.sku = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sku"])
                instance.orderSourceId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderSourceId"])
                instance.packingNotes = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["packingNotes"])
                instance.skuTranslation = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["skuTranslation"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [OrderSourceReservation]
            Decoders.addDecoder(clazz: [OrderSourceReservation].self) { (source: AnyObject) -> [OrderSourceReservation] in
                return Decoders.decode(clazz: [OrderSourceReservation].self, source: source)
            }
            // Decoder for OrderSourceReservation
            Decoders.addDecoder(clazz: OrderSourceReservation.self) { (source: AnyObject) -> OrderSourceReservation in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = OrderSourceReservation()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.orderSourceId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderSourceId"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.reservedQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["reservedQuantity"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                instance.sku = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sku"])
                return instance
            }


            // Decoder for [OrderSourceStockStatus]
            Decoders.addDecoder(clazz: [OrderSourceStockStatus].self) { (source: AnyObject) -> [OrderSourceStockStatus] in
                return Decoders.decode(clazz: [OrderSourceStockStatus].self, source: source)
            }
            // Decoder for OrderSourceStockStatus
            Decoders.addDecoder(clazz: OrderSourceStockStatus.self) { (source: AnyObject) -> OrderSourceStockStatus in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = OrderSourceStockStatus()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.orderSourceId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderSourceId"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.totalReservedQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["totalReservedQuantity"])
                instance.demand = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["demand"])
                instance.reservedQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["reservedQuantity"])
                instance.quantityAvailable = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["quantityAvailable"])
                instance.orderableQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderableQuantity"])
                instance.unreservedQuantityAvailable = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["unreservedQuantityAvailable"])
                instance.netReservation = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["netReservation"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                instance.sku = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sku"])
                return instance
            }


            // Decoder for [OrderWarehouseFulfillmentPlan]
            Decoders.addDecoder(clazz: [OrderWarehouseFulfillmentPlan].self) { (source: AnyObject) -> [OrderWarehouseFulfillmentPlan] in
                return Decoders.decode(clazz: [OrderWarehouseFulfillmentPlan].self, source: source)
            }
            // Decoder for OrderWarehouseFulfillmentPlan
            Decoders.addDecoder(clazz: OrderWarehouseFulfillmentPlan.self) { (source: AnyObject) -> OrderWarehouseFulfillmentPlan in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = OrderWarehouseFulfillmentPlan()
                instance.score = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["score"])
                instance.planDetailList = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["planDetailList"])
                return instance
            }


            // Decoder for [OrderWarehouseFulfillmentPlanDetail]
            Decoders.addDecoder(clazz: [OrderWarehouseFulfillmentPlanDetail].self) { (source: AnyObject) -> [OrderWarehouseFulfillmentPlanDetail] in
                return Decoders.decode(clazz: [OrderWarehouseFulfillmentPlanDetail].self, source: source)
            }
            // Decoder for OrderWarehouseFulfillmentPlanDetail
            Decoders.addDecoder(clazz: OrderWarehouseFulfillmentPlanDetail.self) { (source: AnyObject) -> OrderWarehouseFulfillmentPlanDetail in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = OrderWarehouseFulfillmentPlanDetail()
                instance.warehouseId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseId"])
                instance.carrierCode = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["carrierCode"])
                instance.lineItemList = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["lineItemList"])
                return instance
            }


            // Decoder for [OrderWarehouseFulfillmentRawData]
            Decoders.addDecoder(clazz: [OrderWarehouseFulfillmentRawData].self) { (source: AnyObject) -> [OrderWarehouseFulfillmentRawData] in
                return Decoders.decode(clazz: [OrderWarehouseFulfillmentRawData].self, source: source)
            }
            // Decoder for OrderWarehouseFulfillmentRawData
            Decoders.addDecoder(clazz: OrderWarehouseFulfillmentRawData.self) { (source: AnyObject) -> OrderWarehouseFulfillmentRawData in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = OrderWarehouseFulfillmentRawData()
                instance.warehouseId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseId"])
                instance.canFulfill = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["canFulfill"])
                instance.skuMap = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["skuMap"])
                return instance
            }


            // Decoder for [OrderWarehouseFulfillmentRawSkuData]
            Decoders.addDecoder(clazz: [OrderWarehouseFulfillmentRawSkuData].self) { (source: AnyObject) -> [OrderWarehouseFulfillmentRawSkuData] in
                return Decoders.decode(clazz: [OrderWarehouseFulfillmentRawSkuData].self, source: source)
            }
            // Decoder for OrderWarehouseFulfillmentRawSkuData
            Decoders.addDecoder(clazz: OrderWarehouseFulfillmentRawSkuData.self) { (source: AnyObject) -> OrderWarehouseFulfillmentRawSkuData in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = OrderWarehouseFulfillmentRawSkuData()
                instance.quantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["quantity"])
                instance.canFulfill = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["canFulfill"])
                return instance
            }


            // Decoder for [OverrideReturnAddress]
            Decoders.addDecoder(clazz: [OverrideReturnAddress].self) { (source: AnyObject) -> [OverrideReturnAddress] in
                return Decoders.decode(clazz: [OverrideReturnAddress].self, source: source)
            }
            // Decoder for OverrideReturnAddress
            Decoders.addDecoder(clazz: OverrideReturnAddress.self) { (source: AnyObject) -> OverrideReturnAddress in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = OverrideReturnAddress()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.warehouseId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseId"])
                instance.orderSourceId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderSourceId"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.attention = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["attention"])
                instance.street = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["street"])
                instance.street2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["street2"])
                instance.street3Province = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["street3Province"])
                instance.city = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["city"])
                instance.state = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["state"])
                instance.zip = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["zip"])
                instance.country = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["country"])
                instance.phone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["phone"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [PackingSlipTemplateLineExtraDataEnum]
            Decoders.addDecoder(clazz: [PackingSlipTemplateLineExtraDataEnum].self) { (source: AnyObject) -> [PackingSlipTemplateLineExtraDataEnum] in
                return Decoders.decode(clazz: [PackingSlipTemplateLineExtraDataEnum].self, source: source)
            }
            // Decoder for PackingSlipTemplateLineExtraDataEnum
            Decoders.addDecoder(clazz: PackingSlipTemplateLineExtraDataEnum.self) { (source: AnyObject) -> PackingSlipTemplateLineExtraDataEnum in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PackingSlipTemplateLineExtraDataEnum()
                instance.id = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["id"])
                instance.label = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["label"])
                instance.fullEntityClassName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["fullEntityClassName"])
                return instance
            }


            // Decoder for [PackingSlipTemplateLineItemDescriptionEnum]
            Decoders.addDecoder(clazz: [PackingSlipTemplateLineItemDescriptionEnum].self) { (source: AnyObject) -> [PackingSlipTemplateLineItemDescriptionEnum] in
                return Decoders.decode(clazz: [PackingSlipTemplateLineItemDescriptionEnum].self, source: source)
            }
            // Decoder for PackingSlipTemplateLineItemDescriptionEnum
            Decoders.addDecoder(clazz: PackingSlipTemplateLineItemDescriptionEnum.self) { (source: AnyObject) -> PackingSlipTemplateLineItemDescriptionEnum in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PackingSlipTemplateLineItemDescriptionEnum()
                instance.id = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["id"])
                instance.label = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["label"])
                instance.fullEntityClassName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["fullEntityClassName"])
                return instance
            }


            // Decoder for [ParcelAccount]
            Decoders.addDecoder(clazz: [ParcelAccount].self) { (source: AnyObject) -> [ParcelAccount] in
                return Decoders.decode(clazz: [ParcelAccount].self, source: source)
            }
            // Decoder for ParcelAccount
            Decoders.addDecoder(clazz: ParcelAccount.self) { (source: AnyObject) -> ParcelAccount in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ParcelAccount()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.carrier = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["carrier"])
                instance.accountNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["accountNo"])
                instance.client = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["client"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.manifestPartnerId = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["manifestPartnerId"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [ParcelInvoice]
            Decoders.addDecoder(clazz: [ParcelInvoice].self) { (source: AnyObject) -> [ParcelInvoice] in
                return Decoders.decode(clazz: [ParcelInvoice].self, source: source)
            }
            // Decoder for ParcelInvoice
            Decoders.addDecoder(clazz: ParcelInvoice.self) { (source: AnyObject) -> ParcelInvoice in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ParcelInvoice()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.carrier = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["carrier"])
                instance.invoiceNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["invoiceNo"])
                instance.accountNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["accountNo"])
                instance.invoiceDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["invoiceDate"])
                instance.invoiceAmount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["invoiceAmount"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [ParcelInvoiceLine]
            Decoders.addDecoder(clazz: [ParcelInvoiceLine].self) { (source: AnyObject) -> [ParcelInvoiceLine] in
                return Decoders.decode(clazz: [ParcelInvoiceLine].self, source: source)
            }
            // Decoder for ParcelInvoiceLine
            Decoders.addDecoder(clazz: ParcelInvoiceLine.self) { (source: AnyObject) -> ParcelInvoiceLine in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ParcelInvoiceLine()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.invoiceNoId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["invoiceNoId"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.orderId = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["orderId"])
                instance.shipmentId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["shipmentId"])
                instance.trackingNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["trackingNo"])
                instance.shipDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["shipDate"])
                instance.zone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["zone"])
                instance.dim1 = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["dim1"])
                instance.dim2 = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["dim2"])
                instance.dim3 = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["dim3"])
                instance.enteredWeight = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["enteredWeight"])
                instance.actualWeight = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["actualWeight"])
                instance.billedWeight = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["billedWeight"])
                instance.enteredWeightUnit = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["enteredWeightUnit"])
                instance.actualWeightUnit = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["actualWeightUnit"])
                instance.billedWeightUnit = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billedWeightUnit"])
                instance.customerReference = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["customerReference"])
                instance.shipmentReference = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipmentReference"])
                instance.reference3 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["reference3"])
                instance.reference4 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["reference4"])
                instance.reference5 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["reference5"])
                instance.reference6 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["reference6"])
                instance.reference7 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["reference7"])
                instance.shipFromName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipFromName"])
                instance.shipFromCompany = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipFromCompany"])
                instance.shipFromStreet1 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipFromStreet1"])
                instance.shipFromStreet2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipFromStreet2"])
                instance.shipFromCity = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipFromCity"])
                instance.shipFromState = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipFromState"])
                instance.shipFromZip = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipFromZip"])
                instance.shipFromCountry = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipFromCountry"])
                instance.shipToName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToName"])
                instance.shipToCompany = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToCompany"])
                instance.shipToStreet1 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToStreet1"])
                instance.shipToStreet2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToStreet2"])
                instance.shipToCity = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToCity"])
                instance.shipToState = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToState"])
                instance.shipToZip = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToZip"])
                instance.shipToCountry = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipToCountry"])
                instance.originalShipToName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["originalShipToName"])
                instance.originalShipToCompany = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["originalShipToCompany"])
                instance.originalShipToStreet1 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["originalShipToStreet1"])
                instance.originalShipToStreet2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["originalShipToStreet2"])
                instance.originalShipToCity = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["originalShipToCity"])
                instance.originalShipToState = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["originalShipToState"])
                instance.originalShipToZip = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["originalShipToZip"])
                instance.originalShipToCountry = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["originalShipToCountry"])
                instance.thirdPartyName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["thirdPartyName"])
                instance.thirdPartyCompany = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["thirdPartyCompany"])
                instance.thirdPartyStreet1 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["thirdPartyStreet1"])
                instance.thirdPartyStreet2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["thirdPartyStreet2"])
                instance.thirdPartyCity = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["thirdPartyCity"])
                instance.thirdPartyState = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["thirdPartyState"])
                instance.thirdPartyZip = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["thirdPartyZip"])
                instance.thirdPartyCountry = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["thirdPartyCountry"])
                instance.soldToName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["soldToName"])
                instance.soldToCompany = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["soldToCompany"])
                instance.soldToStreet1 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["soldToStreet1"])
                instance.soldToStreet2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["soldToStreet2"])
                instance.soldToCity = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["soldToCity"])
                instance.soldToState = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["soldToState"])
                instance.soldToZip = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["soldToZip"])
                instance.soldToCountry = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["soldToCountry"])
                instance.freightServiceType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["freightServiceType"])
                instance.netCharges = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["netCharges"])
                instance.baseFreight = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["baseFreight"])
                instance.grossCharges = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["grossCharges"])
                instance.fuelCharge = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["fuelCharge"])
                instance.residentialCharge = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["residentialCharge"])
                instance.adultSignatureCharge = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["adultSignatureCharge"])
                instance.deliveryAreaCharge = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["deliveryAreaCharge"])
                instance.deliveryAreaChargeExtended = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["deliveryAreaChargeExtended"])
                instance.addressCorrectionCharge = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["addressCorrectionCharge"])
                instance.extraCharge1Name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extraCharge1Name"])
                instance.extraCharge1Amount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extraCharge1Amount"])
                instance.extraCharge2Name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extraCharge2Name"])
                instance.extraCharge2Amount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extraCharge2Amount"])
                instance.extraCharge3Name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extraCharge3Name"])
                instance.extraCharge3Amount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extraCharge3Amount"])
                instance.extraCharge4Name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extraCharge4Name"])
                instance.extraCharge4Amount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extraCharge4Amount"])
                instance.extraCharge5Name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extraCharge5Name"])
                instance.extraCharge5Amount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extraCharge5Amount"])
                instance.extraCharge6Name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extraCharge6Name"])
                instance.extraCharge6Amount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extraCharge6Amount"])
                instance.extraCharge7Name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extraCharge7Name"])
                instance.extraCharge7Amount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extraCharge7Amount"])
                instance.extraCharge8Name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extraCharge8Name"])
                instance.extraCharge8Amount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extraCharge8Amount"])
                instance.extraCharge9Name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extraCharge9Name"])
                instance.extraCharge9Amount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extraCharge9Amount"])
                instance.extraCharge10Name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extraCharge10Name"])
                instance.extraCharge10Amount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extraCharge10Amount"])
                instance.extraCharge11Name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extraCharge11Name"])
                instance.extraCharge11Amount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extraCharge11Amount"])
                instance.extraCharge12Name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extraCharge12Name"])
                instance.extraCharge12Amount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extraCharge12Amount"])
                instance.extraCharge13Name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extraCharge13Name"])
                instance.extraCharge13Amount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extraCharge13Amount"])
                instance.extraCharge14Name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extraCharge14Name"])
                instance.extraCharge14Amount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extraCharge14Amount"])
                instance.extraCharge15Name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extraCharge15Name"])
                instance.extraCharge15Amount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extraCharge15Amount"])
                instance.extraCharge16Name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extraCharge16Name"])
                instance.extraCharge16Amount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extraCharge16Amount"])
                instance.extraCharge17Name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extraCharge17Name"])
                instance.extraCharge17Amount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extraCharge17Amount"])
                instance.extraCharge18Name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extraCharge18Name"])
                instance.extraCharge18Amount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extraCharge18Amount"])
                instance.extraCharge19Name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extraCharge19Name"])
                instance.extraCharge19Amount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extraCharge19Amount"])
                instance.extraCharge20Name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extraCharge20Name"])
                instance.extraCharge20Amount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extraCharge20Amount"])
                instance.extraCharge21Name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extraCharge21Name"])
                instance.extraCharge21Amount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extraCharge21Amount"])
                instance.extraCharge22Name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extraCharge22Name"])
                instance.extraCharge22Amount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extraCharge22Amount"])
                instance.extraCharge23Name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extraCharge23Name"])
                instance.extraCharge23Amount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extraCharge23Amount"])
                instance.extraCharge24Name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extraCharge24Name"])
                instance.extraCharge24Amount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extraCharge24Amount"])
                instance.extraCharge25Name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extraCharge25Name"])
                instance.extraCharge25Amount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extraCharge25Amount"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [PerpetualInventoryLog]
            Decoders.addDecoder(clazz: [PerpetualInventoryLog].self) { (source: AnyObject) -> [PerpetualInventoryLog] in
                return Decoders.decode(clazz: [PerpetualInventoryLog].self, source: source)
            }
            // Decoder for PerpetualInventoryLog
            Decoders.addDecoder(clazz: PerpetualInventoryLog.self) { (source: AnyObject) -> PerpetualInventoryLog in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PerpetualInventoryLog()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.itemReceiptLocationId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["itemReceiptLocationId"])
                instance.itemReceiptId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["itemReceiptId"])
                instance.asnId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["asnId"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.legacyPoNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["legacyPoNo"])
                instance.warehouseId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseId"])
                instance.currentQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["currentQuantity"])
                instance.address = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["address"])
                instance.warehouseLocationId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseLocationId"])
                instance.locationStatus = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["locationStatus"])
                instance.orderDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["orderDate"])
                instance.receiptStatus = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["receiptStatus"])
                instance.factCost = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["factCost"])
                instance.mlCost = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["mlCost"])
                instance.sku = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sku"])
                instance.orderQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderQuantity"])
                instance.requestedDeliveryDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["requestedDeliveryDate"])
                instance.unitCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["unitCode"])
                instance.wrapCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["wrapCode"])
                instance.unitsPerWrap = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["unitsPerWrap"])
                instance.cost = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["cost"])
                instance.sell = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["sell"])
                instance.pricingPer = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pricingPer"])
                instance.maxFreight = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["maxFreight"])
                instance.chargeFreight = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["chargeFreight"])
                instance.maxOther = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["maxOther"])
                instance.distDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["distDate"])
                instance.expirationDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["expirationDate"])
                instance.voidDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["voidDate"])
                instance.freezeAction = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["freezeAction"])
                instance.revDate = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["revDate"])
                instance.artBack = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["artBack"])
                instance.origin = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["origin"])
                instance.sample = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["sample"])
                instance.sampleTo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sampleTo"])
                instance.maxOvers = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["maxOvers"])
                instance.maxUnders = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["maxUnders"])
                instance.receivedSfp = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["receivedSfp"])
                instance.budgetCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["budgetCode"])
                instance.accountingCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["accountingCode"])
                instance.taxExempt = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["taxExempt"])
                instance.capitalize = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["capitalize"])
                instance.accrual = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["accrual"])
                instance.oddQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["oddQuantity"])
                instance.freightCost = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["freightCost"])
                instance.receivedDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["receivedDate"])
                instance.receivedQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["receivedQuantity"])
                instance.fromProd = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["fromProd"])
                instance.sfpComplete = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sfpComplete"])
                instance.endQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["endQuantity"])
                instance.endVal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["endVal"])
                instance.endFact = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["endFact"])
                instance.interimQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["interimQuantity"])
                instance.interimVal = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["interimVal"])
                instance.interimFact = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["interimFact"])
                instance.lastAct = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["lastAct"])
                instance.weightPerWrap = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["weightPerWrap"])
                instance.norcs = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["norcs"])
                instance.vendorId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["vendorId"])
                instance.bsVendor = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["bsVendor"])
                instance.mlVendor = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["mlVendor"])
                instance.receiptNo = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["receiptNo"])
                instance.paidFull = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["paidFull"])
                instance.enteredBy = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["enteredBy"])
                instance.receivedBy = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["receivedBy"])
                instance.lineNo = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lineNo"])
                instance.prodLot = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["prodLot"])
                instance.productIdTag = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["productIdTag"])
                instance.unitsPerCase = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["unitsPerCase"])
                instance.caseWeight = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["caseWeight"])
                instance.height = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["height"])
                instance.width = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["width"])
                instance.length = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["length"])
                instance.dockDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["dockDate"])
                instance.impressions = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["impressions"])
                instance.asnLine = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["asnLine"])
                instance.updatedAt = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["updatedAt"])
                instance.itemForwardLotMixingRule = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemForwardLotMixingRule"])
                instance.itemStorageLotMixingRule = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemStorageLotMixingRule"])
                instance.itemForwardItemMixingRule = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemForwardItemMixingRule"])
                instance.itemStorageItemMixingRule = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemStorageItemMixingRule"])
                instance.itemAllocationRule = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemAllocationRule"])
                instance.itemBarcodeField = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemBarcodeField"])
                instance.itemWarehouseDisplayField = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemWarehouseDisplayField"])
                instance.itemProductIdTagSchemeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["itemProductIdTagSchemeId"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [PickFaceAssignment]
            Decoders.addDecoder(clazz: [PickFaceAssignment].self) { (source: AnyObject) -> [PickFaceAssignment] in
                return Decoders.decode(clazz: [PickFaceAssignment].self, source: source)
            }
            // Decoder for PickFaceAssignment
            Decoders.addDecoder(clazz: PickFaceAssignment.self) { (source: AnyObject) -> PickFaceAssignment in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PickFaceAssignment()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.warehouseId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseId"])
                instance.locationId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["locationId"])
                instance.replenishmentPoint = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["replenishmentPoint"])
                instance.maxQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["maxQuantity"])
                instance.active = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["active"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                instance.sku = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sku"])
                return instance
            }


            // Decoder for [PredefinedCarton]
            Decoders.addDecoder(clazz: [PredefinedCarton].self) { (source: AnyObject) -> [PredefinedCarton] in
                return Decoders.decode(clazz: [PredefinedCarton].self, source: source)
            }
            // Decoder for PredefinedCarton
            Decoders.addDecoder(clazz: PredefinedCarton.self) { (source: AnyObject) -> PredefinedCarton in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = PredefinedCarton()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.label = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["label"])
                instance.fullEntityClassName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["fullEntityClassName"])
                return instance
            }


            // Decoder for [ProcessOutputAPIModel]
            Decoders.addDecoder(clazz: [ProcessOutputAPIModel].self) { (source: AnyObject) -> [ProcessOutputAPIModel] in
                return Decoders.decode(clazz: [ProcessOutputAPIModel].self, source: source)
            }
            // Decoder for ProcessOutputAPIModel
            Decoders.addDecoder(clazz: ProcessOutputAPIModel.self) { (source: AnyObject) -> ProcessOutputAPIModel in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ProcessOutputAPIModel()
                instance.id = Decoders.decodeOptional(clazz: AnyObject.self, source: sourceDictionary["id"])
                instance.status = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["status"])
                instance.entity = Decoders.decodeOptional(clazz: AnyObject.self, source: sourceDictionary["entity"])
                instance.messageList = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["messageList"])
                return instance
            }


            // Decoder for [ProductType]
            Decoders.addDecoder(clazz: [ProductType].self) { (source: AnyObject) -> [ProductType] in
                return Decoders.decode(clazz: [ProductType].self, source: source)
            }
            // Decoder for ProductType
            Decoders.addDecoder(clazz: ProductType.self) { (source: AnyObject) -> ProductType in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ProductType()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.label = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["label"])
                instance.fullEntityClassName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["fullEntityClassName"])
                return instance
            }


            // Decoder for [ProductionLot]
            Decoders.addDecoder(clazz: [ProductionLot].self) { (source: AnyObject) -> [ProductionLot] in
                return Decoders.decode(clazz: [ProductionLot].self, source: source)
            }
            // Decoder for ProductionLot
            Decoders.addDecoder(clazz: ProductionLot.self) { (source: AnyObject) -> ProductionLot in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ProductionLot()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.productionLot = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["productionLot"])
                instance.quantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["quantity"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                instance.sku = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sku"])
                return instance
            }


            // Decoder for [ProductionModel]
            Decoders.addDecoder(clazz: [ProductionModel].self) { (source: AnyObject) -> [ProductionModel] in
                return Decoders.decode(clazz: [ProductionModel].self, source: source)
            }
            // Decoder for ProductionModel
            Decoders.addDecoder(clazz: ProductionModel.self) { (source: AnyObject) -> ProductionModel in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ProductionModel()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.validationFunction = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["validationFunction"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [QuickAdjustment]
            Decoders.addDecoder(clazz: [QuickAdjustment].self) { (source: AnyObject) -> [QuickAdjustment] in
                return Decoders.decode(clazz: [QuickAdjustment].self, source: source)
            }
            // Decoder for QuickAdjustment
            Decoders.addDecoder(clazz: QuickAdjustment.self) { (source: AnyObject) -> QuickAdjustment in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = QuickAdjustment()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.warehouseId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseId"])
                instance.locationId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["locationId"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.adjustmentCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["adjustmentCode"])
                instance.totalQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["totalQuantity"])
                instance.changeQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["changeQuantity"])
                instance.message = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["message"])
                instance.status = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["status"])
                instance.productIdTag = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["productIdTag"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                instance.sku = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sku"])
                return instance
            }


            // Decoder for [QuickReceipt]
            Decoders.addDecoder(clazz: [QuickReceipt].self) { (source: AnyObject) -> [QuickReceipt] in
                return Decoders.decode(clazz: [QuickReceipt].self, source: source)
            }
            // Decoder for QuickReceipt
            Decoders.addDecoder(clazz: QuickReceipt.self) { (source: AnyObject) -> QuickReceipt in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = QuickReceipt()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createdBy = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["createdBy"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.warehouseId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseId"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.sku = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sku"])
                instance.locationId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["locationId"])
                instance.quantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["quantity"])
                instance.vendorId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["vendorId"])
                instance.carrier = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["carrier"])
                instance.status = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["status"])
                instance.unitCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["unitCode"])
                instance.wrapCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["wrapCode"])
                instance.weightPerWrap = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["weightPerWrap"])
                instance.unitsPerWrap = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["unitsPerWrap"])
                instance.quantityPerInnerPack = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["quantityPerInnerPack"])
                instance.unitsPerCase = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["unitsPerCase"])
                instance.quantityPerPallet = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["quantityPerPallet"])
                instance.caseWeight = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["caseWeight"])
                instance.productionLot = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["productionLot"])
                instance.revisionDate = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["revisionDate"])
                instance.origin = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["origin"])
                instance.cartonLength = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["cartonLength"])
                instance.cartonWidth = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["cartonWidth"])
                instance.cartonHeight = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["cartonHeight"])
                instance.cost = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["cost"])
                instance.sellPrice = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["sellPrice"])
                instance.pricingPer = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pricingPer"])
                instance.generatedItemReceiptId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["generatedItemReceiptId"])
                instance.generatedASNId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["generatedASNId"])
                instance.dockDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["dockDate"])
                instance.productIdTag = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["productIdTag"])
                instance.expirationDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["expirationDate"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [ReceivingProcess]
            Decoders.addDecoder(clazz: [ReceivingProcess].self) { (source: AnyObject) -> [ReceivingProcess] in
                return Decoders.decode(clazz: [ReceivingProcess].self, source: source)
            }
            // Decoder for ReceivingProcess
            Decoders.addDecoder(clazz: ReceivingProcess.self) { (source: AnyObject) -> ReceivingProcess in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ReceivingProcess()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.warehouseId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseId"])
                instance.status = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["status"])
                instance.workBatchId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["workBatchId"])
                instance.receivingWorksheetId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["receivingWorksheetId"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [ReceivingWorksheet]
            Decoders.addDecoder(clazz: [ReceivingWorksheet].self) { (source: AnyObject) -> [ReceivingWorksheet] in
                return Decoders.decode(clazz: [ReceivingWorksheet].self, source: source)
            }
            // Decoder for ReceivingWorksheet
            Decoders.addDecoder(clazz: ReceivingWorksheet.self) { (source: AnyObject) -> ReceivingWorksheet in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ReceivingWorksheet()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.warehouseId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseId"])
                instance.poNoId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["poNoId"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.vendorId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["vendorId"])
                instance.status = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["status"])
                instance.serviceLevel = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["serviceLevel"])
                instance.receivingProcessId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["receivingProcessId"])
                instance.dockDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["dockDate"])
                instance.createdBy = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["createdBy"])
                instance.worksheetName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["worksheetName"])
                instance.carrier = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["carrier"])
                instance.onTheDock = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["onTheDock"])
                instance.autoCommit = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["autoCommit"])
                instance.lineItems = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["lineItems"])
                instance.notes = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["notes"])
                instance.workBatchId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["workBatchId"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [ReceivingWorksheetLineItem]
            Decoders.addDecoder(clazz: [ReceivingWorksheetLineItem].self) { (source: AnyObject) -> [ReceivingWorksheetLineItem] in
                return Decoders.decode(clazz: [ReceivingWorksheetLineItem].self, source: source)
            }
            // Decoder for ReceivingWorksheetLineItem
            Decoders.addDecoder(clazz: ReceivingWorksheetLineItem.self) { (source: AnyObject) -> ReceivingWorksheetLineItem in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ReceivingWorksheetLineItem()
                instance.sku = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sku"])
                instance.sku2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sku2"])
                instance.fullDescription = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["fullDescription"])
                instance.orderedQty = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderedQty"])
                instance.prevReceivedQty = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["prevReceivedQty"])
                instance.unreceivedQty = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["unreceivedQty"])
                instance.receivingQty = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["receivingQty"])
                instance.unitCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["unitCode"])
                instance.wrapCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["wrapCode"])
                instance.unitsPerWrap = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["unitsPerWrap"])
                instance.unitsPerCase = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["unitsPerCase"])
                instance.quantityPerInnerPack = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["quantityPerInnerPack"])
                instance.quantityPerPallet = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["quantityPerPallet"])
                instance.weightPerWrap = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["weightPerWrap"])
                instance.weightPerCase = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["weightPerCase"])
                instance.productionLot = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["productionLot"])
                instance.productIdTag = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["productIdTag"])
                instance.revisionDate = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["revisionDate"])
                instance.expirationDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["expirationDate"])
                instance.origin = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["origin"])
                instance.cartonLength = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["cartonLength"])
                instance.cartonWidth = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["cartonWidth"])
                instance.cartonHeight = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["cartonHeight"])
                instance.putAwayPlans = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["putAwayPlans"])
                instance.quantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["quantity"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [ReceivingWorksheetPutAwayPlan]
            Decoders.addDecoder(clazz: [ReceivingWorksheetPutAwayPlan].self) { (source: AnyObject) -> [ReceivingWorksheetPutAwayPlan] in
                return Decoders.decode(clazz: [ReceivingWorksheetPutAwayPlan].self, source: source)
            }
            // Decoder for ReceivingWorksheetPutAwayPlan
            Decoders.addDecoder(clazz: ReceivingWorksheetPutAwayPlan.self) { (source: AnyObject) -> ReceivingWorksheetPutAwayPlan in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ReceivingWorksheetPutAwayPlan()
                instance.quantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["quantity"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [RecordFile]
            Decoders.addDecoder(clazz: [RecordFile].self) { (source: AnyObject) -> [RecordFile] in
                return Decoders.decode(clazz: [RecordFile].self, source: source)
            }
            // Decoder for RecordFile
            Decoders.addDecoder(clazz: RecordFile.self) { (source: AnyObject) -> RecordFile in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = RecordFile()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.fileName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["fileName"])
                instance._extension = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extension"])
                instance.url = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["url"])
                instance.roleName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["roleName"])
                instance.label = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["label"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.printerTypeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["printerTypeId"])
                instance.userFullName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["userFullName"])
                return instance
            }


            // Decoder for [Replenishment]
            Decoders.addDecoder(clazz: [Replenishment].self) { (source: AnyObject) -> [Replenishment] in
                return Decoders.decode(clazz: [Replenishment].self, source: source)
            }
            // Decoder for Replenishment
            Decoders.addDecoder(clazz: Replenishment.self) { (source: AnyObject) -> Replenishment in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Replenishment()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.replenishmentProcess = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["replenishmentProcess"])
                instance.pickFaceAssignment = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["pickFaceAssignment"])
                instance.locationId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["locationId"])
                instance.quantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["quantity"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                instance.sku = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sku"])
                return instance
            }


            // Decoder for [ReplenishmentPlan]
            Decoders.addDecoder(clazz: [ReplenishmentPlan].self) { (source: AnyObject) -> [ReplenishmentPlan] in
                return Decoders.decode(clazz: [ReplenishmentPlan].self, source: source)
            }
            // Decoder for ReplenishmentPlan
            Decoders.addDecoder(clazz: ReplenishmentPlan.self) { (source: AnyObject) -> ReplenishmentPlan in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ReplenishmentPlan()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.warehouseId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseId"])
                instance.pickFaceAssignmentSmartFilterId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["pickFaceAssignmentSmartFilterId"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [ReplenishmentProcess]
            Decoders.addDecoder(clazz: [ReplenishmentProcess].self) { (source: AnyObject) -> [ReplenishmentProcess] in
                return Decoders.decode(clazz: [ReplenishmentProcess].self, source: source)
            }
            // Decoder for ReplenishmentProcess
            Decoders.addDecoder(clazz: ReplenishmentProcess.self) { (source: AnyObject) -> ReplenishmentProcess in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ReplenishmentProcess()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.warehouseId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseId"])
                instance.replenishmentPlanId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["replenishmentPlanId"])
                instance.status = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["status"])
                instance.estimatedWork = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["estimatedWork"])
                instance.workBatchId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["workBatchId"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [ReqManualSubstitutionInputAPIModel]
            Decoders.addDecoder(clazz: [ReqManualSubstitutionInputAPIModel].self) { (source: AnyObject) -> [ReqManualSubstitutionInputAPIModel] in
                return Decoders.decode(clazz: [ReqManualSubstitutionInputAPIModel].self, source: source)
            }
            // Decoder for ReqManualSubstitutionInputAPIModel
            Decoders.addDecoder(clazz: ReqManualSubstitutionInputAPIModel.self) { (source: AnyObject) -> ReqManualSubstitutionInputAPIModel in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ReqManualSubstitutionInputAPIModel()
                instance.orderNoList = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["orderNoList"])
                instance.originalSKU = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["originalSKU"])
                instance.originalKitSKU = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["originalKitSKU"])
                instance.originalQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["originalQuantity"])
                instance.originalComponentSKU = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["originalComponentSKU"])
                instance.newSKU = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["newSKU"])
                instance.newQuantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["newQuantity"])
                instance.editType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["editType"])
                return instance
            }


            // Decoder for [ReqParcelAccessoryData]
            Decoders.addDecoder(clazz: [ReqParcelAccessoryData].self) { (source: AnyObject) -> [ReqParcelAccessoryData] in
                return Decoders.decode(clazz: [ReqParcelAccessoryData].self, source: source)
            }
            // Decoder for ReqParcelAccessoryData
            Decoders.addDecoder(clazz: ReqParcelAccessoryData.self) { (source: AnyObject) -> ReqParcelAccessoryData in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ReqParcelAccessoryData()
                instance.accessory = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["accessory"])
                instance.amount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["amount"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [RunFulfillmentPlanInputAPIModel]
            Decoders.addDecoder(clazz: [RunFulfillmentPlanInputAPIModel].self) { (source: AnyObject) -> [RunFulfillmentPlanInputAPIModel] in
                return Decoders.decode(clazz: [RunFulfillmentPlanInputAPIModel].self, source: source)
            }
            // Decoder for RunFulfillmentPlanInputAPIModel
            Decoders.addDecoder(clazz: RunFulfillmentPlanInputAPIModel.self) { (source: AnyObject) -> RunFulfillmentPlanInputAPIModel in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = RunFulfillmentPlanInputAPIModel()
                instance.orderNoList = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["orderNoList"])
                instance.fulfillmentPlanId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["fulfillmentPlanId"])
                instance.maxSKUsPerBatch = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["maxSKUsPerBatch"])
                instance.firstPickPosition = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["firstPickPosition"])
                instance.maxCartons = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["maxCartons"])
                instance.shipDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["shipDate"])
                return instance
            }


            // Decoder for [ScheduledPlanLog]
            Decoders.addDecoder(clazz: [ScheduledPlanLog].self) { (source: AnyObject) -> [ScheduledPlanLog] in
                return Decoders.decode(clazz: [ScheduledPlanLog].self, source: source)
            }
            // Decoder for ScheduledPlanLog
            Decoders.addDecoder(clazz: ScheduledPlanLog.self) { (source: AnyObject) -> ScheduledPlanLog in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ScheduledPlanLog()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.scheduledPlanId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["scheduledPlanId"])
                instance.plan = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["plan"])
                instance.startTime = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["startTime"])
                instance.endTime = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["endTime"])
                instance.status = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["status"])
                instance.message = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["message"])
                instance.linkURL = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["linkURL"])
                instance.linkText = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["linkText"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [ServiceType]
            Decoders.addDecoder(clazz: [ServiceType].self) { (source: AnyObject) -> [ServiceType] in
                return Decoders.decode(clazz: [ServiceType].self, source: source)
            }
            // Decoder for ServiceType
            Decoders.addDecoder(clazz: ServiceType.self) { (source: AnyObject) -> ServiceType in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ServiceType()
                instance.serviceType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["serviceType"])
                instance.label = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["label"])
                instance.fullEntityClassName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["fullEntityClassName"])
                return instance
            }


            // Decoder for [Shipment]
            Decoders.addDecoder(clazz: [Shipment].self) { (source: AnyObject) -> [Shipment] in
                return Decoders.decode(clazz: [Shipment].self, source: source)
            }
            // Decoder for Shipment
            Decoders.addDecoder(clazz: Shipment.self) { (source: AnyObject) -> Shipment in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Shipment()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.shipDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["shipDate"])
                instance.deliveredDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["deliveredDate"])
                instance.trackingNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["trackingNo"])
                instance.warehouseId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseId"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.orderNo = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["orderNo"])
                instance.cartonNo = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["cartonNo"])
                instance.numberOfCartons = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["numberOfCartons"])
                instance.status = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["status"])
                instance.shipped = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["shipped"])
                instance.casebreak = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["casebreak"])
                instance.carrierServiceId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["carrierServiceId"])
                instance.dim1In = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["dim1In"])
                instance.dim2In = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["dim2In"])
                instance.dim3In = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["dim3In"])
                instance.estimatedZone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["estimatedZone"])
                instance.parcelAccountNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["parcelAccountNo"])
                instance.thirdPartyParcelAccountNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["thirdPartyParcelAccountNo"])
                instance.shipmentId = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipmentId"])
                instance.manifestId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["manifestId"])
                instance.residential = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["residential"])
                instance.billingOption = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billingOption"])
                instance.weightLbs = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["weightLbs"])
                instance.dimWeight = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["dimWeight"])
                instance.licensePlateNumber = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["licensePlateNumber"])
                instance.chargedFreightAmount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["chargedFreightAmount"])
                instance.publishedFreightAmount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["publishedFreightAmount"])
                instance.retailFreightAmount = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["retailFreightAmount"])
                instance.externalShippingSystemId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["externalShippingSystemId"])
                instance.shipmentType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shipmentType"])
                instance.carrierCompany = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["carrierCompany"])
                instance.cartonId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["cartonId"])
                instance.cartonTypeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["cartonTypeId"])
                instance.deliveryMessage = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["deliveryMessage"])
                instance.omsOrderNo = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["omsOrderNo"])
                instance.carrier = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["carrier"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [ShoppingCartConnection]
            Decoders.addDecoder(clazz: [ShoppingCartConnection].self) { (source: AnyObject) -> [ShoppingCartConnection] in
                return Decoders.decode(clazz: [ShoppingCartConnection].self, source: source)
            }
            // Decoder for ShoppingCartConnection
            Decoders.addDecoder(clazz: ShoppingCartConnection.self) { (source: AnyObject) -> ShoppingCartConnection in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ShoppingCartConnection()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.clientId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["clientId"])
                instance.nonce = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["nonce"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.orderSourceId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderSourceId"])
                instance.integrationPartnerId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["integrationPartnerId"])
                instance.connectionType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["connectionType"])
                instance.itemFilterId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["itemFilterId"])
                instance.infoplusSKUFieldToMap = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["infoplusSKUFieldToMap"])
                instance.shoppingCartSKUFieldToMap = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shoppingCartSKUFieldToMap"])
                instance.scriptId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["scriptId"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.shoppingCartStoreURL = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["shoppingCartStoreURL"])
                instance.accessCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["accessCode"])
                instance.accessToken = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["accessToken"])
                instance.username = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["username"])
                instance.password = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["password"])
                instance.defaultCarrierId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["defaultCarrierId"])
                instance.orderShipmentLevel = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orderShipmentLevel"])
                instance.createInvoices = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["createInvoices"])
                instance.syncOrders = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["syncOrders"])
                instance.syncInventory = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["syncInventory"])
                instance.syncTrackingData = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["syncTrackingData"])
                instance.syncInventoryCronString = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["syncInventoryCronString"])
                instance.fulfillAllItems = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["fulfillAllItems"])
                instance.syncInventoryLevelsLastRunTime = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["syncInventoryLevelsLastRunTime"])
                instance.syncOrdersLastRunTime = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["syncOrdersLastRunTime"])
                instance.inventoryLevelWarehouseControls = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["inventoryLevelWarehouseControls"])
                instance.warehouseList = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["warehouseList"])
                instance.inventoryLevelStoreControls = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["inventoryLevelStoreControls"])
                instance.storeList = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["storeList"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [StandardBusinessDays]
            Decoders.addDecoder(clazz: [StandardBusinessDays].self) { (source: AnyObject) -> [StandardBusinessDays] in
                return Decoders.decode(clazz: [StandardBusinessDays].self, source: source)
            }
            // Decoder for StandardBusinessDays
            Decoders.addDecoder(clazz: StandardBusinessDays.self) { (source: AnyObject) -> StandardBusinessDays in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = StandardBusinessDays()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.sunday = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["sunday"])
                instance.monday = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["monday"])
                instance.tuesday = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["tuesday"])
                instance.wednesday = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["wednesday"])
                instance.thursday = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["thursday"])
                instance.friday = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["friday"])
                instance.saturday = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["saturday"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [Store]
            Decoders.addDecoder(clazz: [Store].self) { (source: AnyObject) -> [Store] in
                return Decoders.decode(clazz: [Store].self, source: source)
            }
            // Decoder for Store
            Decoders.addDecoder(clazz: Store.self) { (source: AnyObject) -> Store in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Store()
                instance.storeName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["storeName"])
                instance.storeId = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["storeId"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [Substitution]
            Decoders.addDecoder(clazz: [Substitution].self) { (source: AnyObject) -> [Substitution] in
                return Decoders.decode(clazz: [Substitution].self, source: source)
            }
            // Decoder for Substitution
            Decoders.addDecoder(clazz: Substitution.self) { (source: AnyObject) -> Substitution in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Substitution()
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.orderSKUId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["orderSKUId"])
                instance.substituteSKUId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["substituteSKUId"])
                instance.period = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["period"])
                instance.type = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["type"])
                instance.substitutionQuantity = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["substitutionQuantity"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [Supplement]
            Decoders.addDecoder(clazz: [Supplement].self) { (source: AnyObject) -> [Supplement] in
                return Decoders.decode(clazz: [Supplement].self, source: source)
            }
            // Decoder for Supplement
            Decoders.addDecoder(clazz: Supplement.self) { (source: AnyObject) -> Supplement in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Supplement()
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.originalSKUId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["originalSKUId"])
                instance.supplementSKUId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["supplementSKUId"])
                instance.type = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["type"])
                instance.supplementQuantity = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["supplementQuantity"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [ThirdPartyParcelAccount]
            Decoders.addDecoder(clazz: [ThirdPartyParcelAccount].self) { (source: AnyObject) -> [ThirdPartyParcelAccount] in
                return Decoders.decode(clazz: [ThirdPartyParcelAccount].self, source: source)
            }
            // Decoder for ThirdPartyParcelAccount
            Decoders.addDecoder(clazz: ThirdPartyParcelAccount.self) { (source: AnyObject) -> ThirdPartyParcelAccount in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = ThirdPartyParcelAccount()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.carrier = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["carrier"])
                instance.accountNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["accountNo"])
                instance.accountName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["accountName"])
                instance.billingCompany = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["billingCompany"])
                instance.attention = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["attention"])
                instance.street1 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["street1"])
                instance.street2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["street2"])
                instance.street3 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["street3"])
                instance.city = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["city"])
                instance.state = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["state"])
                instance.country = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["country"])
                instance.zipCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["zipCode"])
                instance.phone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["phone"])
                instance.active = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["active"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [User]
            Decoders.addDecoder(clazz: [User].self) { (source: AnyObject) -> [User] in
                return Decoders.decode(clazz: [User].self, source: source)
            }
            // Decoder for User
            Decoders.addDecoder(clazz: User.self) { (source: AnyObject) -> User in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = User()
                instance.userId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["userId"])
                instance.label = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["label"])
                instance.fullEntityClassName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["fullEntityClassName"])
                return instance
            }


            // Decoder for [Vendor]
            Decoders.addDecoder(clazz: [Vendor].self) { (source: AnyObject) -> [Vendor] in
                return Decoders.decode(clazz: [Vendor].self, source: source)
            }
            // Decoder for Vendor
            Decoders.addDecoder(clazz: Vendor.self) { (source: AnyObject) -> Vendor in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Vendor()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.vendorNo = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["vendorNo"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.street = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["street"])
                instance.street2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["street2"])
                instance.city = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["city"])
                instance.state = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["state"])
                instance.country = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["country"])
                instance.zipCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["zipCode"])
                instance.contact = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["contact"])
                instance.phone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["phone"])
                instance.fax = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["fax"])
                instance.externalId = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["externalId"])
                instance.terms = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["terms"])
                instance.fob = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["fob"])
                instance.shipVia = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["shipVia"])
                instance.requestDays = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["requestDays"])
                instance.actualDays = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["actualDays"])
                instance.salesTaxCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["salesTaxCode"])
                instance.product1 = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["product1"])
                instance.product2 = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["product2"])
                instance.product3 = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["product3"])
                instance.product4 = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["product4"])
                instance.product5 = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["product5"])
                instance.product6 = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["product6"])
                instance.product7 = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["product7"])
                instance.product8 = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["product8"])
                instance.product9 = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["product9"])
                instance.podDays = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["podDays"])
                instance.chargeOut = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["chargeOut"])
                instance.arEmail = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["arEmail"])
                instance.orderEmail = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orderEmail"])
                instance.orderAttach = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["orderAttach"])
                instance.sendQuantityType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sendQuantityType"])
                instance.minority = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["minority"])
                instance.sendOutside = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sendOutside"])
                instance.podOrderSuffix = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["podOrderSuffix"])
                instance.podEmail = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["podEmail"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.inactive = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["inactive"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [VendorComplianceSurvey]
            Decoders.addDecoder(clazz: [VendorComplianceSurvey].self) { (source: AnyObject) -> [VendorComplianceSurvey] in
                return Decoders.decode(clazz: [VendorComplianceSurvey].self, source: source)
            }
            // Decoder for VendorComplianceSurvey
            Decoders.addDecoder(clazz: VendorComplianceSurvey.self) { (source: AnyObject) -> VendorComplianceSurvey in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = VendorComplianceSurvey()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.worksheetId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["worksheetId"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.surveyQuestions = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["surveyQuestions"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [Warehouse]
            Decoders.addDecoder(clazz: [Warehouse].self) { (source: AnyObject) -> [Warehouse] in
                return Decoders.decode(clazz: [Warehouse].self, source: source)
            }
            // Decoder for Warehouse
            Decoders.addDecoder(clazz: Warehouse.self) { (source: AnyObject) -> Warehouse in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Warehouse()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.client = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["client"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.address = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["address"])
                instance.company = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["company"])
                instance.street1 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["street1"])
                instance.street2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["street2"])
                instance.street3 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["street3"])
                instance.city = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["city"])
                instance.state = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["state"])
                instance.zip = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["zip"])
                instance.country = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["country"])
                instance.phone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["phone"])
                instance.locationBarcodePrefix = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["locationBarcodePrefix"])
                instance.lpnPrefix = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["lpnPrefix"])
                instance.timeZone = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["timeZone"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [WarehouseDocument]
            Decoders.addDecoder(clazz: [WarehouseDocument].self) { (source: AnyObject) -> [WarehouseDocument] in
                return Decoders.decode(clazz: [WarehouseDocument].self, source: source)
            }
            // Decoder for WarehouseDocument
            Decoders.addDecoder(clazz: WarehouseDocument.self) { (source: AnyObject) -> WarehouseDocument in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = WarehouseDocument()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.documentType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["documentType"])
                instance.clientId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["clientId"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.description = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["description"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [WarehouseDocumentType]
            Decoders.addDecoder(clazz: [WarehouseDocumentType].self) { (source: AnyObject) -> [WarehouseDocumentType] in
                return Decoders.decode(clazz: [WarehouseDocumentType].self, source: source)
            }
            // Decoder for WarehouseDocumentType
            Decoders.addDecoder(clazz: WarehouseDocumentType.self) { (source: AnyObject) -> WarehouseDocumentType in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = WarehouseDocumentType()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [WarehouseServiceType]
            Decoders.addDecoder(clazz: [WarehouseServiceType].self) { (source: AnyObject) -> [WarehouseServiceType] in
                return Decoders.decode(clazz: [WarehouseServiceType].self, source: source)
            }
            // Decoder for WarehouseServiceType
            Decoders.addDecoder(clazz: WarehouseServiceType.self) { (source: AnyObject) -> WarehouseServiceType in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = WarehouseServiceType()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.description = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["description"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [Work]
            Decoders.addDecoder(clazz: [Work].self) { (source: AnyObject) -> [Work] in
                return Decoders.decode(clazz: [Work].self, source: source)
            }
            // Decoder for Work
            Decoders.addDecoder(clazz: Work.self) { (source: AnyObject) -> Work in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Work()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.sourceWarehouseId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["sourceWarehouseId"])
                instance.sourceBuildingId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["sourceBuildingId"])
                instance.sourceLocation = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sourceLocation"])
                instance.destinationWarehouseId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["destinationWarehouseId"])
                instance.destinationBuildingId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["destinationBuildingId"])
                instance.destinationLocation = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["destinationLocation"])
                instance.type = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["type"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.priorityCode = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["priorityCode"])
                instance.userDefinedMessage = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["userDefinedMessage"])
                instance.status = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["status"])
                instance.userId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["userId"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.workBatchId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["workBatchId"])
                instance.workProductList = Decoders.decodeOptional(clazz: Array.self, source: sourceDictionary["workProductList"])
                instance.fulfillmentProcessId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["fulfillmentProcessId"])
                instance.pickLineId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["pickLineId"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [WorkActivity]
            Decoders.addDecoder(clazz: [WorkActivity].self) { (source: AnyObject) -> [WorkActivity] in
                return Decoders.decode(clazz: [WorkActivity].self, source: source)
            }
            // Decoder for WorkActivity
            Decoders.addDecoder(clazz: WorkActivity.self) { (source: AnyObject) -> WorkActivity in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = WorkActivity()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.importedRecordId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["importedRecordId"])
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.userId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["userId"])
                instance.email = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["email"])
                instance.type = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["type"])
                instance.typeName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["typeName"])
                instance.status = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["status"])
                instance.statusName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["statusName"])
                instance.workBatchId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["workBatchId"])
                instance.workParentId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["workParentId"])
                instance.priorityCode = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["priorityCode"])
                instance.foreignId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["foreignId"])
                instance.sourceWarehouseId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["sourceWarehouseId"])
                instance.sourceWarehouseName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sourceWarehouseName"])
                instance.sourceLocation = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sourceLocation"])
                instance.sourceBuildingId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["sourceBuildingId"])
                instance.sourceBuildingName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sourceBuildingName"])
                instance.sourceZoneId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["sourceZoneId"])
                instance.sourceZoneName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sourceZoneName"])
                instance.sourceAisleId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["sourceAisleId"])
                instance.sourceAisleAddress = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sourceAisleAddress"])
                instance.sourceOrigin = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["sourceOrigin"])
                instance.sourceOriginName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sourceOriginName"])
                instance.sourceBillingTypeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["sourceBillingTypeId"])
                instance.sourceBillingTypeName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sourceBillingTypeName"])
                instance.sourceBehaviorType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sourceBehaviorType"])
                instance.sourceBehaviorTypeName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sourceBehaviorTypeName"])
                instance.sourceFootprintId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["sourceFootprintId"])
                instance.sourceFootprintName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sourceFootprintName"])
                instance.sourceFootprintHeight = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["sourceFootprintHeight"])
                instance.sourceFootprintWidth = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["sourceFootprintWidth"])
                instance.sourceFootprintDepth = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["sourceFootprintDepth"])
                instance.sourceAddressSchemeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["sourceAddressSchemeId"])
                instance.sourceAddressSchemeName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sourceAddressSchemeName"])
                instance.sourceLevel = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["sourceLevel"])
                instance.sourceBay = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["sourceBay"])
                instance.sourceNumber = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["sourceNumber"])
                instance.sourceOnline = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["sourceOnline"])
                instance.sourcePriorityCode = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["sourcePriorityCode"])
                instance.sourceCost = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["sourceCost"])
                instance.sourceAllowItemMixing = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["sourceAllowItemMixing"])
                instance.destinationWarehouseId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["destinationWarehouseId"])
                instance.destinationWarehouseName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["destinationWarehouseName"])
                instance.destinationLocation = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["destinationLocation"])
                instance.destinationBuildingId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["destinationBuildingId"])
                instance.destinationBuildingName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["destinationBuildingName"])
                instance.destinationZoneId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["destinationZoneId"])
                instance.destinationZoneName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["destinationZoneName"])
                instance.destinationAisleId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["destinationAisleId"])
                instance.destinationAisleAddress = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["destinationAisleAddress"])
                instance.destinationOrigin = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["destinationOrigin"])
                instance.destinationOriginName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["destinationOriginName"])
                instance.destinationBillingTypeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["destinationBillingTypeId"])
                instance.destinationBillingTypeName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["destinationBillingTypeName"])
                instance.destinationBehaviorType = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["destinationBehaviorType"])
                instance.destinationBehaviorTypeName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["destinationBehaviorTypeName"])
                instance.destinationFootprintId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["destinationFootprintId"])
                instance.destinationFootprintName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["destinationFootprintName"])
                instance.destinationFootprintHeight = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["destinationFootprintHeight"])
                instance.destinationFootprintWidth = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["destinationFootprintWidth"])
                instance.destinationFootprintDepth = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["destinationFootprintDepth"])
                instance.destinationAddressSchemeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["destinationAddressSchemeId"])
                instance.destinationAddressSchemeName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["destinationAddressSchemeName"])
                instance.destinationLevel = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["destinationLevel"])
                instance.destinationBay = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["destinationBay"])
                instance.destinationNumber = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["destinationNumber"])
                instance.destinationOnline = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["destinationOnline"])
                instance.destinationPriorityCode = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["destinationPriorityCode"])
                instance.destinationCost = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["destinationCost"])
                instance.destinationAllowItemMixing = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["destinationAllowItemMixing"])
                instance.workCreateDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["workCreateDate"])
                instance.workModifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["workModifyDate"])
                instance.masterRef = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["masterRef"])
                instance.weightPerWrap = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["weightPerWrap"])
                instance.sku = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sku"])
                instance.numericSortOrder = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["numericSortOrder"])
                instance.itemDescription = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemDescription"])
                instance.additionalDescription = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["additionalDescription"])
                instance.unitCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["unitCode"])
                instance.wrapCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["wrapCode"])
                instance.unitsPerWrap = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["unitsPerWrap"])
                instance.quantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["quantity"])
                instance.numberOfWraps = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["numberOfWraps"])
                instance.numberOfCases = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["numberOfCases"])
                instance.pickTouches = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["pickTouches"])
                instance.classRestriction = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["classRestriction"])
                instance.maxCycle = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["maxCycle"])
                instance.maxInterim = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["maxInterim"])
                instance.seasonalItem = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["seasonalItem"])
                instance.secure = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["secure"])
                instance.productType = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["productType"])
                instance.itemStatus = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemStatus"])
                instance.overallLeadTime = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["overallLeadTime"])
                instance.overallFixedReorderPoint = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["overallFixedReorderPoint"])
                instance.qualityControlIndicator = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["qualityControlIndicator"])
                instance.lotControlFlag = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["lotControlFlag"])
                instance.productCodeFlag = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["productCodeFlag"])
                instance.chargeCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["chargeCode"])
                instance.podRevDate = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["podRevDate"])
                instance.podOrderSuffix = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["podOrderSuffix"])
                instance.serialCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["serialCode"])
                instance.assetCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["assetCode"])
                instance.backorder = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["backorder"])
                instance.absoluteMax = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["absoluteMax"])
                instance.accountCodeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["accountCodeId"])
                instance.summaryCodeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["summaryCodeId"])
                instance.lowStockContactId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lowStockContactId"])
                instance.legacyLowLevelContactId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["legacyLowLevelContactId"])
                instance.lowStockCodeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lowStockCodeId"])
                instance.majorGroupId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["majorGroupId"])
                instance.subGroupId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["subGroupId"])
                instance.productCodeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["productCodeId"])
                instance.buyerId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["buyerId"])
                instance.vendorSKU = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["vendorSKU"])
                instance.upc = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["upc"])
                instance.packingSlipDescription = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["packingSlipDescription"])
                instance.commodityCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["commodityCode"])
                instance.compCode = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["compCode"])
                instance.criticalAmount = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["criticalAmount"])
                instance.listPrice = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["listPrice"])
                instance.outsideVendor = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["outsideVendor"])
                instance.pickNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["pickNo"])
                instance.requiresProductionLot = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["requiresProductionLot"])
                instance.sector = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sector"])
                instance.voidDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["voidDate"])
                instance.extrinsicText1 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extrinsicText1"])
                instance.extrinsicText2 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extrinsicText2"])
                instance.extrinsicText3 = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["extrinsicText3"])
                instance.extrinsicNumber1 = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["extrinsicNumber1"])
                instance.extrinsicNumber2 = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["extrinsicNumber2"])
                instance.extrinsicDecimal1 = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extrinsicDecimal1"])
                instance.extrinsicDecimal2 = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extrinsicDecimal2"])
                instance.casebreakEnabled = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["casebreakEnabled"])
                instance.alcoholTypeId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["alcoholTypeId"])
                instance.alcoholTypeName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholTypeName"])
                instance.alcoholContent = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["alcoholContent"])
                instance.alcoholContainerId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["alcoholContainerId"])
                instance.alcoholContainerName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholContainerName"])
                instance.alcoholContainerVolume = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["alcoholContainerVolume"])
                instance.alcoholVintageYear = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholVintageYear"])
                instance.alcoholCountryId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["alcoholCountryId"])
                instance.alcoholCountryName = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholCountryName"])
                instance.alcoholState = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholState"])
                instance.alcoholRegion = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholRegion"])
                instance.alcoholBrand = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholBrand"])
                instance.alcoholUPCCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholUPCCode"])
                instance.alcoholNABCACode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholNABCACode"])
                instance.alcoholUNIMERCCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholUNIMERCCode"])
                instance.alcoholSCCCode = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["alcoholSCCCode"])
                instance.billingQuantity = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["billingQuantity"])
                instance.chargeRate = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["chargeRate"])
                instance.extendedCharge = Decoders.decodeOptional(clazz: Double.self, source: sourceDictionary["extendedCharge"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [WorkBatch]
            Decoders.addDecoder(clazz: [WorkBatch].self) { (source: AnyObject) -> [WorkBatch] in
                return Decoders.decode(clazz: [WorkBatch].self, source: source)
            }
            // Decoder for WorkBatch
            Decoders.addDecoder(clazz: WorkBatch.self) { (source: AnyObject) -> WorkBatch in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = WorkBatch()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.warehouseId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseId"])
                instance.batchPriorityCode = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["batchPriorityCode"])
                instance.description = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["description"])
                instance.assignedUserId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["assignedUserId"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [WorkProduct]
            Decoders.addDecoder(clazz: [WorkProduct].self) { (source: AnyObject) -> [WorkProduct] in
                return Decoders.decode(clazz: [WorkProduct].self, source: source)
            }
            // Decoder for WorkProduct
            Decoders.addDecoder(clazz: WorkProduct.self) { (source: AnyObject) -> WorkProduct in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = WorkProduct()
                instance.lobId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["lobId"])
                instance.sku = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["sku"])
                instance.itemDescription = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["itemDescription"])
                instance.poNo = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["poNo"])
                instance.quantity = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["quantity"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }


            // Decoder for [Zone]
            Decoders.addDecoder(clazz: [Zone].self) { (source: AnyObject) -> [Zone] in
                return Decoders.decode(clazz: [Zone].self, source: source)
            }
            // Decoder for Zone
            Decoders.addDecoder(clazz: Zone.self) { (source: AnyObject) -> Zone in
                let sourceDictionary = source as! [NSObject:AnyObject]
                let instance = Zone()
                instance.id = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["id"])
                instance.warehouseId = Decoders.decodeOptional(clazz: Int32.self, source: sourceDictionary["warehouseId"])
                instance.name = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["name"])
                instance.address = Decoders.decodeOptional(clazz: String.self, source: sourceDictionary["address"])
                instance.isClimateControlled = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["isClimateControlled"])
                instance.isFoodGrade = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["isFoodGrade"])
                instance.isSecure = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["isSecure"])
                instance.isFrozen = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["isFrozen"])
                instance.isRefrigerated = Decoders.decodeOptional(clazz: Bool.self, source: sourceDictionary["isRefrigerated"])
                instance.createDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["createDate"])
                instance.modifyDate = Decoders.decodeOptional(clazz: NSDate.self, source: sourceDictionary["modifyDate"])
                instance.customFields = Decoders.decodeOptional(clazz: Dictionary.self, source: sourceDictionary["customFields"])
                return instance
            }
        }
    }
}
