//
// GS1128LabelDTO.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public class GS1128LabelDTO: JSONEncodable {
    public var id: Int32?
    public var createDate: NSDate?
    public var gs1128TemplateId: Int32?
    public var noOfCopies: Int32?
    public var lobId: Int32?
    public var orderNo: Double?
    public var recordType: String?
    public var palletLoadId: Int32?
    public var masterCartonLoadId: Int32?
    public var cartonId: Int32?
    public var lineItemId: Int32?
    public var lineItemUnitNo: Int32?
    public var modifyDate: NSDate?
    public var sscc: String?
    public var customFields: [String:AnyObject]?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["id"] = self.id?.encodeToJSON()
        nillableDictionary["createDate"] = self.createDate?.encodeToJSON()
        nillableDictionary["gs1128TemplateId"] = self.gs1128TemplateId?.encodeToJSON()
        nillableDictionary["noOfCopies"] = self.noOfCopies?.encodeToJSON()
        nillableDictionary["lobId"] = self.lobId?.encodeToJSON()
        nillableDictionary["orderNo"] = self.orderNo
        nillableDictionary["recordType"] = self.recordType
        nillableDictionary["palletLoadId"] = self.palletLoadId?.encodeToJSON()
        nillableDictionary["masterCartonLoadId"] = self.masterCartonLoadId?.encodeToJSON()
        nillableDictionary["cartonId"] = self.cartonId?.encodeToJSON()
        nillableDictionary["lineItemId"] = self.lineItemId?.encodeToJSON()
        nillableDictionary["lineItemUnitNo"] = self.lineItemUnitNo?.encodeToJSON()
        nillableDictionary["modifyDate"] = self.modifyDate?.encodeToJSON()
        nillableDictionary["sscc"] = self.sscc
        nillableDictionary["customFields"] = self.customFields?.encodeToJSON()
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
